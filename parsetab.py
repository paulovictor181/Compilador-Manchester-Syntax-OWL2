
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasse : CLASS CLASS_IDENTIFIER EQUIVALENTTO def_descriptionsdef_descriptions : CLASS_IDENTIFIER\n                        | CLASS_IDENTIFIER AND def_descriptions\n                        | CLASS_IDENTIFIER OR def_descriptions\n                        | PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER\n                        | OPEN_PAREN def_descriptions CLOSE_PAREN'
    
_lr_action_items = {'CLASS':([0,],[2,]),'$end':([1,5,6,18,19,20,21,22,26,27,28,29,],[0,-2,-1,-3,-4,-5,-6,-7,-11,-8,-9,-10,]),'CLASS_IDENTIFIER':([2,4,8,9,10,11,12,13,23,24,25,],[3,5,5,5,5,20,21,22,27,28,29,]),'EQUIVALENTTO':([3,],[4,]),'PROPERTY_IDENTIFIER':([4,8,9,10,],[7,7,7,7,]),'OPEN_PAREN':([4,8,9,10,],[8,8,8,8,]),'CLOSE_PAREN':([5,17,18,19,20,21,22,26,27,28,29,],[-2,26,-3,-4,-5,-6,-7,-11,-8,-9,-10,]),'AND':([5,],[9,]),'OR':([5,],[10,]),'SOME':([7,],[11,]),'ALL':([7,],[12,]),'VALUE':([7,],[13,]),'MIN':([7,],[14,]),'MAX':([7,],[15,]),'EXACTLY':([7,],[16,]),'CARDINALITY':([14,15,16,],[23,24,25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classe':([0,],[1,]),'def_descriptions':([4,8,9,10,],[6,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classe","S'",1,None,None,None),
  ('classe -> CLASS CLASS_IDENTIFIER EQUIVALENTTO def_descriptions','classe',4,'p_classe_definida','paser.py',5),
  ('def_descriptions -> CLASS_IDENTIFIER','def_descriptions',1,'p_def_descriptions','paser.py',13),
  ('def_descriptions -> CLASS_IDENTIFIER AND def_descriptions','def_descriptions',3,'p_def_descriptions','paser.py',14),
  ('def_descriptions -> CLASS_IDENTIFIER OR def_descriptions','def_descriptions',3,'p_def_descriptions','paser.py',15),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','paser.py',16),
  ('def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','paser.py',17),
  ('def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','paser.py',18),
  ('def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','paser.py',19),
  ('def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','paser.py',20),
  ('def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','paser.py',21),
  ('def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN','def_descriptions',3,'p_def_descriptions','paser.py',22),
]
