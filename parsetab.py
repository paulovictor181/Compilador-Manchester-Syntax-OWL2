
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES DISJOINtWITH EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT ONLY OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasses : defined_class \n               | defined_class classes\n               | primitive_class \n               | primitive_class classes\n               primitive_class : CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_sectionsubclass_section : SUBCLASSOF quantifier_aux\n                        | SUBCLASSOF enum_class\n                        | SUBCLASSOF OR covered_class\n                        | SUBCLASSOF CLASS_IDENTIFIER \n                        disjoint_section : DISJOINTCLASSES quantifier_aux\n                        | emptydisjoint_classes_list : CLASS_IDENTIFIER\n                             | CLASS_IDENTIFIER COMMA disjoint_classes_listdefined_class : CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section\n                     | CLASS CLASS_IDENTIFIER equivalentto_sectionenum_class : OPEN_CURLY individuals CLOSE_CURLYcovered_class : CLASS_IDENTIFIER OR covered_class\n                     | CLASS_IDENTIFIER\n                aux_fechamento : OPEN_PAREN PROPERTY_IDENTIFIER aux_fechamento\n                      | OR PROPERTY_IDENTIFIER aux_fechamento\n                      | PROPERTY_IDENTIFIER CLOSE_PARENequivalentto_section : EQUIVALENTTO enum_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER OR covered_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER def_descriptions\n    def_descriptions : quantifier_aux            \n    aninhada : PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux CLOSE_PAREN              \n       \n                quantifier_aux : comma_and OPEN_PAREN aninhada CLOSE_PAREN\n                      | comma_and quantifier_aux\n                      | OPEN_PAREN quantifier_aux CLOSE_PAREN\n                      | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER quantifier namespace_type                 \n                      | quantifier_aux comma_and quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER OR quantifier_aux\n                      | CLASS_IDENTIFIER comma_and quantifier_aux\n                      | CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER\n    quantifier : SOME\n                  | ALL\n                  | VALUE\n                  | MAX\n                  | MIN\n                  | EXACTLY\n                  | THAT\n                  sizecheck : EQUAL CARDINALITY\n                  | GREATER_THAN CARDINALITY\n                  | LESS_THAN CARDINALITY\n                  | GREATER_THAN EQUAL CARDINALITY\n                  | LESS_THAN EQUAL CARDINALITYnamespace_type : NAMESPACE TYPE\n                      | NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKETindividuals_section : INDIVIDUALS individuals\n                           | emptyindividuals : INDIVIDUAL_NAME\n                   | INDIVIDUAL_NAME COMMA individualscomma_and : COMMA\n                     | ANDempty :'
    
_lr_action_items = {'CLASS':([0,2,3,8,9,12,13,15,16,19,20,22,25,28,30,31,32,33,35,36,38,40,41,53,56,57,58,60,62,63,64,67,68,69,70,72,73,74,76,85,],[4,4,4,-15,-59,-59,-59,-11,-22,-6,-7,-9,-38,-14,-54,-5,-10,-37,-24,-25,-55,-8,-18,-28,-53,-23,-16,-32,-34,-35,-36,-29,-30,-31,-33,-56,-17,-27,-51,-52,]),'$end':([1,2,3,5,6,8,9,12,13,15,16,19,20,22,25,28,30,31,32,33,35,36,38,40,41,53,56,57,58,60,62,63,64,67,68,69,70,72,73,74,76,85,],[0,-1,-3,-2,-4,-15,-59,-59,-59,-11,-22,-6,-7,-9,-38,-14,-54,-5,-10,-37,-24,-25,-55,-8,-18,-28,-53,-23,-16,-32,-34,-35,-36,-29,-30,-31,-33,-56,-17,-27,-51,-52,]),'CLASS_IDENTIFIER':([4,10,11,14,17,21,23,24,26,27,34,39,42,43,44,45,46,47,48,49,50,51,52,55,61,75,77,],[7,17,22,33,33,41,33,33,-57,-58,41,33,33,33,33,-39,-40,-41,-42,-43,-44,-45,33,68,41,68,33,]),'EQUIVALENTTO':([7,],[10,]),'SUBCLASSOF':([7,8,16,25,33,35,36,41,53,57,58,60,62,63,64,67,68,69,70,73,74,76,85,],[11,11,-22,-38,-37,-24,-25,-18,-28,-23,-16,-32,-34,-35,-36,-29,-30,-31,-33,-17,-27,-51,-52,]),'DISJOINTCLASSES':([9,19,20,22,25,33,40,41,53,58,60,62,63,64,67,68,69,70,73,74,76,85,],[14,-6,-7,-9,-38,-37,-8,-18,-28,-16,-32,-34,-35,-36,-29,-30,-31,-33,-17,-27,-51,-52,]),'INDIVIDUALS':([9,12,13,15,19,20,22,25,32,33,40,41,53,58,60,62,63,64,67,68,69,70,73,74,76,85,],[-59,29,29,-11,-6,-7,-9,-38,-10,-37,-8,-18,-28,-16,-32,-34,-35,-36,-29,-30,-31,-33,-17,-27,-51,-52,]),'OPEN_CURLY':([10,11,],[18,18,]),'OR':([11,17,22,33,41,68,],[21,34,43,43,61,43,]),'OPEN_PAREN':([11,14,17,23,24,26,27,39,42,43,44,45,46,47,48,49,50,51,52,55,75,77,],[24,24,24,52,24,-57,-58,24,24,24,24,-39,-40,-41,-42,-43,-44,-45,24,24,77,24,]),'PROPERTY_IDENTIFIER':([11,14,17,23,24,26,27,39,42,43,44,45,46,47,48,49,50,51,52,55,75,77,],[25,25,25,25,25,-57,-58,25,25,25,25,-39,-40,-41,-42,-43,-44,-45,66,25,25,25,]),'COMMA':([11,14,17,19,22,23,24,25,26,27,32,33,36,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,63,64,66,67,68,69,70,74,75,76,77,79,84,85,],[26,26,26,26,26,26,26,-38,-57,-58,26,26,26,59,26,26,26,26,-39,-40,-41,-42,-43,-44,-45,26,26,26,26,26,26,26,26,-38,-29,26,-31,26,-27,26,-51,26,26,-29,-52,]),'AND':([11,14,17,19,22,23,24,25,26,27,32,33,36,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,62,63,64,66,67,68,69,70,74,75,76,77,79,84,85,],[27,27,27,27,27,27,27,-38,-57,-58,27,27,27,27,27,27,27,-39,-40,-41,-42,-43,-44,-45,27,27,27,27,27,27,27,27,-38,-29,27,-31,27,-27,27,-51,27,27,-29,-52,]),'INDIVIDUAL_NAME':([18,29,59,],[38,38,38,]),'SOME':([22,25,33,66,68,],[45,45,45,45,45,]),'ALL':([22,25,33,66,68,],[46,46,46,46,46,]),'VALUE':([22,25,33,66,68,],[47,47,47,47,47,]),'MAX':([22,25,33,66,68,],[48,48,48,48,48,]),'MIN':([22,25,33,66,68,],[49,49,49,49,49,]),'EXACTLY':([22,25,33,66,68,],[50,50,50,50,50,]),'THAT':([22,25,33,66,68,],[51,51,51,51,51,]),'CLOSE_PAREN':([25,33,53,54,60,62,63,64,65,66,67,68,69,70,74,76,79,84,85,],[-38,-37,-28,67,-32,-34,-35,-36,74,-38,-29,-30,-31,-33,-27,-51,84,-26,-52,]),'CLOSE_CURLY':([37,38,72,],[58,-55,-56,]),'NAMESPACE':([45,46,47,48,49,50,51,55,75,],[-39,-40,-41,-42,-43,-44,-45,71,71,]),'TYPE':([71,],[76,]),'OPEN_BRACKET':([76,],[78,]),'EQUAL':([78,82,83,],[81,88,90,]),'GREATER_THAN':([78,],[82,]),'LESS_THAN':([78,],[83,]),'CLOSE_BRACKET':([80,86,87,89,91,92,],[85,-46,-47,-48,-49,-50,]),'CARDINALITY':([81,82,83,88,90,],[86,87,89,91,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classes':([0,2,3,],[1,5,6,]),'defined_class':([0,2,3,],[2,2,2,]),'primitive_class':([0,2,3,],[3,3,3,]),'equivalentto_section':([7,],[8,]),'subclass_section':([7,8,],[9,12,]),'disjoint_section':([9,],[13,]),'empty':([9,12,13,],[15,30,30,]),'enum_class':([10,11,],[16,20,]),'quantifier_aux':([11,14,17,23,24,39,42,43,44,52,55,75,77,],[19,32,36,53,54,60,62,63,64,54,70,70,79,]),'comma_and':([11,14,17,19,22,23,24,32,33,36,39,42,43,44,52,53,54,55,60,62,63,64,68,70,75,77,79,],[23,23,23,39,44,23,23,39,44,39,23,23,23,23,23,39,39,23,39,39,39,39,44,39,23,23,39,]),'individuals_section':([12,13,],[28,31,]),'def_descriptions':([17,],[35,]),'individuals':([18,29,59,],[37,56,72,]),'covered_class':([21,34,61,],[40,57,73,]),'quantifier':([22,25,33,66,68,],[42,55,42,75,42,]),'aninhada':([52,],[65,]),'namespace_type':([55,75,],[69,69,]),'sizecheck':([78,],[80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classes","S'",1,None,None,None),
  ('classes -> defined_class','classes',1,'p_classes','parser.py',8),
  ('classes -> defined_class classes','classes',2,'p_classes','parser.py',9),
  ('classes -> primitive_class','classes',1,'p_classes','parser.py',10),
  ('classes -> primitive_class classes','classes',2,'p_classes','parser.py',11),
  ('primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section','primitive_class',5,'p_primitive_class','parser.py',19),
  ('subclass_section -> SUBCLASSOF quantifier_aux','subclass_section',2,'p_subclass_section','parser.py',29),
  ('subclass_section -> SUBCLASSOF enum_class','subclass_section',2,'p_subclass_section','parser.py',30),
  ('subclass_section -> SUBCLASSOF OR covered_class','subclass_section',3,'p_subclass_section','parser.py',31),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER','subclass_section',2,'p_subclass_section','parser.py',32),
  ('disjoint_section -> DISJOINTCLASSES quantifier_aux','disjoint_section',2,'p_disjoint_section','parser.py',40),
  ('disjoint_section -> empty','disjoint_section',1,'p_disjoint_section','parser.py',41),
  ('disjoint_classes_list -> CLASS_IDENTIFIER','disjoint_classes_list',1,'p_disjoint_classes_list','parser.py',48),
  ('disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list','disjoint_classes_list',3,'p_disjoint_classes_list','parser.py',49),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section','defined_class',5,'p_defined_class','parser.py',57),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section','defined_class',3,'p_defined_class','parser.py',58),
  ('enum_class -> OPEN_CURLY individuals CLOSE_CURLY','enum_class',3,'p_enum_class','parser.py',87),
  ('covered_class -> CLASS_IDENTIFIER OR covered_class','covered_class',3,'p_covered_class','parser.py',101),
  ('covered_class -> CLASS_IDENTIFIER','covered_class',1,'p_covered_class','parser.py',102),
  ('aux_fechamento -> OPEN_PAREN PROPERTY_IDENTIFIER aux_fechamento','aux_fechamento',3,'p_aux_fechamento','parser.py',122),
  ('aux_fechamento -> OR PROPERTY_IDENTIFIER aux_fechamento','aux_fechamento',3,'p_aux_fechamento','parser.py',123),
  ('aux_fechamento -> PROPERTY_IDENTIFIER CLOSE_PAREN','aux_fechamento',2,'p_aux_fechamento','parser.py',124),
  ('equivalentto_section -> EQUIVALENTTO enum_class','equivalentto_section',2,'p_equivalentto_section','parser.py',157),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class','equivalentto_section',4,'p_equivalentto_section','parser.py',158),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER def_descriptions','equivalentto_section',3,'p_equivalentto_section','parser.py',159),
  ('def_descriptions -> quantifier_aux','def_descriptions',1,'p_def_descriptions','parser.py',170),
  ('aninhada -> PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux CLOSE_PAREN','aninhada',5,'p_aninhada','parser.py',176),
  ('quantifier_aux -> comma_and OPEN_PAREN aninhada CLOSE_PAREN','quantifier_aux',4,'p_quantifier_aux','parser.py',195),
  ('quantifier_aux -> comma_and quantifier_aux','quantifier_aux',2,'p_quantifier_aux','parser.py',196),
  ('quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN','quantifier_aux',3,'p_quantifier_aux','parser.py',197),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER','quantifier_aux',3,'p_quantifier_aux','parser.py',198),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux',3,'p_quantifier_aux','parser.py',199),
  ('quantifier_aux -> quantifier_aux comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',200),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',201),
  ('quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',202),
  ('quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',203),
  ('quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',204),
  ('quantifier_aux -> CLASS_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',205),
  ('quantifier_aux -> PROPERTY_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',206),
  ('quantifier -> SOME','quantifier',1,'p_quantifier','parser.py',221),
  ('quantifier -> ALL','quantifier',1,'p_quantifier','parser.py',222),
  ('quantifier -> VALUE','quantifier',1,'p_quantifier','parser.py',223),
  ('quantifier -> MAX','quantifier',1,'p_quantifier','parser.py',224),
  ('quantifier -> MIN','quantifier',1,'p_quantifier','parser.py',225),
  ('quantifier -> EXACTLY','quantifier',1,'p_quantifier','parser.py',226),
  ('quantifier -> THAT','quantifier',1,'p_quantifier','parser.py',227),
  ('sizecheck -> EQUAL CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',233),
  ('sizecheck -> GREATER_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',234),
  ('sizecheck -> LESS_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',235),
  ('sizecheck -> GREATER_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',236),
  ('sizecheck -> LESS_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',237),
  ('namespace_type -> NAMESPACE TYPE','namespace_type',2,'p_namespace_type','parser.py',251),
  ('namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET','namespace_type',5,'p_namespace_type','parser.py',252),
  ('individuals_section -> INDIVIDUALS individuals','individuals_section',2,'p_individuals_section','parser.py',257),
  ('individuals_section -> empty','individuals_section',1,'p_individuals_section','parser.py',258),
  ('individuals -> INDIVIDUAL_NAME','individuals',1,'p_individuals','parser.py',265),
  ('individuals -> INDIVIDUAL_NAME COMMA individuals','individuals',3,'p_individuals','parser.py',266),
  ('comma_and -> COMMA','comma_and',1,'p_comma_and','parser.py',273),
  ('comma_and -> AND','comma_and',1,'p_comma_and','parser.py',274),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',279),
]
