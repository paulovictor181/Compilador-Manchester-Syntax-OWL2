
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES DISJOINtWITH EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT ONLY OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasses : defined_class \n               | defined_class classes\n               | primitive_class \n               | primitive_class classes\n               | closure_axiom \n               | closure_axiom classes\n               primitive_class : CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_sectionsubclass_section : SUBCLASSOF def_descriptions\n                        | emptydisjoint_section : DISJOINTCLASSES disjoint_classes_list\n                        | emptydisjoint_classes_list : CLASS_IDENTIFIER\n                             | CLASS_IDENTIFIER COMMA disjoint_classes_listdefined_class : CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section\n                       | CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptionsclosure_axiom : PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PARENdef_descriptions : CLASS_IDENTIFIER\n                        | namespace_type\n                        | CLASS_IDENTIFIER AND def_descriptions\n                        | CLASS_IDENTIFIER OR def_descriptions\n                        | PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER SOME namespace_type\n                        | PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET\n                        | PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER ALL namespace_type\n                        | PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER VALUE namespace_type\n                        | PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type\n                        | PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type\n                        | PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type\n                        | OPEN_PAREN def_descriptions CLOSE_PAREN\n                        | PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions\n                        | PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER\n                        | PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PARENcomparison : EQUAL CARDINALITY\n                  | GREATER_THAN CARDINALITY\n                  | LESS_THAN CARDINALITY\n                  | GREATER_THAN EQUAL CARDINALITY\n                  | LESS_THAN EQUAL CARDINALITYnamespace_type : NAMESPACE TYPEindividuals_section : INDIVIDUALS individuals\n                           | emptyindividuals : INDIVIDUAL_NAME\n                   | INDIVIDUAL_NAME COMMA individualsempty :'
    
_lr_action_items = {'CLASS':([0,2,3,4,10,13,15,18,20,21,22,23,29,31,32,33,44,45,46,47,48,50,51,52,53,54,55,56,57,62,63,65,68,69,70,71,72,73,75,77,82,84,90,],[5,5,5,5,-48,-48,-9,-48,-11,-8,-17,-18,-7,-45,-10,-12,-43,-16,-15,-44,-46,-19,-20,-21,-22,-24,-25,-26,-27,-34,-14,-13,-28,-29,-30,-31,-32,-33,-47,-35,-37,-23,-21,]),'PROPERTY_IDENTIFIER':([0,2,3,4,10,13,14,15,16,18,20,21,22,23,25,28,29,31,32,33,34,35,44,45,46,47,48,50,51,52,53,54,55,56,57,61,62,63,65,66,68,69,70,71,72,73,75,77,82,84,90,],[6,6,6,6,-48,-48,24,-9,24,-48,-11,-8,-17,-18,24,24,-7,-45,-10,-12,24,24,-43,-16,-15,-44,-46,-19,-20,-21,-22,-24,-25,-26,-27,24,-34,-14,-13,76,-28,-29,-30,-31,-32,-33,-47,-35,-37,-23,-21,]),'$end':([1,2,3,4,7,8,9,10,13,15,18,20,21,22,23,29,31,32,33,44,45,46,47,48,50,51,52,53,54,55,56,57,62,63,65,68,69,70,71,72,73,75,77,82,84,90,],[0,-1,-3,-5,-2,-4,-6,-48,-48,-9,-48,-11,-8,-17,-18,-7,-45,-10,-12,-43,-16,-15,-44,-46,-19,-20,-21,-22,-24,-25,-26,-27,-34,-14,-13,-28,-29,-30,-31,-32,-33,-47,-35,-37,-23,-21,]),'CLASS_IDENTIFIER':([5,12,14,16,19,25,28,34,35,36,37,38,49,58,59,60,61,66,83,],[10,17,22,22,33,22,22,22,22,52,54,56,33,68,70,72,22,22,90,]),'ONLY':([6,24,76,],[11,42,42,]),'EQUIVALENTTO':([10,],[12,]),'SUBCLASSOF':([10,],[14,]),'DISJOINTCLASSES':([10,13,15,21,22,23,44,50,51,52,53,54,55,56,57,62,68,69,70,71,72,73,77,82,84,90,],[-48,19,-9,-8,-17,-18,-43,-19,-20,-21,-22,-24,-25,-26,-27,-34,-28,-29,-30,-31,-32,-33,-35,-37,-23,-21,]),'INDIVIDUALS':([10,13,15,18,20,21,22,23,32,33,44,46,50,51,52,53,54,55,56,57,62,65,68,69,70,71,72,73,77,82,84,90,],[-48,-48,-9,30,-11,-8,-17,-18,-10,-12,-43,30,-19,-20,-21,-22,-24,-25,-26,-27,-34,-13,-28,-29,-30,-31,-32,-33,-35,-37,-23,-21,]),'OPEN_PAREN':([11,14,16,25,28,34,35,42,61,66,],[16,25,25,25,25,25,25,61,25,25,]),'NAMESPACE':([14,16,25,28,34,35,36,37,38,58,59,60,61,66,83,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'AND':([17,22,],[28,34,]),'CLOSE_PAREN':([22,23,27,43,44,50,51,52,53,54,55,56,57,62,68,69,70,71,72,73,74,77,82,84,90,],[-17,-18,45,62,-43,-19,-20,-21,-22,-24,-25,-26,-27,-34,-28,-29,-30,-31,-32,-33,82,-35,-37,-23,-21,]),'OR':([22,],[35,]),'SOME':([24,76,],[36,83,]),'ALL':([24,76,],[37,37,]),'VALUE':([24,76,],[38,38,]),'MIN':([24,76,],[39,39,]),'MAX':([24,76,],[40,40,]),'EXACTLY':([24,76,],[41,41,]),'TYPE':([26,],[44,]),'INDIVIDUAL_NAME':([30,64,],[48,48,]),'COMMA':([33,48,52,90,],[49,64,66,66,]),'CARDINALITY':([39,40,41,79,80,81,87,89,],[58,59,60,85,86,88,91,92,]),'OPEN_BRACKET':([44,53,],[-43,67,]),'EQUAL':([67,80,81,],[79,87,89,]),'GREATER_THAN':([67,],[80,]),'LESS_THAN':([67,],[81,]),'CLOSE_BRACKET':([78,85,86,88,91,92,],[84,-38,-39,-40,-41,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classes':([0,2,3,4,],[1,7,8,9,]),'defined_class':([0,2,3,4,],[2,2,2,2,]),'primitive_class':([0,2,3,4,],[3,3,3,3,]),'closure_axiom':([0,2,3,4,],[4,4,4,4,]),'subclass_section':([10,],[13,]),'empty':([10,13,18,46,],[15,20,31,31,]),'disjoint_section':([13,],[18,]),'def_descriptions':([14,16,25,28,34,35,61,66,],[21,27,43,46,50,51,74,77,]),'namespace_type':([14,16,25,28,34,35,36,37,38,58,59,60,61,66,83,],[23,23,23,23,23,23,53,55,57,69,71,73,23,23,53,]),'individuals_section':([18,46,],[29,63,]),'disjoint_classes_list':([19,49,],[32,65,]),'individuals':([30,64,],[47,75,]),'comparison':([67,],[78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classes","S'",1,None,None,None),
  ('classes -> defined_class','classes',1,'p_classes','parser.py',8),
  ('classes -> defined_class classes','classes',2,'p_classes','parser.py',9),
  ('classes -> primitive_class','classes',1,'p_classes','parser.py',10),
  ('classes -> primitive_class classes','classes',2,'p_classes','parser.py',11),
  ('classes -> closure_axiom','classes',1,'p_classes','parser.py',12),
  ('classes -> closure_axiom classes','classes',2,'p_classes','parser.py',13),
  ('primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section','primitive_class',5,'p_primitive_class','parser.py',21),
  ('subclass_section -> SUBCLASSOF def_descriptions','subclass_section',2,'p_subclass_section','parser.py',32),
  ('subclass_section -> empty','subclass_section',1,'p_subclass_section','parser.py',33),
  ('disjoint_section -> DISJOINTCLASSES disjoint_classes_list','disjoint_section',2,'p_disjoint_section','parser.py',40),
  ('disjoint_section -> empty','disjoint_section',1,'p_disjoint_section','parser.py',41),
  ('disjoint_classes_list -> CLASS_IDENTIFIER','disjoint_classes_list',1,'p_disjoint_classes_list','parser.py',48),
  ('disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list','disjoint_classes_list',3,'p_disjoint_classes_list','parser.py',49),
  ('defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section','defined_class',7,'p_defined_class','parser.py',57),
  ('defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions','defined_class',6,'p_defined_class','parser.py',58),
  ('closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN','closure_axiom',5,'p_closure_axiom','parser.py',68),
  ('def_descriptions -> CLASS_IDENTIFIER','def_descriptions',1,'p_def_descriptions','parser.py',74),
  ('def_descriptions -> namespace_type','def_descriptions',1,'p_def_descriptions','parser.py',75),
  ('def_descriptions -> CLASS_IDENTIFIER AND def_descriptions','def_descriptions',3,'p_def_descriptions','parser.py',76),
  ('def_descriptions -> CLASS_IDENTIFIER OR def_descriptions','def_descriptions',3,'p_def_descriptions','parser.py',77),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','parser.py',78),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type','def_descriptions',3,'p_def_descriptions','parser.py',79),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET','def_descriptions',6,'p_def_descriptions','parser.py',80),
  ('def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','parser.py',81),
  ('def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type','def_descriptions',3,'p_def_descriptions','parser.py',82),
  ('def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER','def_descriptions',3,'p_def_descriptions','parser.py',83),
  ('def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type','def_descriptions',3,'p_def_descriptions','parser.py',84),
  ('def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','parser.py',85),
  ('def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type','def_descriptions',4,'p_def_descriptions','parser.py',86),
  ('def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','parser.py',87),
  ('def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type','def_descriptions',4,'p_def_descriptions','parser.py',88),
  ('def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER','def_descriptions',4,'p_def_descriptions','parser.py',89),
  ('def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type','def_descriptions',4,'p_def_descriptions','parser.py',90),
  ('def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN','def_descriptions',3,'p_def_descriptions','parser.py',91),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions','def_descriptions',5,'p_def_descriptions','parser.py',92),
  ('def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER','def_descriptions',7,'p_def_descriptions','parser.py',93),
  ('def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN','def_descriptions',5,'p_def_descriptions','parser.py',94),
  ('comparison -> EQUAL CARDINALITY','comparison',2,'p_comparison','parser.py',117),
  ('comparison -> GREATER_THAN CARDINALITY','comparison',2,'p_comparison','parser.py',118),
  ('comparison -> LESS_THAN CARDINALITY','comparison',2,'p_comparison','parser.py',119),
  ('comparison -> GREATER_THAN EQUAL CARDINALITY','comparison',3,'p_comparison','parser.py',120),
  ('comparison -> LESS_THAN EQUAL CARDINALITY','comparison',3,'p_comparison','parser.py',121),
  ('namespace_type -> NAMESPACE TYPE','namespace_type',2,'p_namespace_type','parser.py',135),
  ('individuals_section -> INDIVIDUALS individuals','individuals_section',2,'p_individuals_section','parser.py',140),
  ('individuals_section -> empty','individuals_section',1,'p_individuals_section','parser.py',141),
  ('individuals -> INDIVIDUAL_NAME','individuals',1,'p_individuals','parser.py',148),
  ('individuals -> INDIVIDUAL_NAME COMMA individuals','individuals',3,'p_individuals','parser.py',149),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',157),
]
