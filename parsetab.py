
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES DISJOINtWITH EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT ONLY OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasses : defined_class \n               | defined_class classes\n               | primitive_class \n               | primitive_class classes\n               primitive_class : CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_sectionsubclass_section : SUBCLASSOF CLASS_IDENTIFIER def_descriptions\n                        | SUBCLASSOF CLASS_IDENTIFIER enum_class\n                        | SUBCLASSOF CLASS_IDENTIFIER OR covered_class\n                        | SUBCLASSOF CLASS_IDENTIFIER \n                        disjoint_section : DISJOINTCLASSES disjoint_classes_list\n                        | emptydisjoint_classes_list : CLASS_IDENTIFIER\n                             | CLASS_IDENTIFIER COMMA disjoint_classes_listdefined_class : CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section\n                     | CLASS CLASS_IDENTIFIER equivalentto_sectionenum_class : OPEN_CURLY individuals CLOSE_CURLYcovered_class : CLASS_IDENTIFIER OR covered_class\n                     | CLASS_IDENTIFIER\n                aux_fechamento : OPEN_PAREN PROPERTY_IDENTIFIER aux_fechamento\n                      | OR PROPERTY_IDENTIFIER aux_fechamento\n                      | PROPERTY_IDENTIFIER CLOSE_PARENaninhada :  PROPERTY_IDENTIFIER quantifier OPEN_PAREN def_descriptions CLOSE_PARENequivalentto_section : EQUIVALENTTO enum_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER OR covered_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER comma_and def_descriptions\n    def_descriptions : aninhada\n                        | aninhada def_descriptions\n                        | class_aux\n                        | class_aux def_descriptions \n                        | quantifier_aux\n                        | quantifier_aux def_descriptions\n    class_aux : CLASS_IDENTIFIER\n                 | CLASS_IDENTIFIER OR class_aux\n                 | CLASS_IDENTIFIER comma_and class_aux\n                 | OPEN_PAREN class_aux CLOSE_PAREN\n     quantifier_aux : PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER quantifier namespace_type\n                      | OPEN_PAREN quantifier_aux CLOSE_PAREN\n                      | OPEN_PAREN aninhada CLOSE_PAREN\n                      | quantifier_aux comma_and quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER OR quantifier_aux\n                      | CLASS_IDENTIFIER comma_and quantifier_aux\n                      | CLASS_IDENTIFIER\n    quantifier : SOME\n                  | ALL\n                  | VALUE\n                  | MAX\n                  | MIN\n                  | EXACTLY\n                  | THAT\n                  sizecheck : EQUAL CARDINALITY\n                  | GREATER_THAN CARDINALITY\n                  | LESS_THAN CARDINALITY\n                  | GREATER_THAN EQUAL CARDINALITY\n                  | LESS_THAN EQUAL CARDINALITYnamespace_type : NAMESPACE TYPE\n                      | NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKETindividuals_section : INDIVIDUALS individuals\n                           | emptyindividuals : INDIVIDUAL_NAME\n                   | INDIVIDUAL_NAME COMMA individualscomma_and : COMMA\n                     | ANDempty :'
    
_lr_action_items = {'CLASS':([0,2,3,8,9,12,13,15,16,19,20,22,23,24,25,31,32,33,34,36,37,38,41,43,44,45,46,58,59,60,61,68,70,71,72,74,75,76,77,79,81,82,83,85,86,87,89,98,99,107,],[4,4,4,-15,-66,-66,-66,-11,-23,-9,-14,-61,-5,-10,-12,-62,-32,-6,-7,-26,-28,-30,-60,-18,-24,-25,-16,-8,-27,-29,-31,-13,-63,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,-17,-58,-22,-59,]),'$end':([1,2,3,5,6,8,9,12,13,15,16,19,20,22,23,24,25,31,32,33,34,36,37,38,41,43,44,45,46,58,59,60,61,68,70,71,72,74,75,76,77,79,81,82,83,85,86,87,89,98,99,107,],[0,-1,-3,-2,-4,-15,-66,-66,-66,-11,-23,-9,-14,-61,-5,-10,-12,-62,-32,-6,-7,-26,-28,-30,-60,-18,-24,-25,-16,-8,-27,-29,-31,-13,-63,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,-17,-58,-22,-59,]),'CLASS_IDENTIFIER':([4,10,11,14,19,26,27,28,29,32,35,36,37,38,40,42,48,49,50,51,52,53,54,55,56,57,62,63,69,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,90,91,92,93,95,96,97,98,99,100,101,107,],[7,17,19,25,32,43,32,-64,-65,-32,43,32,32,32,32,25,32,32,76,-46,-47,-48,-49,-50,-51,-52,76,81,43,-33,-43,-34,-44,-45,-42,76,-40,97,-36,-37,-41,-35,-38,-39,81,81,76,76,97,32,32,-32,-58,-22,97,97,-59,]),'EQUIVALENTTO':([7,],[10,]),'SUBCLASSOF':([7,8,16,32,36,37,38,43,44,45,46,59,60,61,71,72,74,75,76,77,79,81,82,83,85,86,87,89,98,99,107,],[11,11,-23,-32,-26,-28,-30,-18,-24,-25,-16,-27,-29,-31,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,-17,-58,-22,-59,]),'DISJOINTCLASSES':([9,19,32,33,34,36,37,38,43,46,58,59,60,61,71,72,74,75,76,77,79,81,82,83,85,86,87,89,98,99,107,],[14,-9,-32,-6,-7,-26,-28,-30,-18,-16,-8,-27,-29,-31,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,-17,-58,-22,-59,]),'INDIVIDUALS':([9,12,13,15,19,24,25,32,33,34,36,37,38,43,46,58,59,60,61,68,71,72,74,75,76,77,79,81,82,83,85,86,87,89,98,99,107,],[-66,21,21,-11,-9,-10,-12,-32,-6,-7,-26,-28,-30,-18,-16,-8,-27,-29,-31,-13,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,-17,-58,-22,-59,]),'OPEN_CURLY':([10,19,],[18,18,]),'OR':([17,19,32,43,76,81,97,],[26,35,48,69,91,91,100,]),'COMMA':([17,25,31,32,38,65,72,75,76,77,79,81,82,83,86,87,95,97,98,107,],[28,42,47,28,28,28,28,28,28,28,28,28,-37,28,-38,-39,28,28,-58,-59,]),'AND':([17,32,38,65,72,75,76,77,79,81,82,83,86,87,95,97,98,107,],[29,29,29,29,29,29,29,29,29,29,-37,29,-38,-39,29,29,-58,-59,]),'INDIVIDUAL_NAME':([18,21,47,],[31,31,31,]),'PROPERTY_IDENTIFIER':([19,27,28,29,32,36,37,38,40,48,49,50,51,52,53,54,55,56,57,62,63,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,90,91,92,93,95,96,97,98,99,100,101,107,],[39,39,-64,-65,-32,39,39,39,67,73,73,73,-46,-47,-48,-49,-50,-51,-52,73,73,-33,-43,-34,-44,-45,-42,67,-40,67,-36,-37,-41,-35,-38,-39,73,73,73,73,67,39,39,-32,-58,-22,73,73,-59,]),'OPEN_PAREN':([19,27,28,29,32,36,37,38,40,48,49,50,51,52,53,54,55,56,57,62,63,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,88,90,91,92,93,95,96,97,98,99,100,101,107,],[40,40,-64,-65,-32,40,40,40,40,40,40,78,-46,-47,-48,-49,-50,-51,-52,78,80,-33,-43,-34,-44,-45,-42,78,-40,93,-36,-37,-41,-35,-38,-39,80,78,78,78,93,40,40,-32,-58,-22,93,93,-59,]),'CLOSE_CURLY':([30,31,70,],[46,-62,-63,]),'CLOSE_PAREN':([32,36,37,38,59,60,61,64,65,66,71,72,74,75,76,77,79,81,82,83,85,86,87,94,95,96,97,98,99,107,],[-32,-26,-28,-30,-27,-29,-31,85,86,87,-33,-43,-34,-44,-45,-42,-40,-36,-37,-41,-35,-38,-39,99,86,87,-32,-58,-22,-59,]),'SOME':([32,39,67,73,76,81,97,],[51,51,51,51,51,51,51,]),'ALL':([32,39,67,73,76,81,97,],[52,52,52,52,52,52,52,]),'VALUE':([32,39,67,73,76,81,97,],[53,53,53,53,53,53,53,]),'MAX':([32,39,67,73,76,81,97,],[54,54,54,54,54,54,54,]),'MIN':([32,39,67,73,76,81,97,],[55,55,55,55,55,55,55,]),'EXACTLY':([32,39,67,73,76,81,97,],[56,56,56,56,56,56,56,]),'THAT':([32,39,67,73,76,81,97,],[57,57,57,57,57,57,57,]),'NAMESPACE':([51,52,53,54,55,56,57,63,88,90,],[-46,-47,-48,-49,-50,-51,-52,84,84,84,]),'TYPE':([84,],[98,]),'OPEN_BRACKET':([98,],[102,]),'EQUAL':([102,105,106,],[104,110,112,]),'GREATER_THAN':([102,],[105,]),'LESS_THAN':([102,],[106,]),'CLOSE_BRACKET':([103,108,109,111,113,114,],[107,-53,-54,-55,-56,-57,]),'CARDINALITY':([104,105,106,110,112,],[108,109,111,113,114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classes':([0,2,3,],[1,5,6,]),'defined_class':([0,2,3,],[2,2,2,]),'primitive_class':([0,2,3,],[3,3,3,]),'equivalentto_section':([7,],[8,]),'subclass_section':([7,8,],[9,12,]),'disjoint_section':([9,],[13,]),'empty':([9,12,13,],[15,22,22,]),'enum_class':([10,19,],[16,34,]),'individuals_section':([12,13,],[20,23,]),'disjoint_classes_list':([14,42,],[24,68,]),'comma_and':([17,32,38,65,72,75,76,77,79,81,83,95,97,],[27,49,62,62,62,62,92,62,62,92,62,62,101,]),'individuals':([18,21,47,],[30,41,70,]),'def_descriptions':([19,27,36,37,38,80,95,96,],[33,45,59,60,61,94,61,59,]),'aninhada':([19,27,36,37,38,40,78,80,93,95,96,],[36,36,36,36,36,66,66,96,66,36,36,]),'class_aux':([19,27,36,37,38,40,48,49,80,93,95,96,100,101,],[37,37,37,37,37,64,71,74,37,64,37,37,71,74,]),'quantifier_aux':([19,27,36,37,38,40,48,49,50,62,63,78,80,88,90,91,92,93,95,96,100,101,],[38,38,38,38,38,65,72,75,77,79,83,65,95,83,83,72,75,65,38,38,72,75,]),'covered_class':([26,35,69,],[44,58,89,]),'quantifier':([32,39,67,73,76,81,97,],[50,63,88,90,50,50,50,]),'namespace_type':([63,88,90,],[82,82,82,]),'sizecheck':([102,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classes","S'",1,None,None,None),
  ('classes -> defined_class','classes',1,'p_classes','parser.py',8),
  ('classes -> defined_class classes','classes',2,'p_classes','parser.py',9),
  ('classes -> primitive_class','classes',1,'p_classes','parser.py',10),
  ('classes -> primitive_class classes','classes',2,'p_classes','parser.py',11),
  ('primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section','primitive_class',5,'p_primitive_class','parser.py',19),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions','subclass_section',3,'p_subclass_section','parser.py',29),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER enum_class','subclass_section',3,'p_subclass_section','parser.py',30),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class','subclass_section',4,'p_subclass_section','parser.py',31),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER','subclass_section',2,'p_subclass_section','parser.py',32),
  ('disjoint_section -> DISJOINTCLASSES disjoint_classes_list','disjoint_section',2,'p_disjoint_section','parser.py',40),
  ('disjoint_section -> empty','disjoint_section',1,'p_disjoint_section','parser.py',41),
  ('disjoint_classes_list -> CLASS_IDENTIFIER','disjoint_classes_list',1,'p_disjoint_classes_list','parser.py',48),
  ('disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list','disjoint_classes_list',3,'p_disjoint_classes_list','parser.py',49),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section','defined_class',5,'p_defined_class','parser.py',57),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section','defined_class',3,'p_defined_class','parser.py',58),
  ('enum_class -> OPEN_CURLY individuals CLOSE_CURLY','enum_class',3,'p_enum_class','parser.py',87),
  ('covered_class -> CLASS_IDENTIFIER OR covered_class','covered_class',3,'p_covered_class','parser.py',101),
  ('covered_class -> CLASS_IDENTIFIER','covered_class',1,'p_covered_class','parser.py',102),
  ('aux_fechamento -> OPEN_PAREN PROPERTY_IDENTIFIER aux_fechamento','aux_fechamento',3,'p_aux_fechamento','parser.py',122),
  ('aux_fechamento -> OR PROPERTY_IDENTIFIER aux_fechamento','aux_fechamento',3,'p_aux_fechamento','parser.py',123),
  ('aux_fechamento -> PROPERTY_IDENTIFIER CLOSE_PAREN','aux_fechamento',2,'p_aux_fechamento','parser.py',124),
  ('aninhada -> PROPERTY_IDENTIFIER quantifier OPEN_PAREN def_descriptions CLOSE_PAREN','aninhada',5,'p_aninhada','parser.py',156),
  ('equivalentto_section -> EQUIVALENTTO enum_class','equivalentto_section',2,'p_equivalentto_section','parser.py',162),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class','equivalentto_section',4,'p_equivalentto_section','parser.py',163),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER comma_and def_descriptions','equivalentto_section',4,'p_equivalentto_section','parser.py',164),
  ('def_descriptions -> aninhada','def_descriptions',1,'p_def_descriptions','parser.py',172),
  ('def_descriptions -> aninhada def_descriptions','def_descriptions',2,'p_def_descriptions','parser.py',173),
  ('def_descriptions -> class_aux','def_descriptions',1,'p_def_descriptions','parser.py',174),
  ('def_descriptions -> class_aux def_descriptions','def_descriptions',2,'p_def_descriptions','parser.py',175),
  ('def_descriptions -> quantifier_aux','def_descriptions',1,'p_def_descriptions','parser.py',176),
  ('def_descriptions -> quantifier_aux def_descriptions','def_descriptions',2,'p_def_descriptions','parser.py',177),
  ('class_aux -> CLASS_IDENTIFIER','class_aux',1,'p_class_aux','parser.py',183),
  ('class_aux -> CLASS_IDENTIFIER OR class_aux','class_aux',3,'p_class_aux','parser.py',184),
  ('class_aux -> CLASS_IDENTIFIER comma_and class_aux','class_aux',3,'p_class_aux','parser.py',185),
  ('class_aux -> OPEN_PAREN class_aux CLOSE_PAREN','class_aux',3,'p_class_aux','parser.py',186),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER','quantifier_aux',3,'p_quantifier_aux','parser.py',194),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux',3,'p_quantifier_aux','parser.py',195),
  ('quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN','quantifier_aux',3,'p_quantifier_aux','parser.py',196),
  ('quantifier_aux -> OPEN_PAREN aninhada CLOSE_PAREN','quantifier_aux',3,'p_quantifier_aux','parser.py',197),
  ('quantifier_aux -> quantifier_aux comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',198),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',199),
  ('quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',200),
  ('quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',201),
  ('quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',202),
  ('quantifier_aux -> CLASS_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',203),
  ('quantifier -> SOME','quantifier',1,'p_quantifier','parser.py',214),
  ('quantifier -> ALL','quantifier',1,'p_quantifier','parser.py',215),
  ('quantifier -> VALUE','quantifier',1,'p_quantifier','parser.py',216),
  ('quantifier -> MAX','quantifier',1,'p_quantifier','parser.py',217),
  ('quantifier -> MIN','quantifier',1,'p_quantifier','parser.py',218),
  ('quantifier -> EXACTLY','quantifier',1,'p_quantifier','parser.py',219),
  ('quantifier -> THAT','quantifier',1,'p_quantifier','parser.py',220),
  ('sizecheck -> EQUAL CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',226),
  ('sizecheck -> GREATER_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',227),
  ('sizecheck -> LESS_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',228),
  ('sizecheck -> GREATER_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',229),
  ('sizecheck -> LESS_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',230),
  ('namespace_type -> NAMESPACE TYPE','namespace_type',2,'p_namespace_type','parser.py',244),
  ('namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET','namespace_type',5,'p_namespace_type','parser.py',245),
  ('individuals_section -> INDIVIDUALS individuals','individuals_section',2,'p_individuals_section','parser.py',250),
  ('individuals_section -> empty','individuals_section',1,'p_individuals_section','parser.py',251),
  ('individuals -> INDIVIDUAL_NAME','individuals',1,'p_individuals','parser.py',258),
  ('individuals -> INDIVIDUAL_NAME COMMA individuals','individuals',3,'p_individuals','parser.py',259),
  ('comma_and -> COMMA','comma_and',1,'p_comma_and','parser.py',266),
  ('comma_and -> AND','comma_and',1,'p_comma_and','parser.py',267),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',272),
]
