
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES DISJOINtWITH EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT ONLY OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasses : defined_class \n               | defined_class classes\n               | primitive_class \n               | primitive_class classes\n               primitive_class : CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_sectionsubclass_section : SUBCLASSOF enum_class\n                        | SUBCLASSOF CLASS_IDENTIFIER OR covered_class\n                        | SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento\n                        | SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN\n                        | SUBCLASSOF CLASS_IDENTIFIER \n                        | SUBCLASSOF quantifier_aux_axioma\n                        auxiliar_fechamento : CLASS_IDENTIFIER   \n                        | CLASS_IDENTIFIER OR auxiliar_fechamento\n    disjoint_section : DISJOINTCLASSES quantifier_aux\n                        | emptydisjoint_classes_list : CLASS_IDENTIFIER\n                             | CLASS_IDENTIFIER COMMA disjoint_classes_listdefined_class : CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section\n                     | CLASS CLASS_IDENTIFIER equivalentto_sectionenum_class : OPEN_CURLY individuals CLOSE_CURLYcovered_class : CLASS_IDENTIFIER OR covered_class\n                     | CLASS_IDENTIFIER\n                equivalentto_section : EQUIVALENTTO enum_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER OR covered_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER only_defined\n                            | EQUIVALENTTO CLASS_IDENTIFIER aninhada \n    def_descriptions : quantifier_aux            \n    def_descriptions_axioma : quantifier_aux_axioma            \n    aninhada : comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN \n                | comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN              \n    only_defined : comma_and quantifier_aux           \n    quantifier_aux_aninhada  : comma_and quantifier_aux_aninhada\n                                | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada\n                                | PROPERTY_IDENTIFIER quantifier namespace_type\n                                | PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type\n                                | PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER\n                                | quantifier_aux_aninhada comma_and quantifier_aux_aninhada\n                                | CLASS_IDENTIFIER quantifier quantifier_aux_aninhada\n                                | CLASS_IDENTIFIER OR quantifier_aux_aninhada\n                                | PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada\n                                | CLASS_IDENTIFIER comma_and quantifier_aux_aninhada\n                                | OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN\n                                | CLOSE_PAREN quantifier_aux_aninhada\n                                | CLASS_IDENTIFIER\n                                | PROPERTY_IDENTIFIER\n    quantifier_aux_aninhada_extra  : comma_and quantifier_aux_aninhada_extra\n                                | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra\n                                | PROPERTY_IDENTIFIER quantifier namespace_type\n                                | PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type\n                                | PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER\n                                | quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra\n                                | CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra\n                                | CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra\n                                | PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra\n                                | CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra\n                                | OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN\n                                | CLASS_IDENTIFIER\n                                | PROPERTY_IDENTIFIER\n    quantifier_aux : comma_and quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier namespace_type\n                      | PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type\n                      | PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER\n                      | quantifier_aux comma_and quantifier_aux\n                      | CLASS_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER OR quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER comma_and quantifier_aux\n                      | OPEN_PAREN quantifier_aux CLOSE_PAREN\n                      | CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER\n    quantifier_aux_axioma : comma_and quantifier_aux_axioma\n                            | OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN\n                            | PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type\n                            | PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER\n                            | PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER\n                            | PROPERTY_IDENTIFIER quantifier_geral namespace_type                 \n                            | quantifier_aux_axioma comma_and quantifier_aux_axioma\n                            | CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma\n                            | CLASS_IDENTIFIER OR quantifier_aux_axioma\n                            | PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma\n                            | CLASS_IDENTIFIER comma_and quantifier_aux_axioma\n                            | CLASS_IDENTIFIER\n                            | PROPERTY_IDENTIFIER\n    quantifier : SOME\n                  | ALL\n                  | VALUE\n                  | THAT\n                  quantifier_number : MAX\n                  | MIN\n                  | EXACTLY\n                  quantifier_geral : SOME\n                  | ALL\n                  | VALUE\n                  | MAX\n                  | MIN\n                  | EXACTLY\n                  | THAT\n                  sizecheck : EQUAL CARDINALITY\n                  | GREATER_THAN CARDINALITY\n                  | LESS_THAN CARDINALITY\n                  | GREATER_THAN EQUAL CARDINALITY\n                  | LESS_THAN EQUAL CARDINALITYnamespace_type : NAMESPACE TYPE\n                      | NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKETindividuals_section : INDIVIDUALS individuals\n                           | emptyindividuals : INDIVIDUAL_NAME\n                   | INDIVIDUAL_NAME COMMA individualscomma_and : COMMA\n                     | ANDempty :'
    
_lr_action_items = {'CLASS':([0,2,3,8,9,12,13,15,16,19,20,22,24,27,29,30,31,33,34,37,38,41,42,57,63,65,79,80,81,83,87,88,89,91,92,93,94,96,97,98,100,101,102,103,105,106,107,108,112,113,115,116,118,119,120,121,123,124,125,136,140,152,153,177,215,],[4,4,4,-19,-113,-113,-113,-15,-23,-6,-10,-11,-85,-18,-108,-5,-14,-72,-71,-25,-26,-109,-84,-73,-107,-59,-22,-24,-31,-20,-22,-7,-81,-80,-83,-74,-79,-77,-78,-82,-65,-60,-68,-62,-66,-67,-69,-70,-110,-83,-12,-8,-75,-76,-105,-61,-63,-64,-21,-59,-29,-13,-9,-106,-30,]),'$end':([1,2,3,5,6,8,9,12,13,15,16,19,20,22,24,27,29,30,31,33,34,37,38,41,42,57,63,65,79,80,81,83,87,88,89,91,92,93,94,96,97,98,100,101,102,103,105,106,107,108,112,113,115,116,118,119,120,121,123,124,125,136,140,152,153,177,215,],[0,-1,-3,-2,-4,-19,-113,-113,-113,-15,-23,-6,-10,-11,-85,-18,-108,-5,-14,-72,-71,-25,-26,-109,-84,-73,-107,-59,-22,-24,-31,-20,-22,-7,-81,-80,-83,-74,-79,-77,-78,-82,-65,-60,-68,-62,-66,-67,-69,-70,-110,-83,-12,-8,-75,-76,-105,-61,-63,-64,-21,-59,-29,-13,-9,-106,-30,]),'CLASS_IDENTIFIER':([4,10,11,14,20,21,23,25,26,32,35,36,39,43,45,47,48,49,50,51,52,53,54,56,59,60,61,62,64,66,68,69,70,71,75,76,77,82,85,86,90,95,101,104,109,110,114,117,122,126,127,129,132,133,139,142,145,146,148,149,150,151,160,162,163,164,165,168,172,173,183,185,187,192,194,196,197,198,201,206,209,211,214,220,223,225,226,227,229,231,232,],[7,17,20,34,42,42,42,-111,-112,34,34,79,34,87,42,42,-93,-94,-95,-96,-97,-98,-99,42,96,-96,-97,-98,34,101,-86,-87,-88,-89,34,34,34,34,42,42,115,119,34,124,79,131,87,115,34,131,131,144,101,115,144,144,144,165,131,131,131,176,183,144,144,144,131,189,176,176,144,203,131,206,213,176,176,176,144,176,222,213,213,176,229,213,213,213,213,234,213,]),'EQUIVALENTTO':([7,],[10,]),'SUBCLASSOF':([7,8,16,33,34,37,38,65,79,80,81,83,100,101,102,103,105,106,107,108,120,121,123,124,125,136,140,177,215,],[11,11,-23,-72,-71,-25,-26,-59,-22,-24,-31,-20,-65,-60,-68,-62,-66,-67,-69,-70,-105,-61,-63,-64,-21,-59,-29,-106,-30,]),'DISJOINTCLASSES':([9,19,20,22,24,42,57,83,87,88,89,91,92,93,94,96,97,98,113,115,116,118,119,120,125,152,153,177,],[14,-6,-10,-11,-85,-84,-73,-20,-22,-7,-81,-80,-83,-74,-79,-77,-78,-82,-83,-12,-8,-75,-76,-105,-21,-13,-9,-106,]),'INDIVIDUALS':([9,12,13,15,19,20,22,24,31,33,34,42,57,65,83,87,88,89,91,92,93,94,96,97,98,100,101,102,103,105,106,107,108,113,115,116,118,119,120,121,123,124,125,136,152,153,177,],[-113,28,28,-15,-6,-10,-11,-85,-14,-72,-71,-84,-73,-59,-20,-22,-7,-81,-80,-83,-74,-79,-77,-78,-82,-65,-60,-68,-62,-66,-67,-69,-70,-83,-12,-8,-75,-76,-105,-61,-63,-64,-21,-59,-13,-9,-106,]),'OPEN_CURLY':([10,11,],[18,18,]),'OPEN_PAREN':([11,14,20,21,23,25,26,32,35,39,43,45,47,48,49,50,51,52,53,54,56,59,60,61,62,64,66,68,69,70,71,75,76,77,82,85,86,90,101,110,114,122,126,127,129,132,139,142,145,146,148,149,150,151,160,162,163,164,165,172,173,183,187,192,194,196,197,198,201,206,211,214,220,223,225,226,227,229,232,],[21,35,21,21,21,-111,-112,35,35,82,21,21,21,-93,-94,-95,-96,-97,-98,-99,21,21,-96,-97,-98,35,35,-86,-87,-88,-89,35,35,35,110,21,21,117,35,127,21,35,127,127,145,151,145,145,145,127,127,127,127,173,145,145,145,145,127,173,173,145,127,173,214,173,173,173,145,173,214,214,173,214,214,214,214,214,214,]),'PROPERTY_IDENTIFIER':([11,14,20,21,23,25,26,32,35,39,43,45,47,48,49,50,51,52,53,54,56,59,60,61,62,64,66,68,69,70,71,75,76,77,82,85,86,101,110,114,122,126,127,129,132,139,142,145,146,148,149,150,151,160,162,163,164,165,172,173,183,187,192,194,196,197,198,201,206,211,214,220,223,225,226,227,229,232,],[24,33,24,24,24,-111,-112,33,33,33,24,24,24,-93,-94,-95,-96,-97,-98,-99,24,24,-96,-97,-98,33,33,-86,-87,-88,-89,33,33,33,111,24,24,33,130,24,33,130,130,143,33,143,143,143,130,130,130,130,174,143,143,143,143,130,174,174,143,130,174,212,174,174,174,143,174,212,212,174,212,212,212,212,212,212,]),'COMMA':([11,14,17,20,21,22,23,24,25,26,31,32,33,34,35,39,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,68,69,70,71,75,76,77,78,81,82,85,86,87,89,91,92,93,94,96,97,98,100,101,102,103,105,106,107,108,110,111,113,114,118,119,120,121,122,123,124,126,127,128,129,130,131,132,136,137,138,139,141,142,143,144,145,146,148,149,150,151,158,159,160,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,183,184,186,187,188,189,190,191,192,194,196,197,198,201,202,203,204,205,206,207,208,210,211,212,213,214,216,217,218,219,220,221,222,223,225,226,227,228,229,230,232,233,234,],[25,25,25,25,25,25,25,-85,-111,-112,25,25,-72,25,25,25,84,25,25,25,25,25,-93,-94,-95,-96,-97,-98,-99,25,25,25,25,-96,-97,-98,25,25,25,-86,-87,-88,-89,25,25,25,25,25,25,25,25,25,25,25,25,-74,25,25,-78,25,25,25,25,-62,25,25,25,-70,25,-72,25,25,-75,-76,-105,25,25,-63,-64,25,25,25,25,-45,25,25,25,25,25,25,25,25,-45,25,25,25,25,25,25,25,-42,25,25,25,25,25,25,25,-34,25,25,25,25,25,-58,25,25,-106,25,-34,25,25,-35,-36,25,25,25,25,25,25,25,25,-35,-36,25,-56,25,25,-48,25,25,-58,25,25,25,25,25,25,25,-49,-50,25,25,25,25,25,25,-48,25,-49,-50,]),'AND':([11,14,17,20,21,22,23,24,25,26,31,32,33,34,35,39,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,64,65,66,68,69,70,71,75,76,77,78,81,82,85,86,87,89,91,92,93,94,96,97,98,100,101,102,103,105,106,107,108,110,111,113,114,118,119,120,121,122,123,124,126,127,128,129,130,131,132,136,137,138,139,141,142,143,144,145,146,148,149,150,151,158,159,160,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,183,184,186,187,188,189,190,191,192,194,196,197,198,201,202,203,204,205,206,207,208,210,211,212,213,214,216,217,218,219,220,221,222,223,225,226,227,228,229,230,232,233,234,],[26,26,26,26,26,26,26,-85,-111,-112,26,26,-72,26,26,26,26,26,26,26,26,-93,-94,-95,-96,-97,-98,-99,26,26,26,26,-96,-97,-98,26,26,26,-86,-87,-88,-89,26,26,26,26,26,26,26,26,26,26,26,26,-74,26,26,-78,26,26,26,26,-62,26,26,26,-70,26,-72,26,26,-75,-76,-105,26,26,-63,-64,26,26,26,26,-45,26,26,26,26,26,26,26,26,-45,26,26,26,26,26,26,26,-42,26,26,26,26,26,26,26,-34,26,26,26,26,26,-58,26,26,-106,26,-34,26,26,-35,-36,26,26,26,26,26,26,26,26,-35,-36,26,-56,26,26,-48,26,26,-58,26,26,26,26,26,26,26,-49,-50,26,26,26,26,26,26,-48,26,-49,-50,]),'OR':([17,20,34,42,79,87,96,101,115,131,144,165,176,183,206,213,229,],[36,43,76,85,109,114,85,76,133,149,163,149,197,163,197,226,226,]),'INDIVIDUAL_NAME':([18,28,84,],[41,41,41,]),'SOME':([20,24,33,34,42,87,96,101,111,130,131,143,144,165,174,176,183,206,212,213,229,],[48,48,68,68,48,48,48,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'ALL':([20,24,33,34,42,87,96,101,111,130,131,143,144,165,174,176,183,206,212,213,229,],[49,49,69,69,49,49,49,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'VALUE':([20,24,33,34,42,87,96,101,111,130,131,143,144,165,174,176,183,206,212,213,229,],[50,50,70,70,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'MAX':([20,24,33,42,87,96,111,130,143,174,212,],[51,60,72,51,51,51,72,72,72,72,72,]),'MIN':([20,24,33,42,87,96,111,130,143,174,212,],[52,61,73,52,52,52,73,73,73,73,73,]),'EXACTLY':([20,24,33,42,87,96,111,130,143,174,212,],[53,62,74,53,53,53,74,74,74,74,74,]),'THAT':([20,24,33,34,42,87,96,101,111,130,131,143,144,165,174,176,183,206,212,213,229,],[54,54,71,71,54,54,54,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'ONLY':([24,42,44,46,57,87,89,91,92,93,94,96,97,98,113,118,119,120,177,],[-85,-84,90,-28,-73,-84,-81,-80,-73,-74,-79,-77,-78,-82,-83,-75,-76,-105,-106,]),'CLOSE_PAREN':([24,25,26,33,34,42,55,57,65,68,69,70,71,78,89,91,93,94,96,97,98,100,101,102,103,105,106,107,108,110,111,113,115,118,119,120,121,123,124,126,127,128,129,130,131,134,136,137,138,139,141,142,143,144,145,146,148,149,150,152,158,159,160,162,163,164,165,166,167,169,170,171,174,175,176,177,183,184,186,187,188,189,190,191,195,201,202,203,204,205,206,207,208,210,212,213,216,217,218,219,221,222,228,229,230,233,234,],[-85,-111,-112,-72,-71,-84,93,-73,-59,-86,-87,-88,-89,108,-81,-80,-74,-79,-77,-78,-82,-65,-60,-68,-62,-66,-67,-69,-70,129,-72,-83,-12,-75,-76,-105,-61,-63,-64,129,129,140,129,-45,-44,153,-59,-32,158,129,-43,129,-45,-44,129,129,129,129,129,-13,-42,-37,129,129,129,129,129,-40,-34,-38,-39,-41,-58,195,-57,-106,129,-34,-33,129,-35,-36,-46,205,215,129,-35,-36,-32,-56,-57,-54,-48,-51,-58,-57,-52,-53,-55,-47,-49,-50,-46,-57,-48,-49,-50,]),'CLOSE_CURLY':([40,41,112,],[83,-109,-110,]),'NAMESPACE':([48,49,50,54,59,60,61,62,66,68,69,70,71,95,104,132,146,160,168,185,192,209,223,231,],[-93,-94,-95,-99,99,-96,-97,-98,99,-86,-87,-88,-89,99,99,99,99,99,99,99,99,99,99,99,]),'CARDINALITY':([58,60,61,62,67,72,73,74,147,155,156,157,161,180,182,193,224,],[95,-90,-91,-92,104,-90,-91,-92,168,178,179,181,185,199,200,209,231,]),'TYPE':([99,],[120,]),'OPEN_BRACKET':([120,],[135,]),'EQUAL':([135,156,157,],[155,180,182,]),'GREATER_THAN':([135,],[156,]),'LESS_THAN':([135,],[157,]),'CLOSE_BRACKET':([154,178,179,181,199,200,],[177,-100,-101,-102,-103,-104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classes':([0,2,3,],[1,5,6,]),'defined_class':([0,2,3,],[2,2,2,]),'primitive_class':([0,2,3,],[3,3,3,]),'equivalentto_section':([7,],[8,]),'subclass_section':([7,8,],[9,12,]),'disjoint_section':([9,],[13,]),'empty':([9,12,13,],[15,29,29,]),'enum_class':([10,11,],[16,19,]),'quantifier_aux_axioma':([11,20,21,23,43,45,47,56,59,85,86,114,],[22,46,55,57,89,91,92,94,98,89,113,89,]),'comma_and':([11,14,17,20,21,22,23,31,32,34,35,39,42,43,45,46,47,55,56,57,59,64,65,66,75,76,77,78,81,82,85,86,87,89,91,92,94,96,98,100,101,102,105,106,107,110,113,114,121,122,126,127,128,129,131,132,136,137,138,139,141,142,144,145,146,148,149,150,151,159,160,162,163,164,165,166,169,170,171,172,173,175,176,183,186,187,190,191,192,194,196,197,198,201,204,206,207,210,211,213,214,216,217,218,219,220,223,225,226,227,228,229,232,],[23,32,39,47,23,56,23,64,32,77,32,32,86,23,23,56,23,56,23,56,23,32,64,32,32,32,32,64,64,32,23,23,86,56,56,56,56,86,56,64,122,64,64,64,64,126,56,23,64,32,126,126,139,142,150,32,64,139,139,142,139,142,164,142,126,126,126,126,172,139,142,142,142,142,187,139,139,139,139,172,172,194,198,201,139,126,194,194,172,211,172,172,172,142,139,220,194,194,211,227,211,194,194,194,194,172,211,211,211,211,194,232,211,]),'individuals_section':([12,13,],[27,30,]),'quantifier_aux':([14,32,35,39,64,66,75,76,77,82,101,110,122,126,127,132,146,148,149,150,151,165,172,173,187,192,196,197,198,206,220,],[31,65,78,81,100,102,105,106,107,78,121,78,136,65,78,102,102,105,106,107,78,121,65,78,136,102,105,106,107,121,136,]),'only_defined':([17,],[37,]),'aninhada':([17,],[38,]),'individuals':([18,28,84,],[40,63,112,]),'def_descriptions_axioma':([20,],[44,]),'quantifier_geral':([20,24,42,87,96,],[45,59,45,45,45,]),'quantifier_number':([24,33,111,130,143,174,212,],[58,67,67,147,161,193,224,]),'quantifier':([33,34,101,111,130,131,143,144,165,174,176,183,206,212,213,229,],[66,75,75,132,146,148,160,162,148,192,196,162,196,223,225,225,]),'covered_class':([36,43,109,114,],[80,88,125,125,]),'namespace_type':([59,66,95,104,132,146,160,168,185,192,209,223,231,],[97,103,118,123,103,167,184,188,202,208,221,230,233,]),'auxiliar_fechamento':([90,117,133,],[116,134,152,]),'quantifier_aux_aninhada':([110,126,127,129,139,142,145,146,148,149,150,160,162,163,164,165,183,187,201,],[128,137,138,141,159,137,138,166,169,170,171,166,169,170,171,186,186,204,204,]),'sizecheck':([135,],[154,]),'quantifier_aux_aninhada_extra':([151,172,173,192,194,196,197,198,206,211,214,220,223,225,226,227,229,232,],[175,190,191,207,210,216,217,218,219,190,191,228,207,216,217,218,219,228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classes","S'",1,None,None,None),
  ('classes -> defined_class','classes',1,'p_classes','parser.py',11),
  ('classes -> defined_class classes','classes',2,'p_classes','parser.py',12),
  ('classes -> primitive_class','classes',1,'p_classes','parser.py',13),
  ('classes -> primitive_class classes','classes',2,'p_classes','parser.py',14),
  ('primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section','primitive_class',5,'p_primitive_class','parser.py',22),
  ('subclass_section -> SUBCLASSOF enum_class','subclass_section',2,'p_subclass_section','parser.py',32),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class','subclass_section',4,'p_subclass_section','parser.py',33),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento','subclass_section',5,'p_subclass_section','parser.py',34),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN','subclass_section',7,'p_subclass_section','parser.py',35),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER','subclass_section',2,'p_subclass_section','parser.py',36),
  ('subclass_section -> SUBCLASSOF quantifier_aux_axioma','subclass_section',2,'p_subclass_section','parser.py',37),
  ('auxiliar_fechamento -> CLASS_IDENTIFIER','auxiliar_fechamento',1,'p_auxiliar_fechamento','parser.py',68),
  ('auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento','auxiliar_fechamento',3,'p_auxiliar_fechamento','parser.py',69),
  ('disjoint_section -> DISJOINTCLASSES quantifier_aux','disjoint_section',2,'p_disjoint_section','parser.py',77),
  ('disjoint_section -> empty','disjoint_section',1,'p_disjoint_section','parser.py',78),
  ('disjoint_classes_list -> CLASS_IDENTIFIER','disjoint_classes_list',1,'p_disjoint_classes_list','parser.py',85),
  ('disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list','disjoint_classes_list',3,'p_disjoint_classes_list','parser.py',86),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section','defined_class',5,'p_defined_class','parser.py',94),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section','defined_class',3,'p_defined_class','parser.py',95),
  ('enum_class -> OPEN_CURLY individuals CLOSE_CURLY','enum_class',3,'p_enum_class','parser.py',123),
  ('covered_class -> CLASS_IDENTIFIER OR covered_class','covered_class',3,'p_covered_class','parser.py',137),
  ('covered_class -> CLASS_IDENTIFIER','covered_class',1,'p_covered_class','parser.py',138),
  ('equivalentto_section -> EQUIVALENTTO enum_class','equivalentto_section',2,'p_equivalentto_section','parser.py',153),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class','equivalentto_section',4,'p_equivalentto_section','parser.py',154),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined','equivalentto_section',3,'p_equivalentto_section','parser.py',155),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada','equivalentto_section',3,'p_equivalentto_section','parser.py',156),
  ('def_descriptions -> quantifier_aux','def_descriptions',1,'p_def_descriptions','parser.py',171),
  ('def_descriptions_axioma -> quantifier_aux_axioma','def_descriptions_axioma',1,'p_def_descriptions_axioma','parser.py',176),
  ('aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN','aninhada',5,'p_aninhada','parser.py',182),
  ('aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN','aninhada',8,'p_aninhada','parser.py',183),
  ('only_defined -> comma_and quantifier_aux','only_defined',2,'p_only_defined','parser.py',189),
  ('quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada','quantifier_aux_aninhada',2,'p_quantifier_aux_aninhada','parser.py',194),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada','quantifier_aux_aninhada',4,'p_quantifier_aux_aninhada','parser.py',195),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',196),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type','quantifier_aux_aninhada',4,'p_quantifier_aux_aninhada','parser.py',197),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER','quantifier_aux_aninhada',4,'p_quantifier_aux_aninhada','parser.py',198),
  ('quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',199),
  ('quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',200),
  ('quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',201),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',202),
  ('quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',203),
  ('quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN','quantifier_aux_aninhada',3,'p_quantifier_aux_aninhada','parser.py',204),
  ('quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada','quantifier_aux_aninhada',2,'p_quantifier_aux_aninhada','parser.py',205),
  ('quantifier_aux_aninhada -> CLASS_IDENTIFIER','quantifier_aux_aninhada',1,'p_quantifier_aux_aninhada','parser.py',206),
  ('quantifier_aux_aninhada -> PROPERTY_IDENTIFIER','quantifier_aux_aninhada',1,'p_quantifier_aux_aninhada','parser.py',207),
  ('quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',2,'p_quantifier_aux_aninhada_extra','parser.py',219),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',4,'p_quantifier_aux_aninhada_extra','parser.py',220),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',221),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type','quantifier_aux_aninhada_extra',4,'p_quantifier_aux_aninhada_extra','parser.py',222),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER','quantifier_aux_aninhada_extra',4,'p_quantifier_aux_aninhada_extra','parser.py',223),
  ('quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',224),
  ('quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',225),
  ('quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',226),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',227),
  ('quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',228),
  ('quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN','quantifier_aux_aninhada_extra',3,'p_quantifier_aux_aninhada_extra','parser.py',229),
  ('quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER','quantifier_aux_aninhada_extra',1,'p_quantifier_aux_aninhada_extra','parser.py',230),
  ('quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER','quantifier_aux_aninhada_extra',1,'p_quantifier_aux_aninhada_extra','parser.py',231),
  ('quantifier_aux -> comma_and quantifier_aux','quantifier_aux',2,'p_quantifier_aux','parser.py',243),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER','quantifier_aux',3,'p_quantifier_aux','parser.py',244),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux','quantifier_aux',4,'p_quantifier_aux','parser.py',245),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux',3,'p_quantifier_aux','parser.py',246),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type','quantifier_aux',4,'p_quantifier_aux','parser.py',247),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER','quantifier_aux',4,'p_quantifier_aux','parser.py',248),
  ('quantifier_aux -> quantifier_aux comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',249),
  ('quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',250),
  ('quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',251),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',252),
  ('quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',253),
  ('quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN','quantifier_aux',3,'p_quantifier_aux','parser.py',254),
  ('quantifier_aux -> CLASS_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',255),
  ('quantifier_aux -> PROPERTY_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',256),
  ('quantifier_aux_axioma -> comma_and quantifier_aux_axioma','quantifier_aux_axioma',2,'p_quantifier_aux_axioma','parser.py',270),
  ('quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',271),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type','quantifier_aux_axioma',4,'p_quantifier_aux_axioma','parser.py',272),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER','quantifier_aux_axioma',4,'p_quantifier_aux_axioma','parser.py',273),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',274),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',275),
  ('quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',276),
  ('quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',277),
  ('quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',278),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',279),
  ('quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma','quantifier_aux_axioma',3,'p_quantifier_aux_axioma','parser.py',280),
  ('quantifier_aux_axioma -> CLASS_IDENTIFIER','quantifier_aux_axioma',1,'p_quantifier_aux_axioma','parser.py',281),
  ('quantifier_aux_axioma -> PROPERTY_IDENTIFIER','quantifier_aux_axioma',1,'p_quantifier_aux_axioma','parser.py',282),
  ('quantifier -> SOME','quantifier',1,'p_quantifier','parser.py',299),
  ('quantifier -> ALL','quantifier',1,'p_quantifier','parser.py',300),
  ('quantifier -> VALUE','quantifier',1,'p_quantifier','parser.py',301),
  ('quantifier -> THAT','quantifier',1,'p_quantifier','parser.py',302),
  ('quantifier_number -> MAX','quantifier_number',1,'p_quantifier_number','parser.py',307),
  ('quantifier_number -> MIN','quantifier_number',1,'p_quantifier_number','parser.py',308),
  ('quantifier_number -> EXACTLY','quantifier_number',1,'p_quantifier_number','parser.py',309),
  ('quantifier_geral -> SOME','quantifier_geral',1,'p_quantifier_geral','parser.py',314),
  ('quantifier_geral -> ALL','quantifier_geral',1,'p_quantifier_geral','parser.py',315),
  ('quantifier_geral -> VALUE','quantifier_geral',1,'p_quantifier_geral','parser.py',316),
  ('quantifier_geral -> MAX','quantifier_geral',1,'p_quantifier_geral','parser.py',317),
  ('quantifier_geral -> MIN','quantifier_geral',1,'p_quantifier_geral','parser.py',318),
  ('quantifier_geral -> EXACTLY','quantifier_geral',1,'p_quantifier_geral','parser.py',319),
  ('quantifier_geral -> THAT','quantifier_geral',1,'p_quantifier_geral','parser.py',320),
  ('sizecheck -> EQUAL CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',326),
  ('sizecheck -> GREATER_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',327),
  ('sizecheck -> LESS_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',328),
  ('sizecheck -> GREATER_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',329),
  ('sizecheck -> LESS_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',330),
  ('namespace_type -> NAMESPACE TYPE','namespace_type',2,'p_namespace_type','parser.py',344),
  ('namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET','namespace_type',5,'p_namespace_type','parser.py',345),
  ('individuals_section -> INDIVIDUALS individuals','individuals_section',2,'p_individuals_section','parser.py',352),
  ('individuals_section -> empty','individuals_section',1,'p_individuals_section','parser.py',353),
  ('individuals -> INDIVIDUAL_NAME','individuals',1,'p_individuals','parser.py',360),
  ('individuals -> INDIVIDUAL_NAME COMMA individuals','individuals',3,'p_individuals','parser.py',361),
  ('comma_and -> COMMA','comma_and',1,'p_comma_and','parser.py',368),
  ('comma_and -> AND','comma_and',1,'p_comma_and','parser.py',369),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',374),
]
