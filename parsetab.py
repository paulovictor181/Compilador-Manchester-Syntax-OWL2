
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS CLASS_IDENTIFIER CLOSE_BRACKET CLOSE_CURLY CLOSE_PAREN COMMA DISJOINTCLASSES DISJOINtWITH EQUAL EQUIVALENTTO EXACTLY GREATER_THAN INDIVIDUALS INDIVIDUAL_NAME LESS_THAN MAX MIN NAMESPACE NOT ONLY OPEN_BRACKET OPEN_CURLY OPEN_PAREN OR PROPERTY_IDENTIFIER PROPERTY_IDENTIFIER_SIMPLE SOME SUBCLASSOF THAT TYPE VALUEclasses : defined_class \n               | defined_class classes\n               | primitive_class \n               | primitive_class classes\n               primitive_class : CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_sectionsubclass_section : SUBCLASSOF enum_class\n                        | SUBCLASSOF CLASS_IDENTIFIER def_descriptions ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN\n                        | SUBCLASSOF OR covered_class\n                        | SUBCLASSOF CLASS_IDENTIFIER \n                        | SUBCLASSOF quantifier_aux\n                        auxiliar_fechamento : CLASS_IDENTIFIER   \n                        | CLASS_IDENTIFIER OR auxiliar_fechamento\n    disjoint_section : DISJOINTCLASSES quantifier_aux\n                        | emptydisjoint_classes_list : CLASS_IDENTIFIER\n                             | CLASS_IDENTIFIER COMMA disjoint_classes_listdefined_class : CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section\n                     | CLASS CLASS_IDENTIFIER equivalentto_sectionenum_class : OPEN_CURLY individuals CLOSE_CURLYcovered_class : CLASS_IDENTIFIER OR covered_class\n                     | CLASS_IDENTIFIER\n                equivalentto_section : EQUIVALENTTO enum_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER OR covered_class\n                            | EQUIVALENTTO CLASS_IDENTIFIER aninhada \n                            | EQUIVALENTTO CLASS_IDENTIFIER only_defined\n    def_descriptions : quantifier_aux            \n    only_defined : comma_and quantifier_aux            \n    aninhada : comma_and OPEN_PAREN OPEN_PAREN quantifier_aux CLOSE_PAREN CLOSE_PAREN \n                | comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux CLOSE_PAREN CLOSE_PAREN              \n    quantifier_aux : comma_and quantifier_aux\n                      | OPEN_PAREN quantifier_aux CLOSE_PAREN\n                      | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier namespace_type\n                      | PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type\n                      | PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER\n                      | quantifier_aux comma_and quantifier_aux\n                      | CLASS_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER OR quantifier_aux\n                      | PROPERTY_IDENTIFIER quantifier quantifier_aux\n                      | CLASS_IDENTIFIER comma_and quantifier_aux\n                      | CLASS_IDENTIFIER\n                      | PROPERTY_IDENTIFIER\n    quantifier : SOME\n                  | ALL\n                  | VALUE\n                  | THAT\n                  | MAX\n                  | MIN\n                  | EXACTLY\n                  quantifier_number : MAX\n                  | MIN\n                  | EXACTLY\n                  sizecheck : EQUAL CARDINALITY\n                  | GREATER_THAN CARDINALITY\n                  | LESS_THAN CARDINALITY\n                  | GREATER_THAN EQUAL CARDINALITY\n                  | LESS_THAN EQUAL CARDINALITYnamespace_type : NAMESPACE TYPE\n                      | NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKETindividuals_section : INDIVIDUALS individuals\n                           | emptyindividuals : INDIVIDUAL_NAME\n                   | INDIVIDUAL_NAME COMMA individualscomma_and : COMMA\n                     | ANDempty :'
    
_lr_action_items = {'CLASS':([0,2,3,8,9,12,13,15,16,19,20,23,25,28,30,31,32,33,35,36,39,53,54,56,62,64,66,67,70,71,72,73,75,76,77,78,81,84,86,87,88,89,90,99,104,107,116,],[4,4,4,-18,-67,-67,-67,-14,-22,-6,-9,-10,-43,-17,-62,-5,-13,-42,-24,-25,-63,-8,-21,-30,-61,-23,-27,-19,-38,-39,-30,-31,-37,-32,-40,-34,-41,-64,-20,-33,-59,-35,-36,-7,-28,-60,-29,]),'$end':([1,2,3,5,6,8,9,12,13,15,16,19,20,23,25,28,30,31,32,33,35,36,39,53,54,56,62,64,66,67,70,71,72,73,75,76,77,78,81,84,86,87,88,89,90,99,104,107,116,],[0,-1,-3,-2,-4,-18,-67,-67,-67,-14,-22,-6,-9,-10,-43,-17,-62,-5,-13,-42,-24,-25,-63,-8,-21,-30,-61,-23,-27,-19,-38,-39,-30,-31,-37,-32,-40,-34,-41,-64,-20,-33,-59,-35,-36,-7,-28,-60,-29,]),'CLASS_IDENTIFIER':([4,10,11,14,20,21,22,24,26,27,34,37,41,43,44,45,46,47,48,49,50,51,55,57,59,60,61,63,65,74,76,80,82,85,92,97,98,],[7,17,20,33,33,33,54,33,-65,-66,54,33,33,33,33,-44,-45,-46,-47,-48,-49,-50,33,76,-48,-49,-50,33,33,54,33,90,33,93,76,33,93,]),'EQUIVALENTTO':([7,],[10,]),'SUBCLASSOF':([7,8,16,25,33,35,36,54,56,64,66,67,70,71,72,73,75,76,77,78,81,86,87,88,89,90,104,107,116,],[11,11,-22,-43,-42,-24,-25,-21,-30,-23,-27,-19,-38,-39,-30,-31,-37,-32,-40,-34,-41,-20,-33,-59,-35,-36,-28,-60,-29,]),'DISJOINTCLASSES':([9,19,20,23,25,33,53,54,56,67,70,71,72,73,75,76,77,78,81,86,87,88,89,90,99,107,],[14,-6,-9,-10,-43,-42,-8,-21,-30,-19,-38,-39,-30,-31,-37,-32,-40,-34,-41,-20,-33,-59,-35,-36,-7,-60,]),'INDIVIDUALS':([9,12,13,15,19,20,23,25,32,33,53,54,56,67,70,71,72,73,75,76,77,78,81,86,87,88,89,90,99,107,],[-67,29,29,-14,-6,-9,-10,-43,-13,-42,-8,-21,-30,-19,-38,-39,-30,-31,-37,-32,-40,-34,-41,-20,-33,-59,-35,-36,-7,-60,]),'OPEN_CURLY':([10,11,],[18,18,]),'OR':([11,17,20,33,54,76,93,],[22,34,43,43,74,43,98,]),'OPEN_PAREN':([11,14,20,21,24,26,27,37,41,43,44,45,46,47,48,49,50,51,55,57,59,60,61,63,65,69,76,82,92,97,],[21,21,21,21,21,-65,-66,65,21,21,21,-44,-45,-46,-47,-48,-49,-50,21,21,-48,-49,-50,21,82,85,21,21,97,21,]),'PROPERTY_IDENTIFIER':([11,14,20,21,24,26,27,37,41,43,44,45,46,47,48,49,50,51,55,57,59,60,61,63,65,76,82,92,97,],[25,25,25,25,25,-65,-66,25,25,25,25,-44,-45,-46,-47,-48,-49,-50,25,25,-48,-49,-50,25,83,25,25,25,25,]),'COMMA':([11,14,17,20,21,23,24,25,26,27,32,33,37,39,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,59,60,61,63,65,66,70,71,72,73,75,76,77,78,81,82,83,87,88,89,90,91,92,96,97,105,107,113,],[26,26,26,26,26,26,26,-43,-65,-66,26,26,26,68,26,26,26,26,-44,-45,-46,-47,-48,-49,-50,26,26,26,26,-48,-49,-50,26,26,26,26,26,26,-31,26,26,26,-34,26,26,-43,26,-59,-35,-36,26,26,-31,26,26,-60,-31,]),'AND':([11,14,17,20,21,23,24,25,26,27,32,33,37,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,59,60,61,63,65,66,70,71,72,73,75,76,77,78,81,82,83,87,88,89,90,91,92,96,97,105,107,113,],[27,27,27,27,27,27,27,-43,-65,-66,27,27,27,27,27,27,27,-44,-45,-46,-47,-48,-49,-50,27,27,27,27,-48,-49,-50,27,27,27,27,27,27,-31,27,27,27,-34,27,27,-43,27,-59,-35,-36,27,27,-31,27,27,-60,-31,]),'INDIVIDUAL_NAME':([18,29,68,],[39,39,39,]),'SOME':([20,25,33,76,83,],[45,45,45,45,45,]),'ALL':([20,25,33,76,83,],[46,46,46,46,46,]),'VALUE':([20,25,33,76,83,],[47,47,47,47,47,]),'THAT':([20,25,33,76,83,],[48,48,48,48,48,]),'MAX':([20,25,33,76,83,],[49,59,49,49,59,]),'MIN':([20,25,33,76,83,],[50,60,50,50,60,]),'EXACTLY':([20,25,33,76,83,],[51,61,51,51,61,]),'ONLY':([25,33,40,42,56,70,71,72,73,75,76,77,78,81,87,88,89,90,107,],[-43,-42,69,-26,-30,-38,-39,-30,-31,-37,-32,-40,-34,-41,-33,-59,-35,-36,-60,]),'CLOSE_PAREN':([25,33,52,56,70,71,72,73,75,76,77,78,81,83,87,88,89,90,91,93,94,96,105,106,107,113,],[-43,-42,73,-30,-38,-39,-30,-31,-37,-32,-40,-34,-41,-43,-33,-59,-35,-36,96,-11,99,104,113,-12,-60,116,]),'CLOSE_CURLY':([38,39,84,],[67,-63,-64,]),'NAMESPACE':([45,46,47,48,57,59,60,61,80,92,],[-44,-45,-46,-47,79,-48,-49,-50,79,79,]),'CARDINALITY':([58,59,60,61,101,102,103,110,112,],[80,-51,-52,-53,108,109,111,114,115,]),'TYPE':([79,],[88,]),'OPEN_BRACKET':([88,],[95,]),'EQUAL':([95,102,103,],[101,110,112,]),'GREATER_THAN':([95,],[102,]),'LESS_THAN':([95,],[103,]),'CLOSE_BRACKET':([100,108,109,111,114,115,],[107,-54,-55,-56,-57,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'classes':([0,2,3,],[1,5,6,]),'defined_class':([0,2,3,],[2,2,2,]),'primitive_class':([0,2,3,],[3,3,3,]),'equivalentto_section':([7,],[8,]),'subclass_section':([7,8,],[9,12,]),'disjoint_section':([9,],[13,]),'empty':([9,12,13,],[15,30,30,]),'enum_class':([10,11,],[16,19,]),'quantifier_aux':([11,14,20,21,24,37,41,43,44,55,57,63,65,76,82,92,97,],[23,32,42,52,56,66,70,71,72,75,77,81,52,87,91,77,105,]),'comma_and':([11,14,17,20,21,23,24,32,33,37,41,42,43,44,52,55,56,57,63,65,66,70,71,72,75,76,77,81,82,87,91,92,97,105,],[24,24,37,44,24,55,24,55,63,24,24,55,24,24,55,24,55,24,24,24,55,55,55,55,55,44,55,55,24,55,55,24,24,55,]),'individuals_section':([12,13,],[28,31,]),'aninhada':([17,],[35,]),'only_defined':([17,],[36,]),'individuals':([18,29,68,],[38,62,84,]),'def_descriptions':([20,],[40,]),'quantifier':([20,25,33,76,83,],[41,57,41,41,92,]),'covered_class':([22,34,74,],[53,64,86,]),'quantifier_number':([25,83,],[58,58,]),'namespace_type':([57,80,92,],[78,89,78,]),'auxiliar_fechamento':([85,98,],[94,106,]),'sizecheck':([95,],[100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> classes","S'",1,None,None,None),
  ('classes -> defined_class','classes',1,'p_classes','parser.py',11),
  ('classes -> defined_class classes','classes',2,'p_classes','parser.py',12),
  ('classes -> primitive_class','classes',1,'p_classes','parser.py',13),
  ('classes -> primitive_class classes','classes',2,'p_classes','parser.py',14),
  ('primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section','primitive_class',5,'p_primitive_class','parser.py',22),
  ('subclass_section -> SUBCLASSOF enum_class','subclass_section',2,'p_subclass_section','parser.py',32),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN','subclass_section',7,'p_subclass_section','parser.py',33),
  ('subclass_section -> SUBCLASSOF OR covered_class','subclass_section',3,'p_subclass_section','parser.py',34),
  ('subclass_section -> SUBCLASSOF CLASS_IDENTIFIER','subclass_section',2,'p_subclass_section','parser.py',35),
  ('subclass_section -> SUBCLASSOF quantifier_aux','subclass_section',2,'p_subclass_section','parser.py',36),
  ('auxiliar_fechamento -> CLASS_IDENTIFIER','auxiliar_fechamento',1,'p_auxiliar_fechamento','parser.py',63),
  ('auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento','auxiliar_fechamento',3,'p_auxiliar_fechamento','parser.py',64),
  ('disjoint_section -> DISJOINTCLASSES quantifier_aux','disjoint_section',2,'p_disjoint_section','parser.py',72),
  ('disjoint_section -> empty','disjoint_section',1,'p_disjoint_section','parser.py',73),
  ('disjoint_classes_list -> CLASS_IDENTIFIER','disjoint_classes_list',1,'p_disjoint_classes_list','parser.py',80),
  ('disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list','disjoint_classes_list',3,'p_disjoint_classes_list','parser.py',81),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section','defined_class',5,'p_defined_class','parser.py',89),
  ('defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section','defined_class',3,'p_defined_class','parser.py',90),
  ('enum_class -> OPEN_CURLY individuals CLOSE_CURLY','enum_class',3,'p_enum_class','parser.py',119),
  ('covered_class -> CLASS_IDENTIFIER OR covered_class','covered_class',3,'p_covered_class','parser.py',133),
  ('covered_class -> CLASS_IDENTIFIER','covered_class',1,'p_covered_class','parser.py',134),
  ('equivalentto_section -> EQUIVALENTTO enum_class','equivalentto_section',2,'p_equivalentto_section','parser.py',148),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class','equivalentto_section',4,'p_equivalentto_section','parser.py',149),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada','equivalentto_section',3,'p_equivalentto_section','parser.py',150),
  ('equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined','equivalentto_section',3,'p_equivalentto_section','parser.py',151),
  ('def_descriptions -> quantifier_aux','def_descriptions',1,'p_def_descriptions','parser.py',163),
  ('only_defined -> comma_and quantifier_aux','only_defined',2,'p_only_defined','parser.py',168),
  ('aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux CLOSE_PAREN CLOSE_PAREN','aninhada',6,'p_aninhada','parser.py',172),
  ('aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux CLOSE_PAREN CLOSE_PAREN','aninhada',8,'p_aninhada','parser.py',173),
  ('quantifier_aux -> comma_and quantifier_aux','quantifier_aux',2,'p_quantifier_aux','parser.py',179),
  ('quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN','quantifier_aux',3,'p_quantifier_aux','parser.py',180),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER','quantifier_aux',3,'p_quantifier_aux','parser.py',181),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux','quantifier_aux',4,'p_quantifier_aux','parser.py',182),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type','quantifier_aux',3,'p_quantifier_aux','parser.py',183),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type','quantifier_aux',4,'p_quantifier_aux','parser.py',184),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER','quantifier_aux',4,'p_quantifier_aux','parser.py',185),
  ('quantifier_aux -> quantifier_aux comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',186),
  ('quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',187),
  ('quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',188),
  ('quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',189),
  ('quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux','quantifier_aux',3,'p_quantifier_aux','parser.py',190),
  ('quantifier_aux -> CLASS_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',191),
  ('quantifier_aux -> PROPERTY_IDENTIFIER','quantifier_aux',1,'p_quantifier_aux','parser.py',192),
  ('quantifier -> SOME','quantifier',1,'p_quantifier','parser.py',208),
  ('quantifier -> ALL','quantifier',1,'p_quantifier','parser.py',209),
  ('quantifier -> VALUE','quantifier',1,'p_quantifier','parser.py',210),
  ('quantifier -> THAT','quantifier',1,'p_quantifier','parser.py',211),
  ('quantifier -> MAX','quantifier',1,'p_quantifier','parser.py',212),
  ('quantifier -> MIN','quantifier',1,'p_quantifier','parser.py',213),
  ('quantifier -> EXACTLY','quantifier',1,'p_quantifier','parser.py',214),
  ('quantifier_number -> MAX','quantifier_number',1,'p_quantifier_number','parser.py',219),
  ('quantifier_number -> MIN','quantifier_number',1,'p_quantifier_number','parser.py',220),
  ('quantifier_number -> EXACTLY','quantifier_number',1,'p_quantifier_number','parser.py',221),
  ('sizecheck -> EQUAL CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',227),
  ('sizecheck -> GREATER_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',228),
  ('sizecheck -> LESS_THAN CARDINALITY','sizecheck',2,'p_sizecheck','parser.py',229),
  ('sizecheck -> GREATER_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',230),
  ('sizecheck -> LESS_THAN EQUAL CARDINALITY','sizecheck',3,'p_sizecheck','parser.py',231),
  ('namespace_type -> NAMESPACE TYPE','namespace_type',2,'p_namespace_type','parser.py',245),
  ('namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET','namespace_type',5,'p_namespace_type','parser.py',246),
  ('individuals_section -> INDIVIDUALS individuals','individuals_section',2,'p_individuals_section','parser.py',253),
  ('individuals_section -> empty','individuals_section',1,'p_individuals_section','parser.py',254),
  ('individuals -> INDIVIDUAL_NAME','individuals',1,'p_individuals','parser.py',261),
  ('individuals -> INDIVIDUAL_NAME COMMA individuals','individuals',3,'p_individuals','parser.py',262),
  ('comma_and -> COMMA','comma_and',1,'p_comma_and','parser.py',269),
  ('comma_and -> AND','comma_and',1,'p_comma_and','parser.py',270),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',275),
]
