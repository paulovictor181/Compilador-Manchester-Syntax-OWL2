Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_CURLY
    DISJOINtWITH
    NOT
    OPEN_CURLY
    PROPERTY_IDENTIFIER_SIMPLE
    THAT

Grammar

Rule 0     S' -> classes
Rule 1     classes -> defined_class
Rule 2     classes -> defined_class classes
Rule 3     classes -> primitive_class
Rule 4     classes -> primitive_class classes
Rule 5     classes -> closure_axiom
Rule 6     classes -> closure_axiom classes
Rule 7     primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
Rule 8     subclass_section -> SUBCLASSOF def_descriptions
Rule 9     subclass_section -> empty
Rule 10    disjoint_section -> DISJOINTCLASSES disjoint_classes_list
Rule 11    disjoint_section -> empty
Rule 12    disjoint_classes_list -> CLASS_IDENTIFIER
Rule 13    disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list
Rule 14    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
Rule 15    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
Rule 16    closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 17    def_descriptions -> CLASS_IDENTIFIER
Rule 18    def_descriptions -> namespace_type
Rule 19    def_descriptions -> CLASS_IDENTIFIER AND def_descriptions
Rule 20    def_descriptions -> CLASS_IDENTIFIER OR def_descriptions
Rule 21    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
Rule 22    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type
Rule 23    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
Rule 24    def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
Rule 25    def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type
Rule 26    def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
Rule 27    def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type
Rule 28    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
Rule 29    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
Rule 30    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
Rule 31    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
Rule 32    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
Rule 33    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
Rule 34    def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 35    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
Rule 36    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
Rule 37    def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 38    comparison -> EQUAL CARDINALITY
Rule 39    comparison -> GREATER_THAN CARDINALITY
Rule 40    comparison -> LESS_THAN CARDINALITY
Rule 41    comparison -> GREATER_THAN EQUAL CARDINALITY
Rule 42    comparison -> LESS_THAN EQUAL CARDINALITY
Rule 43    namespace_type -> NAMESPACE TYPE
Rule 44    individuals_section -> INDIVIDUALS individuals
Rule 45    individuals_section -> empty
Rule 46    individuals -> INDIVIDUAL_NAME
Rule 47    individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 48    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 24 25
AND                  : 14 15 19
CARDINALITY          : 28 29 30 31 32 33 38 39 40 41 42
CLASS                : 7 14 15
CLASS_IDENTIFIER     : 7 12 13 14 14 15 15 17 19 20 21 24 26 28 30 32 35 36 36
CLOSE_BRACKET        : 23
CLOSE_CURLY          : 
CLOSE_PAREN          : 16 34 37
COMMA                : 13 35 36 47
DISJOINTCLASSES      : 10
DISJOINtWITH         : 
EQUAL                : 38 41 42
EQUIVALENTTO         : 14 15
EXACTLY              : 32 33
GREATER_THAN         : 39 41
INDIVIDUALS          : 44
INDIVIDUAL_NAME      : 46 47
LESS_THAN            : 40 42
MAX                  : 30 31
MIN                  : 28 29
NAMESPACE            : 43
NOT                  : 
ONLY                 : 16 37
OPEN_BRACKET         : 23
OPEN_CURLY           : 
OPEN_PAREN           : 16 34 37
OR                   : 20
PROPERTY_IDENTIFIER  : 16 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 36 37
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 21 22 23 35 36 36
SUBCLASSOF           : 8
THAT                 : 
TYPE                 : 43
VALUE                : 26 27
error                : 

Nonterminals, with rules where they appear

classes              : 2 4 6 0
closure_axiom        : 5 6
comparison           : 23
def_descriptions     : 8 14 15 16 19 20 34 35 37
defined_class        : 1 2
disjoint_classes_list : 10 13
disjoint_section     : 7
empty                : 9 11 45
individuals          : 44 47
individuals_section  : 7 14
namespace_type       : 18 22 23 25 27 29 31 33
primitive_class      : 3 4
subclass_section     : 7

Parsing method: LALR

state 0

    (0) S' -> . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (5) classes -> . closure_axiom
    (6) classes -> . closure_axiom classes
    (14) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
    (16) closure_axiom -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    CLASS           shift and go to state 5
    PROPERTY_IDENTIFIER shift and go to state 6

    classes                        shift and go to state 1
    defined_class                  shift and go to state 2
    primitive_class                shift and go to state 3
    closure_axiom                  shift and go to state 4

state 1

    (0) S' -> classes .



state 2

    (1) classes -> defined_class .
    (2) classes -> defined_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (5) classes -> . closure_axiom
    (6) classes -> . closure_axiom classes
    (14) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
    (16) closure_axiom -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    $end            reduce using rule 1 (classes -> defined_class .)
    CLASS           shift and go to state 5
    PROPERTY_IDENTIFIER shift and go to state 6

    defined_class                  shift and go to state 2
    classes                        shift and go to state 7
    primitive_class                shift and go to state 3
    closure_axiom                  shift and go to state 4

state 3

    (3) classes -> primitive_class .
    (4) classes -> primitive_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (5) classes -> . closure_axiom
    (6) classes -> . closure_axiom classes
    (14) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
    (16) closure_axiom -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    $end            reduce using rule 3 (classes -> primitive_class .)
    CLASS           shift and go to state 5
    PROPERTY_IDENTIFIER shift and go to state 6

    primitive_class                shift and go to state 3
    classes                        shift and go to state 8
    defined_class                  shift and go to state 2
    closure_axiom                  shift and go to state 4

state 4

    (5) classes -> closure_axiom .
    (6) classes -> closure_axiom . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (5) classes -> . closure_axiom
    (6) classes -> . closure_axiom classes
    (14) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
    (16) closure_axiom -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    $end            reduce using rule 5 (classes -> closure_axiom .)
    CLASS           shift and go to state 5
    PROPERTY_IDENTIFIER shift and go to state 6

    closure_axiom                  shift and go to state 4
    classes                        shift and go to state 9
    defined_class                  shift and go to state 2
    primitive_class                shift and go to state 3

state 5

    (14) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> CLASS . CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS_IDENTIFIER shift and go to state 10


state 6

    (16) closure_axiom -> PROPERTY_IDENTIFIER . ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    ONLY            shift and go to state 11


state 7

    (2) classes -> defined_class classes .

    $end            reduce using rule 2 (classes -> defined_class classes .)


state 8

    (4) classes -> primitive_class classes .

    $end            reduce using rule 4 (classes -> primitive_class classes .)


state 9

    (6) classes -> closure_axiom classes .

    $end            reduce using rule 6 (classes -> closure_axiom classes .)


state 10

    (14) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (7) primitive_class -> CLASS CLASS_IDENTIFIER . subclass_section disjoint_section individuals_section
    (8) subclass_section -> . SUBCLASSOF def_descriptions
    (9) subclass_section -> . empty
    (48) empty -> .

    EQUIVALENTTO    shift and go to state 12
    SUBCLASSOF      shift and go to state 14
    DISJOINTCLASSES reduce using rule 48 (empty -> .)
    INDIVIDUALS     reduce using rule 48 (empty -> .)
    CLASS           reduce using rule 48 (empty -> .)
    PROPERTY_IDENTIFIER reduce using rule 48 (empty -> .)
    $end            reduce using rule 48 (empty -> .)

    subclass_section               shift and go to state 13
    empty                          shift and go to state 15

state 11

    (16) closure_axiom -> PROPERTY_IDENTIFIER ONLY . OPEN_PAREN def_descriptions CLOSE_PAREN

    OPEN_PAREN      shift and go to state 16


state 12

    (14) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions individuals_section
    (15) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions

    CLASS_IDENTIFIER shift and go to state 17


state 13

    (7) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section . disjoint_section individuals_section
    (10) disjoint_section -> . DISJOINTCLASSES disjoint_classes_list
    (11) disjoint_section -> . empty
    (48) empty -> .

    DISJOINTCLASSES shift and go to state 19
    INDIVIDUALS     reduce using rule 48 (empty -> .)
    CLASS           reduce using rule 48 (empty -> .)
    PROPERTY_IDENTIFIER reduce using rule 48 (empty -> .)
    $end            reduce using rule 48 (empty -> .)

    disjoint_section               shift and go to state 18
    empty                          shift and go to state 20

state 14

    (8) subclass_section -> SUBCLASSOF . def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 21
    namespace_type                 shift and go to state 23

state 15

    (9) subclass_section -> empty .

    DISJOINTCLASSES reduce using rule 9 (subclass_section -> empty .)
    INDIVIDUALS     reduce using rule 9 (subclass_section -> empty .)
    CLASS           reduce using rule 9 (subclass_section -> empty .)
    PROPERTY_IDENTIFIER reduce using rule 9 (subclass_section -> empty .)
    $end            reduce using rule 9 (subclass_section -> empty .)


state 16

    (16) closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN . def_descriptions CLOSE_PAREN
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 27
    namespace_type                 shift and go to state 23

state 17

    (14) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions individuals_section
    (15) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions

    AND             shift and go to state 28


state 18

    (7) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section . individuals_section
    (44) individuals_section -> . INDIVIDUALS individuals
    (45) individuals_section -> . empty
    (48) empty -> .

    INDIVIDUALS     shift and go to state 30
    CLASS           reduce using rule 48 (empty -> .)
    PROPERTY_IDENTIFIER reduce using rule 48 (empty -> .)
    $end            reduce using rule 48 (empty -> .)

    individuals_section            shift and go to state 29
    empty                          shift and go to state 31

state 19

    (10) disjoint_section -> DISJOINTCLASSES . disjoint_classes_list
    (12) disjoint_classes_list -> . CLASS_IDENTIFIER
    (13) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 33

    disjoint_classes_list          shift and go to state 32

state 20

    (11) disjoint_section -> empty .

    INDIVIDUALS     reduce using rule 11 (disjoint_section -> empty .)
    CLASS           reduce using rule 11 (disjoint_section -> empty .)
    PROPERTY_IDENTIFIER reduce using rule 11 (disjoint_section -> empty .)
    $end            reduce using rule 11 (disjoint_section -> empty .)


state 21

    (8) subclass_section -> SUBCLASSOF def_descriptions .

    DISJOINTCLASSES reduce using rule 8 (subclass_section -> SUBCLASSOF def_descriptions .)
    INDIVIDUALS     reduce using rule 8 (subclass_section -> SUBCLASSOF def_descriptions .)
    CLASS           reduce using rule 8 (subclass_section -> SUBCLASSOF def_descriptions .)
    PROPERTY_IDENTIFIER reduce using rule 8 (subclass_section -> SUBCLASSOF def_descriptions .)
    $end            reduce using rule 8 (subclass_section -> SUBCLASSOF def_descriptions .)


state 22

    (17) def_descriptions -> CLASS_IDENTIFIER .
    (19) def_descriptions -> CLASS_IDENTIFIER . AND def_descriptions
    (20) def_descriptions -> CLASS_IDENTIFIER . OR def_descriptions

    DISJOINTCLASSES reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER .)
    AND             shift and go to state 34
    OR              shift and go to state 35


state 23

    (18) def_descriptions -> namespace_type .

    DISJOINTCLASSES reduce using rule 18 (def_descriptions -> namespace_type .)
    INDIVIDUALS     reduce using rule 18 (def_descriptions -> namespace_type .)
    CLASS           reduce using rule 18 (def_descriptions -> namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 18 (def_descriptions -> namespace_type .)
    $end            reduce using rule 18 (def_descriptions -> namespace_type .)
    CLOSE_PAREN     reduce using rule 18 (def_descriptions -> namespace_type .)


state 24

    (21) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type
    (23) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> PROPERTY_IDENTIFIER . ALL CLASS_IDENTIFIER
    (25) def_descriptions -> PROPERTY_IDENTIFIER . ALL namespace_type
    (26) def_descriptions -> PROPERTY_IDENTIFIER . VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> PROPERTY_IDENTIFIER . VALUE namespace_type
    (28) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY namespace_type
    (30) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY namespace_type
    (32) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY namespace_type
    (35) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> PROPERTY_IDENTIFIER . ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    SOME            shift and go to state 36
    ALL             shift and go to state 37
    VALUE           shift and go to state 38
    MIN             shift and go to state 39
    MAX             shift and go to state 40
    EXACTLY         shift and go to state 41
    ONLY            shift and go to state 42


state 25

    (34) def_descriptions -> OPEN_PAREN . def_descriptions CLOSE_PAREN
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 43
    namespace_type                 shift and go to state 23

state 26

    (43) namespace_type -> NAMESPACE . TYPE

    TYPE            shift and go to state 44


state 27

    (16) closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 45


state 28

    (14) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions individuals_section
    (15) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 46
    namespace_type                 shift and go to state 23

state 29

    (7) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .

    CLASS           reduce using rule 7 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)
    PROPERTY_IDENTIFIER reduce using rule 7 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)
    $end            reduce using rule 7 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)


state 30

    (44) individuals_section -> INDIVIDUALS . individuals
    (46) individuals -> . INDIVIDUAL_NAME
    (47) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 48

    individuals                    shift and go to state 47

state 31

    (45) individuals_section -> empty .

    CLASS           reduce using rule 45 (individuals_section -> empty .)
    PROPERTY_IDENTIFIER reduce using rule 45 (individuals_section -> empty .)
    $end            reduce using rule 45 (individuals_section -> empty .)


state 32

    (10) disjoint_section -> DISJOINTCLASSES disjoint_classes_list .

    INDIVIDUALS     reduce using rule 10 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    CLASS           reduce using rule 10 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    PROPERTY_IDENTIFIER reduce using rule 10 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    $end            reduce using rule 10 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)


state 33

    (12) disjoint_classes_list -> CLASS_IDENTIFIER .
    (13) disjoint_classes_list -> CLASS_IDENTIFIER . COMMA disjoint_classes_list

    INDIVIDUALS     reduce using rule 12 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 12 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 12 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    $end            reduce using rule 12 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 49


state 34

    (19) def_descriptions -> CLASS_IDENTIFIER AND . def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 50
    namespace_type                 shift and go to state 23

state 35

    (20) def_descriptions -> CLASS_IDENTIFIER OR . def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 51
    namespace_type                 shift and go to state 23

state 36

    (21) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type
    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 52
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 53

state 37

    (24) def_descriptions -> PROPERTY_IDENTIFIER ALL . CLASS_IDENTIFIER
    (25) def_descriptions -> PROPERTY_IDENTIFIER ALL . namespace_type
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 54
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 55

state 38

    (26) def_descriptions -> PROPERTY_IDENTIFIER VALUE . CLASS_IDENTIFIER
    (27) def_descriptions -> PROPERTY_IDENTIFIER VALUE . namespace_type
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 56
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 57

state 39

    (28) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 58


state 40

    (30) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 59


state 41

    (32) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 60


state 42

    (37) def_descriptions -> PROPERTY_IDENTIFIER ONLY . OPEN_PAREN def_descriptions CLOSE_PAREN

    OPEN_PAREN      shift and go to state 61


state 43

    (34) def_descriptions -> OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 62


state 44

    (43) namespace_type -> NAMESPACE TYPE .

    DISJOINTCLASSES reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    INDIVIDUALS     reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    CLASS           reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    $end            reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    CLOSE_PAREN     reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)
    OPEN_BRACKET    reduce using rule 43 (namespace_type -> NAMESPACE TYPE .)


state 45

    (16) closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .

    CLASS           reduce using rule 16 (closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 16 (closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 16 (closure_axiom -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 46

    (14) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions . individuals_section
    (15) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .
    (44) individuals_section -> . INDIVIDUALS individuals
    (45) individuals_section -> . empty
    (48) empty -> .

  ! reduce/reduce conflict for CLASS resolved using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
  ! reduce/reduce conflict for PROPERTY_IDENTIFIER resolved using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
  ! reduce/reduce conflict for $end resolved using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    PROPERTY_IDENTIFIER reduce using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 15 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     shift and go to state 30

  ! CLASS           [ reduce using rule 48 (empty -> .) ]
  ! PROPERTY_IDENTIFIER [ reduce using rule 48 (empty -> .) ]
  ! $end            [ reduce using rule 48 (empty -> .) ]

    individuals_section            shift and go to state 63
    empty                          shift and go to state 31

state 47

    (44) individuals_section -> INDIVIDUALS individuals .

    CLASS           reduce using rule 44 (individuals_section -> INDIVIDUALS individuals .)
    PROPERTY_IDENTIFIER reduce using rule 44 (individuals_section -> INDIVIDUALS individuals .)
    $end            reduce using rule 44 (individuals_section -> INDIVIDUALS individuals .)


state 48

    (46) individuals -> INDIVIDUAL_NAME .
    (47) individuals -> INDIVIDUAL_NAME . COMMA individuals

    CLASS           reduce using rule 46 (individuals -> INDIVIDUAL_NAME .)
    PROPERTY_IDENTIFIER reduce using rule 46 (individuals -> INDIVIDUAL_NAME .)
    $end            reduce using rule 46 (individuals -> INDIVIDUAL_NAME .)
    COMMA           shift and go to state 64


state 49

    (13) disjoint_classes_list -> CLASS_IDENTIFIER COMMA . disjoint_classes_list
    (12) disjoint_classes_list -> . CLASS_IDENTIFIER
    (13) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 33

    disjoint_classes_list          shift and go to state 65

state 50

    (19) def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .

    DISJOINTCLASSES reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    PROPERTY_IDENTIFIER reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLOSE_PAREN     reduce using rule 19 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)


state 51

    (20) def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .

    DISJOINTCLASSES reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    INDIVIDUALS     reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLASS           reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    PROPERTY_IDENTIFIER reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    $end            reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLOSE_PAREN     reduce using rule 20 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)


state 52

    (21) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .
    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER

    DISJOINTCLASSES reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLASS           reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    COMMA           shift and go to state 66


state 53

    (22) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .
    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type . OPEN_BRACKET comparison CLOSE_BRACKET

    DISJOINTCLASSES reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    INDIVIDUALS     reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLASS           reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    $end            reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLOSE_PAREN     reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    OPEN_BRACKET    shift and go to state 67


state 54

    (24) def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLASS           reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    $end            reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)


state 55

    (25) def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .

    DISJOINTCLASSES reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    INDIVIDUALS     reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLASS           reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    $end            reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLOSE_PAREN     reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)


state 56

    (26) def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLASS           reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)


state 57

    (27) def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .

    DISJOINTCLASSES reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    INDIVIDUALS     reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLASS           reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    $end            reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLOSE_PAREN     reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)


state 58

    (28) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . CLASS_IDENTIFIER
    (29) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . namespace_type
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 68
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 69

state 59

    (30) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . CLASS_IDENTIFIER
    (31) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . namespace_type
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 70
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 71

state 60

    (32) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . CLASS_IDENTIFIER
    (33) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . namespace_type
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 72
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 73

state 61

    (37) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN . def_descriptions CLOSE_PAREN
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 22
    PROPERTY_IDENTIFIER shift and go to state 24
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 74
    namespace_type                 shift and go to state 23

state 62

    (34) def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLASS           reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 34 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 63

    (14) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .

    CLASS           reduce using rule 14 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)
    PROPERTY_IDENTIFIER reduce using rule 14 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)
    $end            reduce using rule 14 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)


state 64

    (47) individuals -> INDIVIDUAL_NAME COMMA . individuals
    (46) individuals -> . INDIVIDUAL_NAME
    (47) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 48

    individuals                    shift and go to state 75

state 65

    (13) disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .

    INDIVIDUALS     reduce using rule 13 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    CLASS           reduce using rule 13 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    PROPERTY_IDENTIFIER reduce using rule 13 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    $end            reduce using rule 13 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)


state 66

    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA . def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (17) def_descriptions -> . CLASS_IDENTIFIER
    (18) def_descriptions -> . namespace_type
    (19) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (20) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (21) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (25) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (26) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (30) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (32) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (34) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (35) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (43) namespace_type -> . NAMESPACE TYPE

    PROPERTY_IDENTIFIER shift and go to state 76
    CLASS_IDENTIFIER shift and go to state 22
    OPEN_PAREN      shift and go to state 25
    NAMESPACE       shift and go to state 26

    def_descriptions               shift and go to state 77
    namespace_type                 shift and go to state 23

state 67

    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET . comparison CLOSE_BRACKET
    (38) comparison -> . EQUAL CARDINALITY
    (39) comparison -> . GREATER_THAN CARDINALITY
    (40) comparison -> . LESS_THAN CARDINALITY
    (41) comparison -> . GREATER_THAN EQUAL CARDINALITY
    (42) comparison -> . LESS_THAN EQUAL CARDINALITY

    EQUAL           shift and go to state 79
    GREATER_THAN    shift and go to state 80
    LESS_THAN       shift and go to state 81

    comparison                     shift and go to state 78

state 68

    (28) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)


state 69

    (29) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLASS           reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    $end            reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)


state 70

    (30) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)


state 71

    (31) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLASS           reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    $end            reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 31 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)


state 72

    (32) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)


state 73

    (33) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLASS           reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    $end            reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 33 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)


state 74

    (37) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 82


state 75

    (47) individuals -> INDIVIDUAL_NAME COMMA individuals .

    CLASS           reduce using rule 47 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    PROPERTY_IDENTIFIER reduce using rule 47 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    $end            reduce using rule 47 (individuals -> INDIVIDUAL_NAME COMMA individuals .)


state 76

    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type
    (23) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (24) def_descriptions -> PROPERTY_IDENTIFIER . ALL CLASS_IDENTIFIER
    (25) def_descriptions -> PROPERTY_IDENTIFIER . ALL namespace_type
    (26) def_descriptions -> PROPERTY_IDENTIFIER . VALUE CLASS_IDENTIFIER
    (27) def_descriptions -> PROPERTY_IDENTIFIER . VALUE namespace_type
    (28) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY CLASS_IDENTIFIER
    (29) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY namespace_type
    (30) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY CLASS_IDENTIFIER
    (31) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY namespace_type
    (32) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY CLASS_IDENTIFIER
    (33) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY namespace_type
    (35) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (37) def_descriptions -> PROPERTY_IDENTIFIER . ONLY OPEN_PAREN def_descriptions CLOSE_PAREN

    SOME            shift and go to state 83
    ALL             shift and go to state 37
    VALUE           shift and go to state 38
    MIN             shift and go to state 39
    MAX             shift and go to state 40
    EXACTLY         shift and go to state 41
    ONLY            shift and go to state 42


state 77

    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .

    DISJOINTCLASSES reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    INDIVIDUALS     reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLASS           reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    PROPERTY_IDENTIFIER reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    $end            reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLOSE_PAREN     reduce using rule 35 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)


state 78

    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 84


state 79

    (38) comparison -> EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 85


state 80

    (39) comparison -> GREATER_THAN . CARDINALITY
    (41) comparison -> GREATER_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 86
    EQUAL           shift and go to state 87


state 81

    (40) comparison -> LESS_THAN . CARDINALITY
    (42) comparison -> LESS_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 88
    EQUAL           shift and go to state 89


state 82

    (37) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLASS           reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 37 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 83

    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type
    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (43) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 90
    NAMESPACE       shift and go to state 26

    namespace_type                 shift and go to state 53

state 84

    (23) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .

    DISJOINTCLASSES reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    INDIVIDUALS     reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLASS           reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    PROPERTY_IDENTIFIER reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    $end            reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLOSE_PAREN     reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)


state 85

    (38) comparison -> EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 38 (comparison -> EQUAL CARDINALITY .)


state 86

    (39) comparison -> GREATER_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 39 (comparison -> GREATER_THAN CARDINALITY .)


state 87

    (41) comparison -> GREATER_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 91


state 88

    (40) comparison -> LESS_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 40 (comparison -> LESS_THAN CARDINALITY .)


state 89

    (42) comparison -> LESS_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 92


state 90

    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .
    (21) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .
    (35) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA def_descriptions
    (36) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER

  ! reduce/reduce conflict for DISJOINTCLASSES resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLASS resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for PROPERTY_IDENTIFIER resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    DISJOINTCLASSES reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLASS           reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    COMMA           shift and go to state 66

  ! DISJOINTCLASSES [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]
  ! INDIVIDUALS     [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]
  ! CLASS           [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]
  ! PROPERTY_IDENTIFIER [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 36 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .) ]


state 91

    (41) comparison -> GREATER_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 41 (comparison -> GREATER_THAN EQUAL CARDINALITY .)


state 92

    (42) comparison -> LESS_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 42 (comparison -> LESS_THAN EQUAL CARDINALITY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 46 resolved using rule (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions)
WARNING: rejected rule (empty -> <empty>) in state 46
WARNING: reduce/reduce conflict in state 90 resolved using rule (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER)
WARNING: rejected rule (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER) in state 90
WARNING: Rule (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER) is never reduced
