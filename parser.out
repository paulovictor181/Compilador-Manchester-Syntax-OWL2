Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_CURLY
    NOT
    OPEN_CURLY
    PROPERTY_IDENTIFIER_SIMPLE
    THAT

Grammar

Rule 0     S' -> classes
Rule 1     classes -> defined_class
Rule 2     classes -> defined_class classes
Rule 3     classes -> primitive_class
Rule 4     classes -> primitive_class classes
Rule 5     primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
Rule 6     subclass_section -> SUBCLASSOF def_descriptions
Rule 7     subclass_section -> empty
Rule 8     disjoint_section -> DISJOINTCLASSES disjoint_classes_list
Rule 9     disjoint_section -> empty
Rule 10    disjoint_classes_list -> CLASS_IDENTIFIER
Rule 11    disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list
Rule 12    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
Rule 13    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
Rule 14    def_descriptions -> CLASS_IDENTIFIER
Rule 15    def_descriptions -> namespace_type
Rule 16    def_descriptions -> CLASS_IDENTIFIER AND def_descriptions
Rule 17    def_descriptions -> CLASS_IDENTIFIER OR def_descriptions
Rule 18    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
Rule 19    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type
Rule 20    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
Rule 21    def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
Rule 22    def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type
Rule 23    def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
Rule 24    def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type
Rule 25    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
Rule 26    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
Rule 27    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
Rule 28    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
Rule 29    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
Rule 30    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
Rule 31    def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 32    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
Rule 33    comparison -> EQUAL CARDINALITY
Rule 34    comparison -> GREATER_THAN CARDINALITY
Rule 35    comparison -> LESS_THAN CARDINALITY
Rule 36    comparison -> GREATER_THAN EQUAL CARDINALITY
Rule 37    comparison -> LESS_THAN EQUAL CARDINALITY
Rule 38    namespace_type -> NAMESPACE TYPE
Rule 39    individuals_section -> INDIVIDUALS individuals
Rule 40    individuals_section -> empty
Rule 41    individuals -> INDIVIDUAL_NAME
Rule 42    individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 43    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 21 22
AND                  : 12 13 16
CARDINALITY          : 25 26 27 28 29 30 33 34 35 36 37
CLASS                : 5 12 13
CLASS_IDENTIFIER     : 5 10 11 12 12 13 13 14 16 17 18 21 23 25 27 29 32
CLOSE_BRACKET        : 20
CLOSE_CURLY          : 
CLOSE_PAREN          : 31
COMMA                : 11 32 42
DISJOINTCLASSES      : 8
EQUAL                : 33 36 37
EQUIVALENTTO         : 12 13
EXACTLY              : 29 30
GREATER_THAN         : 34 36
INDIVIDUALS          : 39
INDIVIDUAL_NAME      : 41 42
LESS_THAN            : 35 37
MAX                  : 27 28
MIN                  : 25 26
NAMESPACE            : 38
NOT                  : 
OPEN_BRACKET         : 20
OPEN_CURLY           : 
OPEN_PAREN           : 31
OR                   : 17
PROPERTY_IDENTIFIER  : 18 19 20 21 22 23 24 25 26 27 28 29 30 32
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 18 19 20 32
SUBCLASSOF           : 6
THAT                 : 
TYPE                 : 38
VALUE                : 23 24
error                : 

Nonterminals, with rules where they appear

classes              : 2 4 0
comparison           : 20
def_descriptions     : 6 12 13 16 17 31 32
defined_class        : 1 2
disjoint_classes_list : 8 11
disjoint_section     : 5
empty                : 7 9 40
individuals          : 39 42
individuals_section  : 5 12
namespace_type       : 15 19 20 22 24 26 28 30
primitive_class      : 3 4
subclass_section     : 5

Parsing method: LALR

state 0

    (0) S' -> . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS           shift and go to state 4

    classes                        shift and go to state 1
    defined_class                  shift and go to state 2
    primitive_class                shift and go to state 3

state 1

    (0) S' -> classes .



state 2

    (1) classes -> defined_class .
    (2) classes -> defined_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 1 (classes -> defined_class .)
    CLASS           shift and go to state 4

    defined_class                  shift and go to state 2
    classes                        shift and go to state 5
    primitive_class                shift and go to state 3

state 3

    (3) classes -> primitive_class .
    (4) classes -> primitive_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 3 (classes -> primitive_class .)
    CLASS           shift and go to state 4

    primitive_class                shift and go to state 3
    classes                        shift and go to state 6
    defined_class                  shift and go to state 2

state 4

    (12) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> CLASS . CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS_IDENTIFIER shift and go to state 7


state 5

    (2) classes -> defined_class classes .

    $end            reduce using rule 2 (classes -> defined_class classes .)


state 6

    (4) classes -> primitive_class classes .

    $end            reduce using rule 4 (classes -> primitive_class classes .)


state 7

    (12) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> CLASS CLASS_IDENTIFIER . subclass_section disjoint_section individuals_section
    (6) subclass_section -> . SUBCLASSOF def_descriptions
    (7) subclass_section -> . empty
    (43) empty -> .

    EQUIVALENTTO    shift and go to state 8
    SUBCLASSOF      shift and go to state 10
    DISJOINTCLASSES reduce using rule 43 (empty -> .)
    INDIVIDUALS     reduce using rule 43 (empty -> .)
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    subclass_section               shift and go to state 9
    empty                          shift and go to state 11

state 8

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions

    CLASS_IDENTIFIER shift and go to state 12


state 9

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section . disjoint_section individuals_section
    (8) disjoint_section -> . DISJOINTCLASSES disjoint_classes_list
    (9) disjoint_section -> . empty
    (43) empty -> .

    DISJOINTCLASSES shift and go to state 14
    INDIVIDUALS     reduce using rule 43 (empty -> .)
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    disjoint_section               shift and go to state 13
    empty                          shift and go to state 15

state 10

    (6) subclass_section -> SUBCLASSOF . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 16
    namespace_type                 shift and go to state 18

state 11

    (7) subclass_section -> empty .

    DISJOINTCLASSES reduce using rule 7 (subclass_section -> empty .)
    INDIVIDUALS     reduce using rule 7 (subclass_section -> empty .)
    CLASS           reduce using rule 7 (subclass_section -> empty .)
    $end            reduce using rule 7 (subclass_section -> empty .)


state 12

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions

    AND             shift and go to state 22


state 13

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section . individuals_section
    (39) individuals_section -> . INDIVIDUALS individuals
    (40) individuals_section -> . empty
    (43) empty -> .

    INDIVIDUALS     shift and go to state 24
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    individuals_section            shift and go to state 23
    empty                          shift and go to state 25

state 14

    (8) disjoint_section -> DISJOINTCLASSES . disjoint_classes_list
    (10) disjoint_classes_list -> . CLASS_IDENTIFIER
    (11) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 27

    disjoint_classes_list          shift and go to state 26

state 15

    (9) disjoint_section -> empty .

    INDIVIDUALS     reduce using rule 9 (disjoint_section -> empty .)
    CLASS           reduce using rule 9 (disjoint_section -> empty .)
    $end            reduce using rule 9 (disjoint_section -> empty .)


state 16

    (6) subclass_section -> SUBCLASSOF def_descriptions .

    DISJOINTCLASSES reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    INDIVIDUALS     reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    CLASS           reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    $end            reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)


state 17

    (14) def_descriptions -> CLASS_IDENTIFIER .
    (16) def_descriptions -> CLASS_IDENTIFIER . AND def_descriptions
    (17) def_descriptions -> CLASS_IDENTIFIER . OR def_descriptions

    DISJOINTCLASSES reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    AND             shift and go to state 28
    OR              shift and go to state 29


state 18

    (15) def_descriptions -> namespace_type .

    DISJOINTCLASSES reduce using rule 15 (def_descriptions -> namespace_type .)
    INDIVIDUALS     reduce using rule 15 (def_descriptions -> namespace_type .)
    CLASS           reduce using rule 15 (def_descriptions -> namespace_type .)
    $end            reduce using rule 15 (def_descriptions -> namespace_type .)
    CLOSE_PAREN     reduce using rule 15 (def_descriptions -> namespace_type .)


state 19

    (18) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type
    (20) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> PROPERTY_IDENTIFIER . ALL CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER . ALL namespace_type
    (23) def_descriptions -> PROPERTY_IDENTIFIER . VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> PROPERTY_IDENTIFIER . VALUE namespace_type
    (25) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY namespace_type
    (27) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY namespace_type
    (29) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY namespace_type
    (32) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA def_descriptions

    SOME            shift and go to state 30
    ALL             shift and go to state 31
    VALUE           shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    EXACTLY         shift and go to state 35


state 20

    (31) def_descriptions -> OPEN_PAREN . def_descriptions CLOSE_PAREN
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 36
    namespace_type                 shift and go to state 18

state 21

    (38) namespace_type -> NAMESPACE . TYPE

    TYPE            shift and go to state 37


state 22

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 38
    namespace_type                 shift and go to state 18

state 23

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .

    CLASS           reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)
    $end            reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)


state 24

    (39) individuals_section -> INDIVIDUALS . individuals
    (41) individuals -> . INDIVIDUAL_NAME
    (42) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 40

    individuals                    shift and go to state 39

state 25

    (40) individuals_section -> empty .

    CLASS           reduce using rule 40 (individuals_section -> empty .)
    $end            reduce using rule 40 (individuals_section -> empty .)


state 26

    (8) disjoint_section -> DISJOINTCLASSES disjoint_classes_list .

    INDIVIDUALS     reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    CLASS           reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    $end            reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)


state 27

    (10) disjoint_classes_list -> CLASS_IDENTIFIER .
    (11) disjoint_classes_list -> CLASS_IDENTIFIER . COMMA disjoint_classes_list

    INDIVIDUALS     reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    $end            reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 41


state 28

    (16) def_descriptions -> CLASS_IDENTIFIER AND . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 42
    namespace_type                 shift and go to state 18

state 29

    (17) def_descriptions -> CLASS_IDENTIFIER OR . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 43
    namespace_type                 shift and go to state 18

state 30

    (18) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (32) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 44
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 45

state 31

    (21) def_descriptions -> PROPERTY_IDENTIFIER ALL . CLASS_IDENTIFIER
    (22) def_descriptions -> PROPERTY_IDENTIFIER ALL . namespace_type
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 46
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 47

state 32

    (23) def_descriptions -> PROPERTY_IDENTIFIER VALUE . CLASS_IDENTIFIER
    (24) def_descriptions -> PROPERTY_IDENTIFIER VALUE . namespace_type
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 48
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 49

state 33

    (25) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 50


state 34

    (27) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 51


state 35

    (29) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 52


state 36

    (31) def_descriptions -> OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 53


state 37

    (38) namespace_type -> NAMESPACE TYPE .

    DISJOINTCLASSES reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)
    INDIVIDUALS     reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)
    CLASS           reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)
    $end            reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)
    CLOSE_PAREN     reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)
    OPEN_BRACKET    reduce using rule 38 (namespace_type -> NAMESPACE TYPE .)


state 38

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions . individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .
    (39) individuals_section -> . INDIVIDUALS individuals
    (40) individuals_section -> . empty
    (43) empty -> .

  ! reduce/reduce conflict for CLASS resolved using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
  ! reduce/reduce conflict for $end resolved using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     shift and go to state 24

  ! CLASS           [ reduce using rule 43 (empty -> .) ]
  ! $end            [ reduce using rule 43 (empty -> .) ]

    individuals_section            shift and go to state 54
    empty                          shift and go to state 25

state 39

    (39) individuals_section -> INDIVIDUALS individuals .

    CLASS           reduce using rule 39 (individuals_section -> INDIVIDUALS individuals .)
    $end            reduce using rule 39 (individuals_section -> INDIVIDUALS individuals .)


state 40

    (41) individuals -> INDIVIDUAL_NAME .
    (42) individuals -> INDIVIDUAL_NAME . COMMA individuals

    CLASS           reduce using rule 41 (individuals -> INDIVIDUAL_NAME .)
    $end            reduce using rule 41 (individuals -> INDIVIDUAL_NAME .)
    COMMA           shift and go to state 55


state 41

    (11) disjoint_classes_list -> CLASS_IDENTIFIER COMMA . disjoint_classes_list
    (10) disjoint_classes_list -> . CLASS_IDENTIFIER
    (11) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 27

    disjoint_classes_list          shift and go to state 56

state 42

    (16) def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .

    DISJOINTCLASSES reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLOSE_PAREN     reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)


state 43

    (17) def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .

    DISJOINTCLASSES reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    INDIVIDUALS     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLASS           reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    $end            reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLOSE_PAREN     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)


state 44

    (18) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .
    (32) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA def_descriptions

    DISJOINTCLASSES reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLASS           reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    COMMA           shift and go to state 57


state 45

    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type . OPEN_BRACKET comparison CLOSE_BRACKET

    DISJOINTCLASSES reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    INDIVIDUALS     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLASS           reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    $end            reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLOSE_PAREN     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    OPEN_BRACKET    shift and go to state 58


state 46

    (21) def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLASS           reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    $end            reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)


state 47

    (22) def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .

    DISJOINTCLASSES reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    INDIVIDUALS     reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLASS           reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    $end            reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLOSE_PAREN     reduce using rule 22 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)


state 48

    (23) def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLASS           reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 23 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)


state 49

    (24) def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .

    DISJOINTCLASSES reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    INDIVIDUALS     reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLASS           reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    $end            reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLOSE_PAREN     reduce using rule 24 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)


state 50

    (25) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . CLASS_IDENTIFIER
    (26) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . namespace_type
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 59
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 60

state 51

    (27) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . CLASS_IDENTIFIER
    (28) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . namespace_type
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 61
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 62

state 52

    (29) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . CLASS_IDENTIFIER
    (30) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . namespace_type
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 63
    NAMESPACE       shift and go to state 21

    namespace_type                 shift and go to state 64

state 53

    (31) def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 31 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 31 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLASS           reduce using rule 31 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 31 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 31 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 54

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .

    CLASS           reduce using rule 12 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)
    $end            reduce using rule 12 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)


state 55

    (42) individuals -> INDIVIDUAL_NAME COMMA . individuals
    (41) individuals -> . INDIVIDUAL_NAME
    (42) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 40

    individuals                    shift and go to state 65

state 56

    (11) disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .

    INDIVIDUALS     reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    CLASS           reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    $end            reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)


state 57

    (32) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (22) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (23) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (24) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (25) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (26) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (27) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (28) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (29) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (30) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (31) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (32) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (38) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 19
    OPEN_PAREN      shift and go to state 20
    NAMESPACE       shift and go to state 21

    def_descriptions               shift and go to state 66
    namespace_type                 shift and go to state 18

state 58

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET . comparison CLOSE_BRACKET
    (33) comparison -> . EQUAL CARDINALITY
    (34) comparison -> . GREATER_THAN CARDINALITY
    (35) comparison -> . LESS_THAN CARDINALITY
    (36) comparison -> . GREATER_THAN EQUAL CARDINALITY
    (37) comparison -> . LESS_THAN EQUAL CARDINALITY

    EQUAL           shift and go to state 68
    GREATER_THAN    shift and go to state 69
    LESS_THAN       shift and go to state 70

    comparison                     shift and go to state 67

state 59

    (25) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 25 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)


state 60

    (26) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLASS           reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    $end            reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 26 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)


state 61

    (27) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 27 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)


state 62

    (28) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLASS           reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    $end            reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 28 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)


state 63

    (29) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .

    DISJOINTCLASSES reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 29 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)


state 64

    (30) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .

    DISJOINTCLASSES reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLASS           reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    $end            reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 30 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)


state 65

    (42) individuals -> INDIVIDUAL_NAME COMMA individuals .

    CLASS           reduce using rule 42 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    $end            reduce using rule 42 (individuals -> INDIVIDUAL_NAME COMMA individuals .)


state 66

    (32) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .

    DISJOINTCLASSES reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    INDIVIDUALS     reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLASS           reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    $end            reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLOSE_PAREN     reduce using rule 32 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)


state 67

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 71


state 68

    (33) comparison -> EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 72


state 69

    (34) comparison -> GREATER_THAN . CARDINALITY
    (36) comparison -> GREATER_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 73
    EQUAL           shift and go to state 74


state 70

    (35) comparison -> LESS_THAN . CARDINALITY
    (37) comparison -> LESS_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 75
    EQUAL           shift and go to state 76


state 71

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .

    DISJOINTCLASSES reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    INDIVIDUALS     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLASS           reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    $end            reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLOSE_PAREN     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)


state 72

    (33) comparison -> EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 33 (comparison -> EQUAL CARDINALITY .)


state 73

    (34) comparison -> GREATER_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 34 (comparison -> GREATER_THAN CARDINALITY .)


state 74

    (36) comparison -> GREATER_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 77


state 75

    (35) comparison -> LESS_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 35 (comparison -> LESS_THAN CARDINALITY .)


state 76

    (37) comparison -> LESS_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 78


state 77

    (36) comparison -> GREATER_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 36 (comparison -> GREATER_THAN EQUAL CARDINALITY .)


state 78

    (37) comparison -> LESS_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 37 (comparison -> LESS_THAN EQUAL CARDINALITY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 38 resolved using rule (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions)
WARNING: rejected rule (empty -> <empty>) in state 38
