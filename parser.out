Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DISJOINtWITH
    NOT
    PROPERTY_IDENTIFIER_SIMPLE

Grammar

Rule 0     S' -> classes
Rule 1     classes -> defined_class
Rule 2     classes -> defined_class classes
Rule 3     classes -> primitive_class
Rule 4     classes -> primitive_class classes
Rule 5     primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
Rule 6     subclass_section -> SUBCLASSOF enum_class
Rule 7     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class
Rule 8     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento
Rule 9     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
Rule 10    subclass_section -> SUBCLASSOF CLASS_IDENTIFIER
Rule 11    subclass_section -> SUBCLASSOF quantifier_aux_axioma
Rule 12    auxiliar_fechamento -> CLASS_IDENTIFIER
Rule 13    auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento
Rule 14    disjoint_section -> DISJOINTCLASSES quantifier_aux
Rule 15    disjoint_section -> empty
Rule 16    disjoint_classes_list -> CLASS_IDENTIFIER
Rule 17    disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list
Rule 18    defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
Rule 19    defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section
Rule 20    enum_class -> OPEN_CURLY individuals CLOSE_CURLY
Rule 21    covered_class -> CLASS_IDENTIFIER OR covered_class
Rule 22    covered_class -> CLASS_IDENTIFIER
Rule 23    equivalentto_section -> EQUIVALENTTO enum_class
Rule 24    equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class
Rule 25    equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined
Rule 26    equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada
Rule 27    def_descriptions -> quantifier_aux
Rule 28    def_descriptions_axioma -> quantifier_aux_axioma
Rule 29    aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
Rule 30    aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
Rule 31    only_defined -> comma_and quantifier_aux
Rule 32    quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada
Rule 33    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
Rule 34    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type
Rule 35    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
Rule 36    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
Rule 37    quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada
Rule 38    quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
Rule 39    quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada
Rule 40    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
Rule 41    quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
Rule 42    quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
Rule 43    quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada
Rule 44    quantifier_aux_aninhada -> CLASS_IDENTIFIER
Rule 45    quantifier_aux_aninhada -> PROPERTY_IDENTIFIER
Rule 46    quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra
Rule 47    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
Rule 48    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type
Rule 49    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
Rule 50    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
Rule 51    quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
Rule 52    quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
Rule 53    quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
Rule 54    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
Rule 55    quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
Rule 56    quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
Rule 57    quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER
Rule 58    quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER
Rule 59    quantifier_aux -> comma_and quantifier_aux
Rule 60    quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
Rule 61    quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
Rule 62    quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type
Rule 63    quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
Rule 64    quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
Rule 65    quantifier_aux -> quantifier_aux comma_and quantifier_aux
Rule 66    quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux
Rule 67    quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux
Rule 68    quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux
Rule 69    quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux
Rule 70    quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN
Rule 71    quantifier_aux -> CLASS_IDENTIFIER
Rule 72    quantifier_aux -> PROPERTY_IDENTIFIER
Rule 73    quantifier_aux_axioma -> comma_and quantifier_aux_axioma
Rule 74    quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
Rule 75    quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
Rule 76    quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
Rule 77    quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
Rule 78    quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type
Rule 79    quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma
Rule 80    quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
Rule 81    quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma
Rule 82    quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
Rule 83    quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma
Rule 84    quantifier_aux_axioma -> CLASS_IDENTIFIER
Rule 85    quantifier_aux_axioma -> PROPERTY_IDENTIFIER
Rule 86    quantifier -> SOME
Rule 87    quantifier -> ALL
Rule 88    quantifier -> VALUE
Rule 89    quantifier -> THAT
Rule 90    quantifier_number -> MAX
Rule 91    quantifier_number -> MIN
Rule 92    quantifier_number -> EXACTLY
Rule 93    quantifier_geral -> SOME
Rule 94    quantifier_geral -> ALL
Rule 95    quantifier_geral -> VALUE
Rule 96    quantifier_geral -> MAX
Rule 97    quantifier_geral -> MIN
Rule 98    quantifier_geral -> EXACTLY
Rule 99    quantifier_geral -> THAT
Rule 100   sizecheck -> EQUAL CARDINALITY
Rule 101   sizecheck -> GREATER_THAN CARDINALITY
Rule 102   sizecheck -> LESS_THAN CARDINALITY
Rule 103   sizecheck -> GREATER_THAN EQUAL CARDINALITY
Rule 104   sizecheck -> LESS_THAN EQUAL CARDINALITY
Rule 105   namespace_type -> NAMESPACE TYPE
Rule 106   namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
Rule 107   individuals_section -> INDIVIDUALS individuals
Rule 108   individuals_section -> empty
Rule 109   individuals -> INDIVIDUAL_NAME
Rule 110   individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 111   comma_and -> COMMA
Rule 112   comma_and -> AND
Rule 113   empty -> <empty>

Terminals, with rules where they appear

ALL                  : 87 94
AND                  : 112
CARDINALITY          : 35 36 49 50 63 64 75 76 100 101 102 103 104
CLASS                : 5 18 19
CLASS_IDENTIFIER     : 5 7 8 9 10 12 13 16 17 18 19 21 22 24 25 26 33 36 38 39 41 44 47 50 52 53 55 57 60 61 64 66 67 69 71 76 77 80 81 83 84
CLOSE_BRACKET        : 106
CLOSE_CURLY          : 20
CLOSE_PAREN          : 9 29 30 30 42 43 56 70 74
COMMA                : 17 110 111
DISJOINTCLASSES      : 14
DISJOINtWITH         : 
EQUAL                : 100 103 104
EQUIVALENTTO         : 23 24 25 26
EXACTLY              : 92 98
GREATER_THAN         : 101 103
INDIVIDUALS          : 107
INDIVIDUAL_NAME      : 109 110
LESS_THAN            : 102 104
MAX                  : 90 96
MIN                  : 91 97
NAMESPACE            : 105 106
NOT                  : 
ONLY                 : 8 9
OPEN_BRACKET         : 106
OPEN_CURLY           : 20
OPEN_PAREN           : 9 29 29 30 30 42 56 70 74
OR                   : 7 13 21 24 39 53 67 81
PROPERTY_IDENTIFIER  : 30 33 34 35 36 40 45 47 48 49 50 54 58 60 61 62 63 64 68 72 75 76 77 78 82 85
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 86 93
SUBCLASSOF           : 6 7 8 9 10 11
THAT                 : 89 99
TYPE                 : 105 106
VALUE                : 88 95
error                : 

Nonterminals, with rules where they appear

aninhada             : 26
auxiliar_fechamento  : 8 9 13
classes              : 2 4 0
comma_and            : 29 30 31 32 37 41 46 51 55 59 65 69 73 79 83
covered_class        : 7 21 24
def_descriptions     : 
def_descriptions_axioma : 8 9
defined_class        : 1 2
disjoint_classes_list : 17
disjoint_section     : 5
empty                : 15 108
enum_class           : 6 23
equivalentto_section : 18 19
individuals          : 20 107 110
individuals_section  : 5 18
namespace_type       : 34 35 48 49 62 63 75 78
only_defined         : 25
primitive_class      : 3 4
quantifier           : 30 33 34 38 40 47 48 52 54 60 61 62 66 68
quantifier_aux       : 14 27 31 59 61 65 65 66 67 68 69 70
quantifier_aux_aninhada : 29 32 33 37 37 38 39 40 41 42 43
quantifier_aux_aninhada_extra : 30 46 47 51 51 52 53 54 55 56
quantifier_aux_axioma : 11 28 73 74 79 79 80 81 82 83
quantifier_geral     : 77 78 80 82
quantifier_number    : 35 36 49 50 63 64 75 76
sizecheck            : 106
subclass_section     : 5 18

Parsing method: LALR

state 0

    (0) S' -> . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (18) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
    (19) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS           shift and go to state 4

    classes                        shift and go to state 1
    defined_class                  shift and go to state 2
    primitive_class                shift and go to state 3

state 1

    (0) S' -> classes .



state 2

    (1) classes -> defined_class .
    (2) classes -> defined_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (18) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
    (19) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 1 (classes -> defined_class .)
    CLASS           shift and go to state 4

    defined_class                  shift and go to state 2
    classes                        shift and go to state 5
    primitive_class                shift and go to state 3

state 3

    (3) classes -> primitive_class .
    (4) classes -> primitive_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (18) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
    (19) defined_class -> . CLASS CLASS_IDENTIFIER equivalentto_section
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 3 (classes -> primitive_class .)
    CLASS           shift and go to state 4

    primitive_class                shift and go to state 3
    classes                        shift and go to state 6
    defined_class                  shift and go to state 2

state 4

    (18) defined_class -> CLASS . CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
    (19) defined_class -> CLASS . CLASS_IDENTIFIER equivalentto_section
    (5) primitive_class -> CLASS . CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS_IDENTIFIER shift and go to state 7


state 5

    (2) classes -> defined_class classes .

    $end            reduce using rule 2 (classes -> defined_class classes .)


state 6

    (4) classes -> primitive_class classes .

    $end            reduce using rule 4 (classes -> primitive_class classes .)


state 7

    (18) defined_class -> CLASS CLASS_IDENTIFIER . equivalentto_section subclass_section individuals_section
    (19) defined_class -> CLASS CLASS_IDENTIFIER . equivalentto_section
    (5) primitive_class -> CLASS CLASS_IDENTIFIER . subclass_section disjoint_section individuals_section
    (23) equivalentto_section -> . EQUIVALENTTO enum_class
    (24) equivalentto_section -> . EQUIVALENTTO CLASS_IDENTIFIER OR covered_class
    (25) equivalentto_section -> . EQUIVALENTTO CLASS_IDENTIFIER only_defined
    (26) equivalentto_section -> . EQUIVALENTTO CLASS_IDENTIFIER aninhada
    (6) subclass_section -> . SUBCLASSOF enum_class
    (7) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER OR covered_class
    (8) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento
    (9) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
    (10) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER
    (11) subclass_section -> . SUBCLASSOF quantifier_aux_axioma

    EQUIVALENTTO    shift and go to state 10
    SUBCLASSOF      shift and go to state 11

    equivalentto_section           shift and go to state 8
    subclass_section               shift and go to state 9

state 8

    (18) defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section . subclass_section individuals_section
    (19) defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section .
    (6) subclass_section -> . SUBCLASSOF enum_class
    (7) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER OR covered_class
    (8) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento
    (9) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
    (10) subclass_section -> . SUBCLASSOF CLASS_IDENTIFIER
    (11) subclass_section -> . SUBCLASSOF quantifier_aux_axioma

    CLASS           reduce using rule 19 (defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section .)
    $end            reduce using rule 19 (defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section .)
    SUBCLASSOF      shift and go to state 11

    subclass_section               shift and go to state 12

state 9

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section . disjoint_section individuals_section
    (14) disjoint_section -> . DISJOINTCLASSES quantifier_aux
    (15) disjoint_section -> . empty
    (113) empty -> .

    DISJOINTCLASSES shift and go to state 14
    INDIVIDUALS     reduce using rule 113 (empty -> .)
    CLASS           reduce using rule 113 (empty -> .)
    $end            reduce using rule 113 (empty -> .)

    disjoint_section               shift and go to state 13
    empty                          shift and go to state 15

state 10

    (23) equivalentto_section -> EQUIVALENTTO . enum_class
    (24) equivalentto_section -> EQUIVALENTTO . CLASS_IDENTIFIER OR covered_class
    (25) equivalentto_section -> EQUIVALENTTO . CLASS_IDENTIFIER only_defined
    (26) equivalentto_section -> EQUIVALENTTO . CLASS_IDENTIFIER aninhada
    (20) enum_class -> . OPEN_CURLY individuals CLOSE_CURLY

    CLASS_IDENTIFIER shift and go to state 17
    OPEN_CURLY      shift and go to state 18

    enum_class                     shift and go to state 16

state 11

    (6) subclass_section -> SUBCLASSOF . enum_class
    (7) subclass_section -> SUBCLASSOF . CLASS_IDENTIFIER OR covered_class
    (8) subclass_section -> SUBCLASSOF . CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento
    (9) subclass_section -> SUBCLASSOF . CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
    (10) subclass_section -> SUBCLASSOF . CLASS_IDENTIFIER
    (11) subclass_section -> SUBCLASSOF . quantifier_aux_axioma
    (20) enum_class -> . OPEN_CURLY individuals CLOSE_CURLY
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 20
    OPEN_CURLY      shift and go to state 18
    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    enum_class                     shift and go to state 19
    quantifier_aux_axioma          shift and go to state 22
    comma_and                      shift and go to state 23

state 12

    (18) defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section . individuals_section
    (107) individuals_section -> . INDIVIDUALS individuals
    (108) individuals_section -> . empty
    (113) empty -> .

    INDIVIDUALS     shift and go to state 28
    CLASS           reduce using rule 113 (empty -> .)
    $end            reduce using rule 113 (empty -> .)

    individuals_section            shift and go to state 27
    empty                          shift and go to state 29

state 13

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section . individuals_section
    (107) individuals_section -> . INDIVIDUALS individuals
    (108) individuals_section -> . empty
    (113) empty -> .

    INDIVIDUALS     shift and go to state 28
    CLASS           reduce using rule 113 (empty -> .)
    $end            reduce using rule 113 (empty -> .)

    individuals_section            shift and go to state 30
    empty                          shift and go to state 29

state 14

    (14) disjoint_section -> DISJOINTCLASSES . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 31
    comma_and                      shift and go to state 32

state 15

    (15) disjoint_section -> empty .

    INDIVIDUALS     reduce using rule 15 (disjoint_section -> empty .)
    CLASS           reduce using rule 15 (disjoint_section -> empty .)
    $end            reduce using rule 15 (disjoint_section -> empty .)


state 16

    (23) equivalentto_section -> EQUIVALENTTO enum_class .

    SUBCLASSOF      reduce using rule 23 (equivalentto_section -> EQUIVALENTTO enum_class .)
    CLASS           reduce using rule 23 (equivalentto_section -> EQUIVALENTTO enum_class .)
    $end            reduce using rule 23 (equivalentto_section -> EQUIVALENTTO enum_class .)


state 17

    (24) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER . OR covered_class
    (25) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER . only_defined
    (26) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER . aninhada
    (31) only_defined -> . comma_and quantifier_aux
    (29) aninhada -> . comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (30) aninhada -> . comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OR              shift and go to state 36
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    only_defined                   shift and go to state 37
    aninhada                       shift and go to state 38
    comma_and                      shift and go to state 39

state 18

    (20) enum_class -> OPEN_CURLY . individuals CLOSE_CURLY
    (109) individuals -> . INDIVIDUAL_NAME
    (110) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 41

    individuals                    shift and go to state 40

state 19

    (6) subclass_section -> SUBCLASSOF enum_class .

    DISJOINTCLASSES reduce using rule 6 (subclass_section -> SUBCLASSOF enum_class .)
    INDIVIDUALS     reduce using rule 6 (subclass_section -> SUBCLASSOF enum_class .)
    CLASS           reduce using rule 6 (subclass_section -> SUBCLASSOF enum_class .)
    $end            reduce using rule 6 (subclass_section -> SUBCLASSOF enum_class .)


state 20

    (7) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER . OR covered_class
    (8) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER . def_descriptions_axioma ONLY auxiliar_fechamento
    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER . def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
    (10) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .
    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER . quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER . OR quantifier_aux_axioma
    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER . comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> CLASS_IDENTIFIER .
    (28) def_descriptions_axioma -> . quantifier_aux_axioma
    (93) quantifier_geral -> . SOME
    (94) quantifier_geral -> . ALL
    (95) quantifier_geral -> . VALUE
    (96) quantifier_geral -> . MAX
    (97) quantifier_geral -> . MIN
    (98) quantifier_geral -> . EXACTLY
    (99) quantifier_geral -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER

  ! reduce/reduce conflict for DISJOINTCLASSES resolved using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLASS resolved using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 43
    DISJOINTCLASSES reduce using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
    CLASS           reduce using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
    $end            reduce using rule 10 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER .)
    SOME            shift and go to state 48
    ALL             shift and go to state 49
    VALUE           shift and go to state 50
    MAX             shift and go to state 51
    MIN             shift and go to state 52
    EXACTLY         shift and go to state 53
    THAT            shift and go to state 54
    COMMA           shift and go to state 25
    AND             shift and go to state 26
    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42

  ! COMMA           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! DISJOINTCLASSES [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! INDIVIDUALS     [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! CLASS           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]

    def_descriptions_axioma        shift and go to state 44
    quantifier_geral               shift and go to state 45
    quantifier_aux_axioma          shift and go to state 46
    comma_and                      shift and go to state 47

state 21

    (74) quantifier_aux_axioma -> OPEN_PAREN . quantifier_aux_axioma CLOSE_PAREN
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_axioma          shift and go to state 55
    comma_and                      shift and go to state 23

state 22

    (11) subclass_section -> SUBCLASSOF quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    DISJOINTCLASSES reduce using rule 11 (subclass_section -> SUBCLASSOF quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 11 (subclass_section -> SUBCLASSOF quantifier_aux_axioma .)
    CLASS           reduce using rule 11 (subclass_section -> SUBCLASSOF quantifier_aux_axioma .)
    $end            reduce using rule 11 (subclass_section -> SUBCLASSOF quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 56

state 23

    (73) quantifier_aux_axioma -> comma_and . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 23
    quantifier_aux_axioma          shift and go to state 57

state 24

    (75) quantifier_aux_axioma -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> PROPERTY_IDENTIFIER . quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> PROPERTY_IDENTIFIER . quantifier_geral namespace_type
    (82) quantifier_aux_axioma -> PROPERTY_IDENTIFIER . quantifier_geral quantifier_aux_axioma
    (85) quantifier_aux_axioma -> PROPERTY_IDENTIFIER .
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY
    (93) quantifier_geral -> . SOME
    (94) quantifier_geral -> . ALL
    (95) quantifier_geral -> . VALUE
    (96) quantifier_geral -> . MAX
    (97) quantifier_geral -> . MIN
    (98) quantifier_geral -> . EXACTLY
    (99) quantifier_geral -> . THAT

    COMMA           reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    DISJOINTCLASSES reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    CLASS           reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    $end            reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    ONLY            reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 85 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER .)
    MAX             shift and go to state 60
    MIN             shift and go to state 61
    EXACTLY         shift and go to state 62
    SOME            shift and go to state 48
    ALL             shift and go to state 49
    VALUE           shift and go to state 50
    THAT            shift and go to state 54

    quantifier_number              shift and go to state 58
    quantifier_geral               shift and go to state 59

state 25

    (111) comma_and -> COMMA .

    OPEN_PAREN      reduce using rule 111 (comma_and -> COMMA .)
    PROPERTY_IDENTIFIER reduce using rule 111 (comma_and -> COMMA .)
    CLASS_IDENTIFIER reduce using rule 111 (comma_and -> COMMA .)
    COMMA           reduce using rule 111 (comma_and -> COMMA .)
    AND             reduce using rule 111 (comma_and -> COMMA .)
    CLOSE_PAREN     reduce using rule 111 (comma_and -> COMMA .)


state 26

    (112) comma_and -> AND .

    OPEN_PAREN      reduce using rule 112 (comma_and -> AND .)
    PROPERTY_IDENTIFIER reduce using rule 112 (comma_and -> AND .)
    CLASS_IDENTIFIER reduce using rule 112 (comma_and -> AND .)
    COMMA           reduce using rule 112 (comma_and -> AND .)
    AND             reduce using rule 112 (comma_and -> AND .)
    CLOSE_PAREN     reduce using rule 112 (comma_and -> AND .)


state 27

    (18) defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section .

    CLASS           reduce using rule 18 (defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section .)
    $end            reduce using rule 18 (defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section .)


state 28

    (107) individuals_section -> INDIVIDUALS . individuals
    (109) individuals -> . INDIVIDUAL_NAME
    (110) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 41

    individuals                    shift and go to state 63

state 29

    (108) individuals_section -> empty .

    CLASS           reduce using rule 108 (individuals_section -> empty .)
    $end            reduce using rule 108 (individuals_section -> empty .)


state 30

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .

    CLASS           reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)
    $end            reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)


state 31

    (14) disjoint_section -> DISJOINTCLASSES quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    INDIVIDUALS     reduce using rule 14 (disjoint_section -> DISJOINTCLASSES quantifier_aux .)
    CLASS           reduce using rule 14 (disjoint_section -> DISJOINTCLASSES quantifier_aux .)
    $end            reduce using rule 14 (disjoint_section -> DISJOINTCLASSES quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 64

state 32

    (59) quantifier_aux -> comma_and . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 65

state 33

    (60) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (63) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (68) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier quantifier_aux
    (72) quantifier_aux -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

    COMMA           reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    CLASS           reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    $end            reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    SUBCLASSOF      reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

    quantifier                     shift and go to state 66
    quantifier_number              shift and go to state 67

state 34

    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 76
    INDIVIDUALS     reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .)
    $end            reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .)
    SUBCLASSOF      reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 75
    comma_and                      shift and go to state 77

state 35

    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 78
    comma_and                      shift and go to state 32

state 36

    (24) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR . covered_class
    (21) covered_class -> . CLASS_IDENTIFIER OR covered_class
    (22) covered_class -> . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 79

    covered_class                  shift and go to state 80

state 37

    (25) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined .

    SUBCLASSOF      reduce using rule 25 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined .)
    CLASS           reduce using rule 25 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined .)
    $end            reduce using rule 25 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER only_defined .)


state 38

    (26) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada .

    SUBCLASSOF      reduce using rule 26 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada .)
    CLASS           reduce using rule 26 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada .)
    $end            reduce using rule 26 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER aninhada .)


state 39

    (31) only_defined -> comma_and . quantifier_aux
    (29) aninhada -> comma_and . OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (30) aninhada -> comma_and . OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 82
    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 81

state 40

    (20) enum_class -> OPEN_CURLY individuals . CLOSE_CURLY

    CLOSE_CURLY     shift and go to state 83


state 41

    (109) individuals -> INDIVIDUAL_NAME .
    (110) individuals -> INDIVIDUAL_NAME . COMMA individuals

    CLOSE_CURLY     reduce using rule 109 (individuals -> INDIVIDUAL_NAME .)
    CLASS           reduce using rule 109 (individuals -> INDIVIDUAL_NAME .)
    $end            reduce using rule 109 (individuals -> INDIVIDUAL_NAME .)
    COMMA           shift and go to state 84


state 42

    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER . quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER . OR quantifier_aux_axioma
    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER . comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> CLASS_IDENTIFIER .
    (93) quantifier_geral -> . SOME
    (94) quantifier_geral -> . ALL
    (95) quantifier_geral -> . VALUE
    (96) quantifier_geral -> . MAX
    (97) quantifier_geral -> . MIN
    (98) quantifier_geral -> . EXACTLY
    (99) quantifier_geral -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 85
    ONLY            reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    DISJOINTCLASSES reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    $end            reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 48
    ALL             shift and go to state 49
    VALUE           shift and go to state 50
    MAX             shift and go to state 51
    MIN             shift and go to state 52
    EXACTLY         shift and go to state 53
    THAT            shift and go to state 54
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]

    quantifier_geral               shift and go to state 45
    comma_and                      shift and go to state 86

state 43

    (7) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR . covered_class
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER OR . quantifier_aux_axioma
    (21) covered_class -> . CLASS_IDENTIFIER OR covered_class
    (22) covered_class -> . CLASS_IDENTIFIER
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 87
    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    covered_class                  shift and go to state 88
    quantifier_aux_axioma          shift and go to state 89
    comma_and                      shift and go to state 23

state 44

    (8) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma . ONLY auxiliar_fechamento
    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma . ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN

    ONLY            shift and go to state 90


state 45

    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_axioma          shift and go to state 91
    comma_and                      shift and go to state 23

state 46

    (28) def_descriptions_axioma -> quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    ONLY            reduce using rule 28 (def_descriptions_axioma -> quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 56

state 47

    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> comma_and . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 23
    quantifier_aux_axioma          shift and go to state 92

state 48

    (93) quantifier_geral -> SOME .

    OPEN_PAREN      reduce using rule 93 (quantifier_geral -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 93 (quantifier_geral -> SOME .)
    CLASS_IDENTIFIER reduce using rule 93 (quantifier_geral -> SOME .)
    COMMA           reduce using rule 93 (quantifier_geral -> SOME .)
    AND             reduce using rule 93 (quantifier_geral -> SOME .)
    NAMESPACE       reduce using rule 93 (quantifier_geral -> SOME .)


state 49

    (94) quantifier_geral -> ALL .

    OPEN_PAREN      reduce using rule 94 (quantifier_geral -> ALL .)
    PROPERTY_IDENTIFIER reduce using rule 94 (quantifier_geral -> ALL .)
    CLASS_IDENTIFIER reduce using rule 94 (quantifier_geral -> ALL .)
    COMMA           reduce using rule 94 (quantifier_geral -> ALL .)
    AND             reduce using rule 94 (quantifier_geral -> ALL .)
    NAMESPACE       reduce using rule 94 (quantifier_geral -> ALL .)


state 50

    (95) quantifier_geral -> VALUE .

    OPEN_PAREN      reduce using rule 95 (quantifier_geral -> VALUE .)
    PROPERTY_IDENTIFIER reduce using rule 95 (quantifier_geral -> VALUE .)
    CLASS_IDENTIFIER reduce using rule 95 (quantifier_geral -> VALUE .)
    COMMA           reduce using rule 95 (quantifier_geral -> VALUE .)
    AND             reduce using rule 95 (quantifier_geral -> VALUE .)
    NAMESPACE       reduce using rule 95 (quantifier_geral -> VALUE .)


state 51

    (96) quantifier_geral -> MAX .

    OPEN_PAREN      reduce using rule 96 (quantifier_geral -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 96 (quantifier_geral -> MAX .)
    CLASS_IDENTIFIER reduce using rule 96 (quantifier_geral -> MAX .)
    COMMA           reduce using rule 96 (quantifier_geral -> MAX .)
    AND             reduce using rule 96 (quantifier_geral -> MAX .)


state 52

    (97) quantifier_geral -> MIN .

    OPEN_PAREN      reduce using rule 97 (quantifier_geral -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 97 (quantifier_geral -> MIN .)
    CLASS_IDENTIFIER reduce using rule 97 (quantifier_geral -> MIN .)
    COMMA           reduce using rule 97 (quantifier_geral -> MIN .)
    AND             reduce using rule 97 (quantifier_geral -> MIN .)


state 53

    (98) quantifier_geral -> EXACTLY .

    OPEN_PAREN      reduce using rule 98 (quantifier_geral -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 98 (quantifier_geral -> EXACTLY .)
    CLASS_IDENTIFIER reduce using rule 98 (quantifier_geral -> EXACTLY .)
    COMMA           reduce using rule 98 (quantifier_geral -> EXACTLY .)
    AND             reduce using rule 98 (quantifier_geral -> EXACTLY .)


state 54

    (99) quantifier_geral -> THAT .

    OPEN_PAREN      reduce using rule 99 (quantifier_geral -> THAT .)
    PROPERTY_IDENTIFIER reduce using rule 99 (quantifier_geral -> THAT .)
    CLASS_IDENTIFIER reduce using rule 99 (quantifier_geral -> THAT .)
    COMMA           reduce using rule 99 (quantifier_geral -> THAT .)
    AND             reduce using rule 99 (quantifier_geral -> THAT .)
    NAMESPACE       reduce using rule 99 (quantifier_geral -> THAT .)


state 55

    (74) quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma . CLOSE_PAREN
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 93
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 56

state 56

    (79) quantifier_aux_axioma -> quantifier_aux_axioma comma_and . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_axioma          shift and go to state 94
    comma_and                      shift and go to state 23

state 57

    (73) quantifier_aux_axioma -> comma_and quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    CLASS           reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    $end            reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    ONLY            reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 58

    (75) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 95


state 59

    (77) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral . CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral . namespace_type
    (82) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral . quantifier_aux_axioma
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 96
    NAMESPACE       shift and go to state 99
    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    namespace_type                 shift and go to state 97
    quantifier_aux_axioma          shift and go to state 98
    comma_and                      shift and go to state 23

state 60

    (90) quantifier_number -> MAX .
    (96) quantifier_geral -> MAX .

    CARDINALITY     reduce using rule 90 (quantifier_number -> MAX .)
    CLASS_IDENTIFIER reduce using rule 96 (quantifier_geral -> MAX .)
    NAMESPACE       reduce using rule 96 (quantifier_geral -> MAX .)
    OPEN_PAREN      reduce using rule 96 (quantifier_geral -> MAX .)
    PROPERTY_IDENTIFIER reduce using rule 96 (quantifier_geral -> MAX .)
    COMMA           reduce using rule 96 (quantifier_geral -> MAX .)
    AND             reduce using rule 96 (quantifier_geral -> MAX .)


state 61

    (91) quantifier_number -> MIN .
    (97) quantifier_geral -> MIN .

    CARDINALITY     reduce using rule 91 (quantifier_number -> MIN .)
    CLASS_IDENTIFIER reduce using rule 97 (quantifier_geral -> MIN .)
    NAMESPACE       reduce using rule 97 (quantifier_geral -> MIN .)
    OPEN_PAREN      reduce using rule 97 (quantifier_geral -> MIN .)
    PROPERTY_IDENTIFIER reduce using rule 97 (quantifier_geral -> MIN .)
    COMMA           reduce using rule 97 (quantifier_geral -> MIN .)
    AND             reduce using rule 97 (quantifier_geral -> MIN .)


state 62

    (92) quantifier_number -> EXACTLY .
    (98) quantifier_geral -> EXACTLY .

    CARDINALITY     reduce using rule 92 (quantifier_number -> EXACTLY .)
    CLASS_IDENTIFIER reduce using rule 98 (quantifier_geral -> EXACTLY .)
    NAMESPACE       reduce using rule 98 (quantifier_geral -> EXACTLY .)
    OPEN_PAREN      reduce using rule 98 (quantifier_geral -> EXACTLY .)
    PROPERTY_IDENTIFIER reduce using rule 98 (quantifier_geral -> EXACTLY .)
    COMMA           reduce using rule 98 (quantifier_geral -> EXACTLY .)
    AND             reduce using rule 98 (quantifier_geral -> EXACTLY .)


state 63

    (107) individuals_section -> INDIVIDUALS individuals .

    CLASS           reduce using rule 107 (individuals_section -> INDIVIDUALS individuals .)
    $end            reduce using rule 107 (individuals_section -> INDIVIDUALS individuals .)


state 64

    (65) quantifier_aux -> quantifier_aux comma_and . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 100
    comma_and                      shift and go to state 32

state 65

    (59) quantifier_aux -> comma_and quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    CLASS           reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    $end            reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    CLOSE_PAREN     reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    SUBCLASSOF      reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .) ]
  ! AND             [ reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 66

    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (68) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . quantifier_aux
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 101
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 33
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 102
    namespace_type                 shift and go to state 103
    comma_and                      shift and go to state 32

state 67

    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 104


state 68

    (86) quantifier -> SOME .

    CLASS_IDENTIFIER reduce using rule 86 (quantifier -> SOME .)
    NAMESPACE       reduce using rule 86 (quantifier -> SOME .)
    PROPERTY_IDENTIFIER reduce using rule 86 (quantifier -> SOME .)
    OPEN_PAREN      reduce using rule 86 (quantifier -> SOME .)
    COMMA           reduce using rule 86 (quantifier -> SOME .)
    AND             reduce using rule 86 (quantifier -> SOME .)
    CLOSE_PAREN     reduce using rule 86 (quantifier -> SOME .)


state 69

    (87) quantifier -> ALL .

    CLASS_IDENTIFIER reduce using rule 87 (quantifier -> ALL .)
    NAMESPACE       reduce using rule 87 (quantifier -> ALL .)
    PROPERTY_IDENTIFIER reduce using rule 87 (quantifier -> ALL .)
    OPEN_PAREN      reduce using rule 87 (quantifier -> ALL .)
    COMMA           reduce using rule 87 (quantifier -> ALL .)
    AND             reduce using rule 87 (quantifier -> ALL .)
    CLOSE_PAREN     reduce using rule 87 (quantifier -> ALL .)


state 70

    (88) quantifier -> VALUE .

    CLASS_IDENTIFIER reduce using rule 88 (quantifier -> VALUE .)
    NAMESPACE       reduce using rule 88 (quantifier -> VALUE .)
    PROPERTY_IDENTIFIER reduce using rule 88 (quantifier -> VALUE .)
    OPEN_PAREN      reduce using rule 88 (quantifier -> VALUE .)
    COMMA           reduce using rule 88 (quantifier -> VALUE .)
    AND             reduce using rule 88 (quantifier -> VALUE .)
    CLOSE_PAREN     reduce using rule 88 (quantifier -> VALUE .)


state 71

    (89) quantifier -> THAT .

    CLASS_IDENTIFIER reduce using rule 89 (quantifier -> THAT .)
    NAMESPACE       reduce using rule 89 (quantifier -> THAT .)
    PROPERTY_IDENTIFIER reduce using rule 89 (quantifier -> THAT .)
    OPEN_PAREN      reduce using rule 89 (quantifier -> THAT .)
    COMMA           reduce using rule 89 (quantifier -> THAT .)
    AND             reduce using rule 89 (quantifier -> THAT .)
    CLOSE_PAREN     reduce using rule 89 (quantifier -> THAT .)


state 72

    (90) quantifier_number -> MAX .

    CARDINALITY     reduce using rule 90 (quantifier_number -> MAX .)


state 73

    (91) quantifier_number -> MIN .

    CARDINALITY     reduce using rule 91 (quantifier_number -> MIN .)


state 74

    (92) quantifier_number -> EXACTLY .

    CARDINALITY     reduce using rule 92 (quantifier_number -> EXACTLY .)


state 75

    (66) quantifier_aux -> CLASS_IDENTIFIER quantifier . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 105
    comma_and                      shift and go to state 32

state 76

    (67) quantifier_aux -> CLASS_IDENTIFIER OR . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux                 shift and go to state 106
    comma_and                      shift and go to state 32

state 77

    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 107

state 78

    (70) quantifier_aux -> OPEN_PAREN quantifier_aux . CLOSE_PAREN
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 108
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 64

state 79

    (21) covered_class -> CLASS_IDENTIFIER . OR covered_class
    (22) covered_class -> CLASS_IDENTIFIER .

    OR              shift and go to state 109
    SUBCLASSOF      reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    $end            reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)


state 80

    (24) equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class .

    SUBCLASSOF      reduce using rule 24 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class .)
    CLASS           reduce using rule 24 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class .)
    $end            reduce using rule 24 (equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class .)


state 81

    (31) only_defined -> comma_and quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    SUBCLASSOF      reduce using rule 31 (only_defined -> comma_and quantifier_aux .)
    CLASS           reduce using rule 31 (only_defined -> comma_and quantifier_aux .)
    $end            reduce using rule 31 (only_defined -> comma_and quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 64

state 82

    (29) aninhada -> comma_and OPEN_PAREN . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (30) aninhada -> comma_and OPEN_PAREN . PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 110
    PROPERTY_IDENTIFIER shift and go to state 111
    CLASS_IDENTIFIER shift and go to state 34
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 78

state 83

    (20) enum_class -> OPEN_CURLY individuals CLOSE_CURLY .

    SUBCLASSOF      reduce using rule 20 (enum_class -> OPEN_CURLY individuals CLOSE_CURLY .)
    CLASS           reduce using rule 20 (enum_class -> OPEN_CURLY individuals CLOSE_CURLY .)
    $end            reduce using rule 20 (enum_class -> OPEN_CURLY individuals CLOSE_CURLY .)
    DISJOINTCLASSES reduce using rule 20 (enum_class -> OPEN_CURLY individuals CLOSE_CURLY .)
    INDIVIDUALS     reduce using rule 20 (enum_class -> OPEN_CURLY individuals CLOSE_CURLY .)


state 84

    (110) individuals -> INDIVIDUAL_NAME COMMA . individuals
    (109) individuals -> . INDIVIDUAL_NAME
    (110) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 41

    individuals                    shift and go to state 112

state 85

    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER OR . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_axioma          shift and go to state 89
    comma_and                      shift and go to state 23

state 86

    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and . quantifier_aux_axioma
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    CLASS_IDENTIFIER shift and go to state 42
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 23
    quantifier_aux_axioma          shift and go to state 113

state 87

    (21) covered_class -> CLASS_IDENTIFIER . OR covered_class
    (22) covered_class -> CLASS_IDENTIFIER .
    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER . quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER . OR quantifier_aux_axioma
    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER . comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> CLASS_IDENTIFIER .
    (93) quantifier_geral -> . SOME
    (94) quantifier_geral -> . ALL
    (95) quantifier_geral -> . VALUE
    (96) quantifier_geral -> . MAX
    (97) quantifier_geral -> . MIN
    (98) quantifier_geral -> . EXACTLY
    (99) quantifier_geral -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for DISJOINTCLASSES resolved using rule 22 (covered_class -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 22 (covered_class -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLASS resolved using rule 22 (covered_class -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 22 (covered_class -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 114
    DISJOINTCLASSES reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    $end            reduce using rule 22 (covered_class -> CLASS_IDENTIFIER .)
    ONLY            reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 48
    ALL             shift and go to state 49
    VALUE           shift and go to state 50
    MAX             shift and go to state 51
    MIN             shift and go to state 52
    EXACTLY         shift and go to state 53
    THAT            shift and go to state 54
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! DISJOINTCLASSES [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! INDIVIDUALS     [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! CLASS           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]

    quantifier_geral               shift and go to state 45
    comma_and                      shift and go to state 86

state 88

    (7) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class .

    DISJOINTCLASSES reduce using rule 7 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class .)
    INDIVIDUALS     reduce using rule 7 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class .)
    CLASS           reduce using rule 7 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class .)
    $end            reduce using rule 7 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class .)


state 89

    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    CLASS           reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    $end            reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    ONLY            reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 81 (quantifier_aux_axioma -> CLASS_IDENTIFIER OR quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 90

    (8) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY . auxiliar_fechamento
    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY . OPEN_PAREN auxiliar_fechamento CLOSE_PAREN
    (12) auxiliar_fechamento -> . CLASS_IDENTIFIER
    (13) auxiliar_fechamento -> . CLASS_IDENTIFIER OR auxiliar_fechamento

    OPEN_PAREN      shift and go to state 117
    CLASS_IDENTIFIER shift and go to state 115

    auxiliar_fechamento            shift and go to state 116

state 91

    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    CLASS           reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    $end            reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    ONLY            reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 80 (quantifier_aux_axioma -> CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 92

    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .
    (73) quantifier_aux_axioma -> comma_and quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
  ! reduce/reduce conflict for AND resolved using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    CLASS           reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    $end            reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    ONLY            reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .) ]
  ! COMMA           [ reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 73 (quantifier_aux_axioma -> comma_and quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 93

    (74) quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .

    COMMA           reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    AND             reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    DISJOINTCLASSES reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    CLASS           reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    $end            reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    ONLY            reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 74 (quantifier_aux_axioma -> OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN .)


state 94

    (79) quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    CLASS           reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    $end            reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    ONLY            reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 79 (quantifier_aux_axioma -> quantifier_aux_axioma comma_and quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 95

    (75) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (76) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 119
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 118

state 96

    (77) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .
    (80) quantifier_aux_axioma -> CLASS_IDENTIFIER . quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER . OR quantifier_aux_axioma
    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER . comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> CLASS_IDENTIFIER .
    (93) quantifier_geral -> . SOME
    (94) quantifier_geral -> . ALL
    (95) quantifier_geral -> . VALUE
    (96) quantifier_geral -> . MAX
    (97) quantifier_geral -> . MIN
    (98) quantifier_geral -> . EXACTLY
    (99) quantifier_geral -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for DISJOINTCLASSES resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLASS resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for ONLY resolved using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    CLASS           reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    $end            reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    ONLY            reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .)
    OR              shift and go to state 85
    SOME            shift and go to state 48
    ALL             shift and go to state 49
    VALUE           shift and go to state 50
    MAX             shift and go to state 51
    MIN             shift and go to state 52
    EXACTLY         shift and go to state 53
    THAT            shift and go to state 54
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 77 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! DISJOINTCLASSES [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! INDIVIDUALS     [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! CLASS           [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]
  ! ONLY            [ reduce using rule 84 (quantifier_aux_axioma -> CLASS_IDENTIFIER .) ]

    quantifier_geral               shift and go to state 45
    comma_and                      shift and go to state 86

state 97

    (78) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .

    COMMA           reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    AND             reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    DISJOINTCLASSES reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    INDIVIDUALS     reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    CLASS           reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    $end            reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    ONLY            reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)
    CLOSE_PAREN     reduce using rule 78 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral namespace_type .)


state 98

    (82) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    DISJOINTCLASSES reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    CLASS           reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    $end            reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    ONLY            reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 82 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 99

    (105) namespace_type -> NAMESPACE . TYPE
    (106) namespace_type -> NAMESPACE . TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    TYPE            shift and go to state 120


state 100

    (65) quantifier_aux -> quantifier_aux comma_and quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .)
    CLASS           reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .)
    $end            reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .)
    CLOSE_PAREN     reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .)
    SUBCLASSOF      reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .) ]
  ! AND             [ reduce using rule 65 (quantifier_aux -> quantifier_aux comma_and quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 101

    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux
    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLASS resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for SUBCLASSOF resolved using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    CLASS           reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    $end            reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    SUBCLASSOF      reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    OR              shift and go to state 76
    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! INDIVIDUALS     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! CLASS           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! $end            [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! SUBCLASSOF      [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 75
    quantifier_aux                 shift and go to state 121
    comma_and                      shift and go to state 122

state 102

    (68) quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .)
    CLASS           reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .)
    $end            reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .)
    CLOSE_PAREN     reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .)
    SUBCLASSOF      reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .) ]
  ! AND             [ reduce using rule 68 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 103

    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .

    COMMA           reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    AND             reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    INDIVIDUALS     reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLASS           reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    $end            reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    SUBCLASSOF      reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)


state 104

    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 124
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 123

state 105

    (66) quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .)
    CLASS           reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .)
    $end            reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .)
    CLOSE_PAREN     reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .)
    SUBCLASSOF      reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .) ]
  ! AND             [ reduce using rule 66 (quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 106

    (67) quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .)
    CLASS           reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .)
    $end            reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .)
    CLOSE_PAREN     reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .)
    SUBCLASSOF      reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .) ]
  ! AND             [ reduce using rule 67 (quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 107

    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .)
    CLASS           reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .)
    $end            reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .)
    CLOSE_PAREN     reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .)
    SUBCLASSOF      reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! AND             [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 108

    (70) quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .

    COMMA           reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    AND             reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    CLASS           reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    $end            reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    SUBCLASSOF      reduce using rule 70 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)


state 109

    (21) covered_class -> CLASS_IDENTIFIER OR . covered_class
    (21) covered_class -> . CLASS_IDENTIFIER OR covered_class
    (22) covered_class -> . CLASS_IDENTIFIER

    CLASS_IDENTIFIER shift and go to state 79

    covered_class                  shift and go to state 125

state 110

    (29) aninhada -> comma_and OPEN_PAREN OPEN_PAREN . quantifier_aux_aninhada CLOSE_PAREN
    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 126
    quantifier_aux_aninhada        shift and go to state 128
    quantifier_aux                 shift and go to state 78

state 111

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER . quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (60) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (63) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (68) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier quantifier_aux
    (72) quantifier_aux -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

    CLOSE_PAREN     reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    COMMA           reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

    quantifier                     shift and go to state 132
    quantifier_number              shift and go to state 67

state 112

    (110) individuals -> INDIVIDUAL_NAME COMMA individuals .

    CLOSE_CURLY     reduce using rule 110 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    CLASS           reduce using rule 110 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    $end            reduce using rule 110 (individuals -> INDIVIDUAL_NAME COMMA individuals .)


state 113

    (83) quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .
    (79) quantifier_aux_axioma -> quantifier_aux_axioma . comma_and quantifier_aux_axioma
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    ONLY            reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    CLOSE_PAREN     reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    DISJOINTCLASSES reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    INDIVIDUALS     reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    CLASS           reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    $end            reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .) ]
  ! AND             [ reduce using rule 83 (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma .) ]

    comma_and                      shift and go to state 56

state 114

    (21) covered_class -> CLASS_IDENTIFIER OR . covered_class
    (81) quantifier_aux_axioma -> CLASS_IDENTIFIER OR . quantifier_aux_axioma
    (21) covered_class -> . CLASS_IDENTIFIER OR covered_class
    (22) covered_class -> . CLASS_IDENTIFIER
    (73) quantifier_aux_axioma -> . comma_and quantifier_aux_axioma
    (74) quantifier_aux_axioma -> . OPEN_PAREN quantifier_aux_axioma CLOSE_PAREN
    (75) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (76) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (77) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER
    (78) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral namespace_type
    (79) quantifier_aux_axioma -> . quantifier_aux_axioma comma_and quantifier_aux_axioma
    (80) quantifier_aux_axioma -> . CLASS_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (81) quantifier_aux_axioma -> . CLASS_IDENTIFIER OR quantifier_aux_axioma
    (82) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER quantifier_geral quantifier_aux_axioma
    (83) quantifier_aux_axioma -> . CLASS_IDENTIFIER comma_and quantifier_aux_axioma
    (84) quantifier_aux_axioma -> . CLASS_IDENTIFIER
    (85) quantifier_aux_axioma -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 87
    OPEN_PAREN      shift and go to state 21
    PROPERTY_IDENTIFIER shift and go to state 24
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    covered_class                  shift and go to state 125
    quantifier_aux_axioma          shift and go to state 89
    comma_and                      shift and go to state 23

state 115

    (12) auxiliar_fechamento -> CLASS_IDENTIFIER .
    (13) auxiliar_fechamento -> CLASS_IDENTIFIER . OR auxiliar_fechamento

    DISJOINTCLASSES reduce using rule 12 (auxiliar_fechamento -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 12 (auxiliar_fechamento -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 12 (auxiliar_fechamento -> CLASS_IDENTIFIER .)
    $end            reduce using rule 12 (auxiliar_fechamento -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 12 (auxiliar_fechamento -> CLASS_IDENTIFIER .)
    OR              shift and go to state 133


state 116

    (8) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento .

    DISJOINTCLASSES reduce using rule 8 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento .)
    INDIVIDUALS     reduce using rule 8 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento .)
    CLASS           reduce using rule 8 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento .)
    $end            reduce using rule 8 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY auxiliar_fechamento .)


state 117

    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN . auxiliar_fechamento CLOSE_PAREN
    (12) auxiliar_fechamento -> . CLASS_IDENTIFIER
    (13) auxiliar_fechamento -> . CLASS_IDENTIFIER OR auxiliar_fechamento

    CLASS_IDENTIFIER shift and go to state 115

    auxiliar_fechamento            shift and go to state 134

state 118

    (75) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

    COMMA           reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    DISJOINTCLASSES reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLASS           reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    $end            reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    ONLY            reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 75 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)


state 119

    (76) quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

    COMMA           reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    DISJOINTCLASSES reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    ONLY            reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 76 (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)


state 120

    (105) namespace_type -> NAMESPACE TYPE .
    (106) namespace_type -> NAMESPACE TYPE . OPEN_BRACKET sizecheck CLOSE_BRACKET

    COMMA           reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    AND             reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    DISJOINTCLASSES reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    INDIVIDUALS     reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    CLASS           reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    $end            reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    ONLY            reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    CLOSE_PAREN     reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    SUBCLASSOF      reduce using rule 105 (namespace_type -> NAMESPACE TYPE .)
    OPEN_BRACKET    shift and go to state 135


state 121

    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .)
    CLASS           reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .)
    $end            reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .)
    CLOSE_PAREN     reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .)
    SUBCLASSOF      reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .) ]
  ! AND             [ reduce using rule 61 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 122

    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (59) quantifier_aux -> comma_and . quantifier_aux
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 33
    CLASS_IDENTIFIER shift and go to state 34
    OPEN_PAREN      shift and go to state 35
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 136

state 123

    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

    COMMA           reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    INDIVIDUALS     reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLASS           reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    $end            reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    SUBCLASSOF      reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)


state 124

    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

    COMMA           reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    SUBCLASSOF      reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)


state 125

    (21) covered_class -> CLASS_IDENTIFIER OR covered_class .

    SUBCLASSOF      reduce using rule 21 (covered_class -> CLASS_IDENTIFIER OR covered_class .)
    CLASS           reduce using rule 21 (covered_class -> CLASS_IDENTIFIER OR covered_class .)
    $end            reduce using rule 21 (covered_class -> CLASS_IDENTIFIER OR covered_class .)
    DISJOINTCLASSES reduce using rule 21 (covered_class -> CLASS_IDENTIFIER OR covered_class .)
    INDIVIDUALS     reduce using rule 21 (covered_class -> CLASS_IDENTIFIER OR covered_class .)


state 126

    (32) quantifier_aux_aninhada -> comma_and . quantifier_aux_aninhada
    (59) quantifier_aux -> comma_and . quantifier_aux
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 126
    quantifier_aux_aninhada        shift and go to state 137
    quantifier_aux                 shift and go to state 65

state 127

    (42) quantifier_aux_aninhada -> OPEN_PAREN . quantifier_aux_aninhada CLOSE_PAREN
    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 138
    quantifier_aux                 shift and go to state 78
    comma_and                      shift and go to state 126

state 128

    (29) aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada . CLOSE_PAREN
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 140
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 139

state 129

    (43) quantifier_aux_aninhada -> CLOSE_PAREN . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 141
    comma_and                      shift and go to state 142

state 130

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (40) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier quantifier_aux_aninhada
    (45) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .
    (60) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (63) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (68) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier quantifier_aux
    (72) quantifier_aux -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    COMMA           reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

  ! CLOSE_PAREN     [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]
  ! AND             [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]

    quantifier                     shift and go to state 146
    quantifier_number              shift and go to state 147

state 131

    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> CLASS_IDENTIFIER .
    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 149
    CLOSE_PAREN     reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 148
    comma_and                      shift and go to state 150

state 132

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (68) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . quantifier_aux
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    OPEN_PAREN      shift and go to state 151
    CLASS_IDENTIFIER shift and go to state 101
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 33
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 32
    quantifier_aux                 shift and go to state 102
    namespace_type                 shift and go to state 103

state 133

    (13) auxiliar_fechamento -> CLASS_IDENTIFIER OR . auxiliar_fechamento
    (12) auxiliar_fechamento -> . CLASS_IDENTIFIER
    (13) auxiliar_fechamento -> . CLASS_IDENTIFIER OR auxiliar_fechamento

    CLASS_IDENTIFIER shift and go to state 115

    auxiliar_fechamento            shift and go to state 152

state 134

    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 153


state 135

    (106) namespace_type -> NAMESPACE TYPE OPEN_BRACKET . sizecheck CLOSE_BRACKET
    (100) sizecheck -> . EQUAL CARDINALITY
    (101) sizecheck -> . GREATER_THAN CARDINALITY
    (102) sizecheck -> . LESS_THAN CARDINALITY
    (103) sizecheck -> . GREATER_THAN EQUAL CARDINALITY
    (104) sizecheck -> . LESS_THAN EQUAL CARDINALITY

    EQUAL           shift and go to state 155
    GREATER_THAN    shift and go to state 156
    LESS_THAN       shift and go to state 157

    sizecheck                      shift and go to state 154

state 136

    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .
    (59) quantifier_aux -> comma_and quantifier_aux .
    (65) quantifier_aux -> quantifier_aux . comma_and quantifier_aux
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for AND resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for INDIVIDUALS resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for CLASS resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for $end resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! reduce/reduce conflict for SUBCLASSOF resolved using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    INDIVIDUALS     reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    CLASS           reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    $end            reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    CLOSE_PAREN     reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    SUBCLASSOF      reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! AND             [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! INDIVIDUALS     [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! CLASS           [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! $end            [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! CLOSE_PAREN     [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! SUBCLASSOF      [ reduce using rule 69 (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux .) ]
  ! COMMA           [ reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .) ]
  ! AND             [ reduce using rule 59 (quantifier_aux -> comma_and quantifier_aux .) ]

    comma_and                      shift and go to state 64

state 137

    (32) quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 138

    (42) quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada . CLOSE_PAREN
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 158
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 139

state 139

    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 159
    comma_and                      shift and go to state 142

state 140

    (29) aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .

    SUBCLASSOF      reduce using rule 29 (aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)
    CLASS           reduce using rule 29 (aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)
    $end            reduce using rule 29 (aninhada -> comma_and OPEN_PAREN OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)


state 141

    (43) quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 43 (quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 43 (quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 43 (quantifier_aux_aninhada -> CLOSE_PAREN quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 142

    (32) quantifier_aux_aninhada -> comma_and . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 142
    quantifier_aux_aninhada        shift and go to state 137

state 143

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (40) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER . quantifier quantifier_aux_aninhada
    (45) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

    COMMA           reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 45 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

    quantifier                     shift and go to state 160
    quantifier_number              shift and go to state 161

state 144

    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> CLASS_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 163
    CLOSE_PAREN     reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 162
    comma_and                      shift and go to state 164

state 145

    (42) quantifier_aux_aninhada -> OPEN_PAREN . quantifier_aux_aninhada CLOSE_PAREN
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 138
    comma_and                      shift and go to state 142

state 146

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (40) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . quantifier_aux_aninhada
    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (68) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . quantifier_aux
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 165
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 130
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 166
    namespace_type                 shift and go to state 167
    quantifier_aux                 shift and go to state 102
    comma_and                      shift and go to state 126

state 147

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 168


state 148

    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier . quantifier_aux_aninhada
    (66) quantifier_aux -> CLASS_IDENTIFIER quantifier . quantifier_aux
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 169
    quantifier_aux                 shift and go to state 105
    comma_and                      shift and go to state 126

state 149

    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER OR . quantifier_aux_aninhada
    (67) quantifier_aux -> CLASS_IDENTIFIER OR . quantifier_aux
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 170
    quantifier_aux                 shift and go to state 106
    comma_and                      shift and go to state 126

state 150

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada
    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 126
    quantifier_aux_aninhada        shift and go to state 171
    quantifier_aux                 shift and go to state 107

state 151

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN . quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN
    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 172
    quantifier_aux_aninhada_extra  shift and go to state 175
    quantifier_aux                 shift and go to state 78

state 152

    (13) auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .

    DISJOINTCLASSES reduce using rule 13 (auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .)
    INDIVIDUALS     reduce using rule 13 (auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .)
    CLASS           reduce using rule 13 (auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .)
    $end            reduce using rule 13 (auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .)
    CLOSE_PAREN     reduce using rule 13 (auxiliar_fechamento -> CLASS_IDENTIFIER OR auxiliar_fechamento .)


state 153

    (9) subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 9 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 9 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN .)
    CLASS           reduce using rule 9 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN .)
    $end            reduce using rule 9 (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions_axioma ONLY OPEN_PAREN auxiliar_fechamento CLOSE_PAREN .)


state 154

    (106) namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 177


state 155

    (100) sizecheck -> EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 178


state 156

    (101) sizecheck -> GREATER_THAN . CARDINALITY
    (103) sizecheck -> GREATER_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 179
    EQUAL           shift and go to state 180


state 157

    (102) sizecheck -> LESS_THAN . CARDINALITY
    (104) sizecheck -> LESS_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 181
    EQUAL           shift and go to state 182


state 158

    (42) quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .

    CLOSE_PAREN     reduce using rule 42 (quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)
    COMMA           reduce using rule 42 (quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)
    AND             reduce using rule 42 (quantifier_aux_aninhada -> OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN .)


state 159

    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 37 (quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 37 (quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 37 (quantifier_aux_aninhada -> quantifier_aux_aninhada comma_and quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 160

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (40) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier . quantifier_aux_aninhada
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 183
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 143
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 166
    namespace_type                 shift and go to state 184
    comma_and                      shift and go to state 142

state 161

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 185


state 162

    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 169
    comma_and                      shift and go to state 142

state 163

    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER OR . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada        shift and go to state 170
    comma_and                      shift and go to state 142

state 164

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 142
    quantifier_aux_aninhada        shift and go to state 171

state 165

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux_aninhada
    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux
    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> CLASS_IDENTIFIER .
    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for CLOSE_PAREN resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 149
    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! CLOSE_PAREN     [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 148
    quantifier_aux_aninhada        shift and go to state 186
    quantifier_aux                 shift and go to state 121
    comma_and                      shift and go to state 187

state 166

    (40) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 40 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 40 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 40 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 167

    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
  ! reduce/reduce conflict for COMMA resolved using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
  ! reduce/reduce conflict for AND resolved using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    COMMA           reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    AND             reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)

  ! CLOSE_PAREN     [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]
  ! COMMA           [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]
  ! AND             [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]


state 168

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 189
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 188

state 169

    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 38 (quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 38 (quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 38 (quantifier_aux_aninhada -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 170

    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 39 (quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 39 (quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 39 (quantifier_aux_aninhada -> CLASS_IDENTIFIER OR quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 171

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 172

    (46) quantifier_aux_aninhada_extra -> comma_and . quantifier_aux_aninhada_extra
    (59) quantifier_aux -> comma_and . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 172
    quantifier_aux_aninhada_extra  shift and go to state 190
    quantifier_aux                 shift and go to state 65

state 173

    (56) quantifier_aux_aninhada_extra -> OPEN_PAREN . quantifier_aux_aninhada_extra CLOSE_PAREN
    (70) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 191
    quantifier_aux                 shift and go to state 78
    comma_and                      shift and go to state 172

state 174

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (54) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (58) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .
    (60) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (63) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (68) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier quantifier_aux
    (72) quantifier_aux -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    COMMA           reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

  ! CLOSE_PAREN     [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]
  ! AND             [ reduce using rule 72 (quantifier_aux -> PROPERTY_IDENTIFIER .) ]

    quantifier                     shift and go to state 192
    quantifier_number              shift and go to state 193

state 175

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra . CLOSE_PAREN CLOSE_PAREN
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 195
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 194

state 176

    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada_extra
    (57) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .
    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 197
    CLOSE_PAREN     reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 196
    comma_and                      shift and go to state 198

state 177

    (106) namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .

    COMMA           reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    AND             reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    DISJOINTCLASSES reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    INDIVIDUALS     reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    CLASS           reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    $end            reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    ONLY            reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    CLOSE_PAREN     reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)
    SUBCLASSOF      reduce using rule 106 (namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET .)


state 178

    (100) sizecheck -> EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 100 (sizecheck -> EQUAL CARDINALITY .)


state 179

    (101) sizecheck -> GREATER_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 101 (sizecheck -> GREATER_THAN CARDINALITY .)


state 180

    (103) sizecheck -> GREATER_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 199


state 181

    (102) sizecheck -> LESS_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 102 (sizecheck -> LESS_THAN CARDINALITY .)


state 182

    (104) sizecheck -> LESS_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 200


state 183

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> CLASS_IDENTIFIER .
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for CLOSE_PAREN resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 163
    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 44 (quantifier_aux_aninhada -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 162
    quantifier_aux_aninhada        shift and go to state 186
    comma_and                      shift and go to state 201

state 184

    (34) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .

    COMMA           reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    AND             reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 34 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type .)


state 185

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 203
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 202

state 186

    (33) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 33 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 33 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 33 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 187

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada
    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (32) quantifier_aux_aninhada -> comma_and . quantifier_aux_aninhada
    (59) quantifier_aux -> comma_and . quantifier_aux
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 130
    CLASS_IDENTIFIER shift and go to state 131
    OPEN_PAREN      shift and go to state 127
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 126
    quantifier_aux_aninhada        shift and go to state 204
    quantifier_aux                 shift and go to state 136

state 188

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
  ! reduce/reduce conflict for COMMA resolved using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
  ! reduce/reduce conflict for AND resolved using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    COMMA           reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)

  ! CLOSE_PAREN     [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]
  ! COMMA           [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]
  ! AND             [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]


state 189

    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    COMMA           reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)

  ! CLOSE_PAREN     [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]


state 190

    (46) quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 191

    (56) quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra . CLOSE_PAREN
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLOSE_PAREN     shift and go to state 205
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 194

state 192

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (54) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . quantifier_aux_aninhada_extra
    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (68) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . quantifier_aux
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 206
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 174
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 207
    namespace_type                 shift and go to state 208
    quantifier_aux                 shift and go to state 102
    comma_and                      shift and go to state 172

state 193

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 209


state 194

    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 210
    comma_and                      shift and go to state 211

state 195

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 215


state 196

    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier . quantifier_aux_aninhada_extra
    (66) quantifier_aux -> CLASS_IDENTIFIER quantifier . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 216
    quantifier_aux                 shift and go to state 105
    comma_and                      shift and go to state 172

state 197

    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR . quantifier_aux_aninhada_extra
    (67) quantifier_aux -> CLASS_IDENTIFIER OR . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 217
    quantifier_aux                 shift and go to state 106
    comma_and                      shift and go to state 172

state 198

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada_extra
    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 172
    quantifier_aux_aninhada_extra  shift and go to state 218
    quantifier_aux                 shift and go to state 107

state 199

    (103) sizecheck -> GREATER_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 103 (sizecheck -> GREATER_THAN EQUAL CARDINALITY .)


state 200

    (104) sizecheck -> LESS_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 104 (sizecheck -> LESS_THAN EQUAL CARDINALITY .)


state 201

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> comma_and . quantifier_aux_aninhada
    (32) quantifier_aux_aninhada -> . comma_and quantifier_aux_aninhada
    (33) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada
    (34) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (35) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (36) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (37) quantifier_aux_aninhada -> . quantifier_aux_aninhada comma_and quantifier_aux_aninhada
    (38) quantifier_aux_aninhada -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada
    (39) quantifier_aux_aninhada -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada
    (40) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada
    (41) quantifier_aux_aninhada -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada
    (42) quantifier_aux_aninhada -> . OPEN_PAREN quantifier_aux_aninhada CLOSE_PAREN
    (43) quantifier_aux_aninhada -> . CLOSE_PAREN quantifier_aux_aninhada
    (44) quantifier_aux_aninhada -> . CLASS_IDENTIFIER
    (45) quantifier_aux_aninhada -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 143
    CLASS_IDENTIFIER shift and go to state 144
    OPEN_PAREN      shift and go to state 145
    CLOSE_PAREN     shift and go to state 129
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 142
    quantifier_aux_aninhada        shift and go to state 204

state 202

    (35) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

    COMMA           reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 35 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)


state 203

    (36) quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

    COMMA           reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 36 (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)


state 204

    (41) quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .
    (32) quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .
    (37) quantifier_aux_aninhada -> quantifier_aux_aninhada . comma_and quantifier_aux_aninhada
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .)
  ! reduce/reduce conflict for AND resolved using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .) ]
  ! CLOSE_PAREN     [ reduce using rule 41 (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada .) ]
  ! COMMA           [ reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .) ]
  ! AND             [ reduce using rule 32 (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada .) ]

    comma_and                      shift and go to state 139

state 205

    (56) quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN .

    CLOSE_PAREN     reduce using rule 56 (quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN .)
    COMMA           reduce using rule 56 (quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN .)
    AND             reduce using rule 56 (quantifier_aux_aninhada_extra -> OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN .)


state 206

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux_aninhada_extra
    (60) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .
    (61) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux
    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada_extra
    (57) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .
    (66) quantifier_aux -> CLASS_IDENTIFIER . quantifier quantifier_aux
    (67) quantifier_aux -> CLASS_IDENTIFIER . OR quantifier_aux
    (69) quantifier_aux -> CLASS_IDENTIFIER . comma_and quantifier_aux
    (71) quantifier_aux -> CLASS_IDENTIFIER .
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 197
    CLOSE_PAREN     reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! CLOSE_PAREN     [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 60 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]
  ! CLOSE_PAREN     [ reduce using rule 71 (quantifier_aux -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 196
    quantifier_aux_aninhada_extra  shift and go to state 219
    quantifier_aux                 shift and go to state 121
    comma_and                      shift and go to state 220

state 207

    (54) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 54 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 54 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 54 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 208

    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .
    (62) quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
  ! reduce/reduce conflict for COMMA resolved using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
  ! reduce/reduce conflict for AND resolved using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    COMMA           reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    AND             reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)

  ! CLOSE_PAREN     [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]
  ! COMMA           [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]
  ! AND             [ reduce using rule 62 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .) ]


state 209

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 222
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 221

state 210

    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 51 (quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 51 (quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 51 (quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 211

    (46) quantifier_aux_aninhada_extra -> comma_and . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 211
    quantifier_aux_aninhada_extra  shift and go to state 190

state 212

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier_number CARDINALITY CLASS_IDENTIFIER
    (54) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (58) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (90) quantifier_number -> . MAX
    (91) quantifier_number -> . MIN
    (92) quantifier_number -> . EXACTLY

    COMMA           reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    AND             reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 58 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    MAX             shift and go to state 72
    MIN             shift and go to state 73
    EXACTLY         shift and go to state 74

    quantifier                     shift and go to state 223
    quantifier_number              shift and go to state 224

state 213

    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada_extra
    (57) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 226
    CLOSE_PAREN     reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 225
    comma_and                      shift and go to state 227

state 214

    (56) quantifier_aux_aninhada_extra -> OPEN_PAREN . quantifier_aux_aninhada_extra CLOSE_PAREN
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 191
    comma_and                      shift and go to state 211

state 215

    (30) aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN .

    SUBCLASSOF      reduce using rule 30 (aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN .)
    CLASS           reduce using rule 30 (aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN .)
    $end            reduce using rule 30 (aninhada -> comma_and OPEN_PAREN PROPERTY_IDENTIFIER quantifier OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN CLOSE_PAREN .)


state 216

    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 52 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 52 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 52 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 217

    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 53 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 53 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 53 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 218

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 219

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 47 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 47 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 47 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 220

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada_extra
    (69) quantifier_aux -> CLASS_IDENTIFIER comma_and . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> comma_and . quantifier_aux_aninhada_extra
    (59) quantifier_aux -> comma_and . quantifier_aux
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (59) quantifier_aux -> . comma_and quantifier_aux
    (60) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (61) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux
    (62) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (63) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (64) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (65) quantifier_aux -> . quantifier_aux comma_and quantifier_aux
    (66) quantifier_aux -> . CLASS_IDENTIFIER quantifier quantifier_aux
    (67) quantifier_aux -> . CLASS_IDENTIFIER OR quantifier_aux
    (68) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier quantifier_aux
    (69) quantifier_aux -> . CLASS_IDENTIFIER comma_and quantifier_aux
    (70) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN
    (71) quantifier_aux -> . CLASS_IDENTIFIER
    (72) quantifier_aux -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 174
    CLASS_IDENTIFIER shift and go to state 176
    OPEN_PAREN      shift and go to state 173
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 172
    quantifier_aux_aninhada_extra  shift and go to state 228
    quantifier_aux                 shift and go to state 136

state 221

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .
    (63) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
  ! reduce/reduce conflict for AND resolved using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    COMMA           reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)

  ! CLOSE_PAREN     [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]
  ! COMMA           [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]
  ! AND             [ reduce using rule 63 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .) ]


state 222

    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .
    (64) quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
  ! reduce/reduce conflict for AND resolved using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    COMMA           reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)

  ! CLOSE_PAREN     [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 64 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .) ]


state 223

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (54) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier . quantifier_aux_aninhada_extra
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    CLASS_IDENTIFIER shift and go to state 229
    NAMESPACE       shift and go to state 99
    PROPERTY_IDENTIFIER shift and go to state 212
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 207
    namespace_type                 shift and go to state 230
    comma_and                      shift and go to state 211

state 224

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number . CARDINALITY CLASS_IDENTIFIER

    CARDINALITY     shift and go to state 231


state 225

    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER quantifier . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 216
    comma_and                      shift and go to state 211

state 226

    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER OR . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    quantifier_aux_aninhada_extra  shift and go to state 217
    comma_and                      shift and go to state 211

state 227

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 211
    quantifier_aux_aninhada_extra  shift and go to state 218

state 228

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .
    (46) quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .
    (51) quantifier_aux_aninhada_extra -> quantifier_aux_aninhada_extra . comma_and quantifier_aux_aninhada_extra
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! reduce/reduce conflict for COMMA resolved using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .)
  ! reduce/reduce conflict for AND resolved using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .)
  ! reduce/reduce conflict for CLOSE_PAREN resolved using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .)
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    CLOSE_PAREN     reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .)
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .) ]
  ! CLOSE_PAREN     [ reduce using rule 55 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra .) ]
  ! COMMA           [ reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .) ]
  ! AND             [ reduce using rule 46 (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra .) ]

    comma_and                      shift and go to state 194

state 229

    (47) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER . quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . OR quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER . comma_and quantifier_aux_aninhada_extra
    (57) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (86) quantifier -> . SOME
    (87) quantifier -> . ALL
    (88) quantifier -> . VALUE
    (89) quantifier -> . THAT
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    OR              shift and go to state 226
    CLOSE_PAREN     reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    SOME            shift and go to state 68
    ALL             shift and go to state 69
    VALUE           shift and go to state 70
    THAT            shift and go to state 71
    COMMA           shift and go to state 25
    AND             shift and go to state 26

  ! COMMA           [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]
  ! AND             [ reduce using rule 57 (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER .) ]

    quantifier                     shift and go to state 225
    quantifier_aux_aninhada_extra  shift and go to state 219
    comma_and                      shift and go to state 232

state 230

    (48) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .

    COMMA           reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    AND             reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 48 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type .)


state 231

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . namespace_type
    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY . CLASS_IDENTIFIER
    (105) namespace_type -> . NAMESPACE TYPE
    (106) namespace_type -> . NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET

    CLASS_IDENTIFIER shift and go to state 234
    NAMESPACE       shift and go to state 99

    namespace_type                 shift and go to state 233

state 232

    (55) quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> comma_and . quantifier_aux_aninhada_extra
    (46) quantifier_aux_aninhada_extra -> . comma_and quantifier_aux_aninhada_extra
    (47) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER quantifier_aux_aninhada_extra
    (48) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (49) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type
    (50) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER
    (51) quantifier_aux_aninhada_extra -> . quantifier_aux_aninhada_extra comma_and quantifier_aux_aninhada_extra
    (52) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (53) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER OR quantifier_aux_aninhada_extra
    (54) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER quantifier quantifier_aux_aninhada_extra
    (55) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra
    (56) quantifier_aux_aninhada_extra -> . OPEN_PAREN quantifier_aux_aninhada_extra CLOSE_PAREN
    (57) quantifier_aux_aninhada_extra -> . CLASS_IDENTIFIER
    (58) quantifier_aux_aninhada_extra -> . PROPERTY_IDENTIFIER
    (111) comma_and -> . COMMA
    (112) comma_and -> . AND

    PROPERTY_IDENTIFIER shift and go to state 212
    CLASS_IDENTIFIER shift and go to state 213
    OPEN_PAREN      shift and go to state 214
    COMMA           shift and go to state 25
    AND             shift and go to state 26

    comma_and                      shift and go to state 211
    quantifier_aux_aninhada_extra  shift and go to state 228

state 233

    (49) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .

    COMMA           reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    AND             reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 49 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type .)


state 234

    (50) quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .

    COMMA           reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    AND             reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 50 (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 20 resolved as shift
WARNING: shift/reduce conflict for AND in state 20 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 34 resolved as shift
WARNING: shift/reduce conflict for AND in state 34 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 87 resolved as shift
WARNING: shift/reduce conflict for AND in state 87 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 94 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 96 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 102 resolved as shift
WARNING: shift/reduce conflict for AND in state 102 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 106 resolved as shift
WARNING: shift/reduce conflict for AND in state 106 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 159 resolved as shift
WARNING: shift/reduce conflict for AND in state 159 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PAREN in state 165 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 165 resolved as shift
WARNING: shift/reduce conflict for AND in state 165 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 166 resolved as shift
WARNING: shift/reduce conflict for AND in state 166 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 169 resolved as shift
WARNING: shift/reduce conflict for AND in state 169 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 170 resolved as shift
WARNING: shift/reduce conflict for AND in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 171 resolved as shift
WARNING: shift/reduce conflict for AND in state 171 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 176 resolved as shift
WARNING: shift/reduce conflict for AND in state 176 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PAREN in state 183 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 183 resolved as shift
WARNING: shift/reduce conflict for AND in state 183 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 186 resolved as shift
WARNING: shift/reduce conflict for AND in state 186 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 190 resolved as shift
WARNING: shift/reduce conflict for AND in state 190 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 204 resolved as shift
WARNING: shift/reduce conflict for AND in state 204 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 206 resolved as shift
WARNING: shift/reduce conflict for AND in state 206 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 207 resolved as shift
WARNING: shift/reduce conflict for AND in state 207 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 210 resolved as shift
WARNING: shift/reduce conflict for AND in state 210 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for AND in state 216 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 217 resolved as shift
WARNING: shift/reduce conflict for AND in state 217 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 218 resolved as shift
WARNING: shift/reduce conflict for AND in state 218 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 219 resolved as shift
WARNING: shift/reduce conflict for AND in state 219 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 228 resolved as shift
WARNING: shift/reduce conflict for AND in state 228 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 229 resolved as shift
WARNING: shift/reduce conflict for AND in state 229 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (subclass_section -> SUBCLASSOF CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux_axioma -> CLASS_IDENTIFIER) in state 20
WARNING: reduce/reduce conflict in state 87 resolved using rule (covered_class -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux_axioma -> CLASS_IDENTIFIER) in state 87
WARNING: reduce/reduce conflict in state 92 resolved using rule (quantifier_aux_axioma -> comma_and quantifier_aux_axioma)
WARNING: rejected rule (quantifier_aux_axioma -> CLASS_IDENTIFIER comma_and quantifier_aux_axioma) in state 92
WARNING: reduce/reduce conflict in state 96 resolved using rule (quantifier_aux_axioma -> PROPERTY_IDENTIFIER quantifier_geral CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux_axioma -> CLASS_IDENTIFIER) in state 96
WARNING: reduce/reduce conflict in state 101 resolved using rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER) in state 101
WARNING: reduce/reduce conflict in state 130 resolved using rule (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER) in state 130
WARNING: reduce/reduce conflict in state 131 resolved using rule (quantifier_aux_aninhada -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER) in state 131
WARNING: reduce/reduce conflict in state 136 resolved using rule (quantifier_aux -> comma_and quantifier_aux)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux) in state 136
WARNING: reduce/reduce conflict in state 165 resolved using rule (quantifier_aux_aninhada -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (quantifier_aux_aninhada -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER) in state 165
WARNING: reduce/reduce conflict in state 167 resolved using rule (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier namespace_type)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type) in state 167
WARNING: reduce/reduce conflict in state 174 resolved using rule (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER) in state 174
WARNING: reduce/reduce conflict in state 176 resolved using rule (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER) in state 176
WARNING: reduce/reduce conflict in state 188 resolved using rule (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type) in state 188
WARNING: reduce/reduce conflict in state 189 resolved using rule (quantifier_aux_aninhada -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER) in state 189
WARNING: reduce/reduce conflict in state 204 resolved using rule (quantifier_aux_aninhada -> comma_and quantifier_aux_aninhada)
WARNING: rejected rule (quantifier_aux_aninhada -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada) in state 204
WARNING: reduce/reduce conflict in state 206 resolved using rule (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> CLASS_IDENTIFIER) in state 206
WARNING: reduce/reduce conflict in state 208 resolved using rule (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier namespace_type)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type) in state 208
WARNING: reduce/reduce conflict in state 221 resolved using rule (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY namespace_type) in state 221
WARNING: reduce/reduce conflict in state 222 resolved using rule (quantifier_aux_aninhada_extra -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER)
WARNING: rejected rule (quantifier_aux -> PROPERTY_IDENTIFIER quantifier_number CARDINALITY CLASS_IDENTIFIER) in state 222
WARNING: reduce/reduce conflict in state 228 resolved using rule (quantifier_aux_aninhada_extra -> comma_and quantifier_aux_aninhada_extra)
WARNING: rejected rule (quantifier_aux_aninhada_extra -> CLASS_IDENTIFIER comma_and quantifier_aux_aninhada_extra) in state 228
