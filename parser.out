Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_CURLY
    DISJOINTCLASSES
    NOT
    OPEN_CURLY
    PROPERTY_IDENTIFIER_SIMPLE
    SUBCLASSOF
    THAT

Grammar

Rule 0     S' -> classes
Rule 1     classes -> classe_definida
Rule 2     classes -> classe_definida classes
Rule 3     classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
Rule 4     classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
Rule 5     def_descriptions -> CLASS_IDENTIFIER
Rule 6     def_descriptions -> namespace_type
Rule 7     def_descriptions -> CLASS_IDENTIFIER AND def_descriptions
Rule 8     def_descriptions -> CLASS_IDENTIFIER OR def_descriptions
Rule 9     def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
Rule 10    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type
Rule 11    def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
Rule 12    def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
Rule 13    def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type
Rule 14    def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
Rule 15    def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type
Rule 16    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
Rule 17    def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
Rule 18    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
Rule 19    def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
Rule 20    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
Rule 21    def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
Rule 22    def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 23    comparison -> EQUAL CARDINALITY
Rule 24    comparison -> GREATER_THAN CARDINALITY
Rule 25    comparison -> LESS_THAN CARDINALITY
Rule 26    comparison -> GREATER_THAN EQUAL CARDINALITY
Rule 27    comparison -> LESS_THAN EQUAL CARDINALITY
Rule 28    namespace_type -> NAMESPACE TYPE
Rule 29    individuals_section -> INDIVIDUALS individuals
Rule 30    individuals_section -> empty
Rule 31    individuals -> INDIVIDUAL_NAME
Rule 32    individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 33    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 12 13
AND                  : 3 4 7
CARDINALITY          : 16 17 18 19 20 21 23 24 25 26 27
CLASS                : 3 4
CLASS_IDENTIFIER     : 3 3 4 4 5 7 8 9 12 14 16 18 20
CLOSE_BRACKET        : 11
CLOSE_CURLY          : 
CLOSE_PAREN          : 22
COMMA                : 32
DISJOINTCLASSES      : 
EQUAL                : 23 26 27
EQUIVALENTTO         : 3 4
EXACTLY              : 20 21
GREATER_THAN         : 24 26
INDIVIDUALS          : 29
INDIVIDUAL_NAME      : 31 32
LESS_THAN            : 25 27
MAX                  : 18 19
MIN                  : 16 17
NAMESPACE            : 28
NOT                  : 
OPEN_BRACKET         : 11
OPEN_CURLY           : 
OPEN_PAREN           : 22
OR                   : 8
PROPERTY_IDENTIFIER  : 9 10 11 12 13 14 15 16 17 18 19 20 21
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 9 10 11
SUBCLASSOF           : 
THAT                 : 
TYPE                 : 28
VALUE                : 14 15
error                : 

Nonterminals, with rules where they appear

classe_definida      : 1 2
classes              : 2 0
comparison           : 11
def_descriptions     : 3 4 7 8 22
empty                : 30
individuals          : 29 32
individuals_section  : 3
namespace_type       : 6 10 11 13 15 17 19 21

Parsing method: LALR

state 0

    (0) S' -> . classes
    (1) classes -> . classe_definida
    (2) classes -> . classe_definida classes
    (3) classe_definida -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (4) classe_definida -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions

    CLASS           shift and go to state 3

    classes                        shift and go to state 1
    classe_definida                shift and go to state 2

state 1

    (0) S' -> classes .



state 2

    (1) classes -> classe_definida .
    (2) classes -> classe_definida . classes
    (1) classes -> . classe_definida
    (2) classes -> . classe_definida classes
    (3) classe_definida -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (4) classe_definida -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions

    $end            reduce using rule 1 (classes -> classe_definida .)
    CLASS           shift and go to state 3

    classe_definida                shift and go to state 2
    classes                        shift and go to state 4

state 3

    (3) classe_definida -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (4) classe_definida -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions

    CLASS_IDENTIFIER shift and go to state 5


state 4

    (2) classes -> classe_definida classes .

    $end            reduce using rule 2 (classes -> classe_definida classes .)


state 5

    (3) classe_definida -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (4) classe_definida -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions

    EQUIVALENTTO    shift and go to state 6


state 6

    (3) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions individuals_section
    (4) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions

    CLASS_IDENTIFIER shift and go to state 7


state 7

    (3) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions individuals_section
    (4) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions

    AND             shift and go to state 8


state 8

    (3) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions individuals_section
    (4) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions
    (5) def_descriptions -> . CLASS_IDENTIFIER
    (6) def_descriptions -> . namespace_type
    (7) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (8) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (9) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (10) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (11) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (12) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (13) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (14) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (15) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (16) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (18) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (22) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 9
    PROPERTY_IDENTIFIER shift and go to state 12
    OPEN_PAREN      shift and go to state 13
    NAMESPACE       shift and go to state 14

    def_descriptions               shift and go to state 10
    namespace_type                 shift and go to state 11

state 9

    (5) def_descriptions -> CLASS_IDENTIFIER .
    (7) def_descriptions -> CLASS_IDENTIFIER . AND def_descriptions
    (8) def_descriptions -> CLASS_IDENTIFIER . OR def_descriptions

    INDIVIDUALS     reduce using rule 5 (def_descriptions -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 5 (def_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 5 (def_descriptions -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 5 (def_descriptions -> CLASS_IDENTIFIER .)
    AND             shift and go to state 15
    OR              shift and go to state 16


state 10

    (3) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions . individuals_section
    (4) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .
    (29) individuals_section -> . INDIVIDUALS individuals
    (30) individuals_section -> . empty
    (33) empty -> .

  ! reduce/reduce conflict for CLASS resolved using rule 4 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
  ! reduce/reduce conflict for $end resolved using rule 4 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 4 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 4 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     shift and go to state 18

  ! CLASS           [ reduce using rule 33 (empty -> .) ]
  ! $end            [ reduce using rule 33 (empty -> .) ]

    individuals_section            shift and go to state 17
    empty                          shift and go to state 19

state 11

    (6) def_descriptions -> namespace_type .

    INDIVIDUALS     reduce using rule 6 (def_descriptions -> namespace_type .)
    CLASS           reduce using rule 6 (def_descriptions -> namespace_type .)
    $end            reduce using rule 6 (def_descriptions -> namespace_type .)
    CLOSE_PAREN     reduce using rule 6 (def_descriptions -> namespace_type .)


state 12

    (9) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (10) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type
    (11) def_descriptions -> PROPERTY_IDENTIFIER . SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (12) def_descriptions -> PROPERTY_IDENTIFIER . ALL CLASS_IDENTIFIER
    (13) def_descriptions -> PROPERTY_IDENTIFIER . ALL namespace_type
    (14) def_descriptions -> PROPERTY_IDENTIFIER . VALUE CLASS_IDENTIFIER
    (15) def_descriptions -> PROPERTY_IDENTIFIER . VALUE namespace_type
    (16) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> PROPERTY_IDENTIFIER . MIN CARDINALITY namespace_type
    (18) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER . MAX CARDINALITY namespace_type
    (20) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER . EXACTLY CARDINALITY namespace_type

    SOME            shift and go to state 20
    ALL             shift and go to state 21
    VALUE           shift and go to state 22
    MIN             shift and go to state 23
    MAX             shift and go to state 24
    EXACTLY         shift and go to state 25


state 13

    (22) def_descriptions -> OPEN_PAREN . def_descriptions CLOSE_PAREN
    (5) def_descriptions -> . CLASS_IDENTIFIER
    (6) def_descriptions -> . namespace_type
    (7) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (8) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (9) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (10) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (11) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (12) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (13) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (14) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (15) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (16) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (18) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (22) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 9
    PROPERTY_IDENTIFIER shift and go to state 12
    OPEN_PAREN      shift and go to state 13
    NAMESPACE       shift and go to state 14

    def_descriptions               shift and go to state 26
    namespace_type                 shift and go to state 11

state 14

    (28) namespace_type -> NAMESPACE . TYPE

    TYPE            shift and go to state 27


state 15

    (7) def_descriptions -> CLASS_IDENTIFIER AND . def_descriptions
    (5) def_descriptions -> . CLASS_IDENTIFIER
    (6) def_descriptions -> . namespace_type
    (7) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (8) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (9) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (10) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (11) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (12) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (13) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (14) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (15) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (16) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (18) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (22) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 9
    PROPERTY_IDENTIFIER shift and go to state 12
    OPEN_PAREN      shift and go to state 13
    NAMESPACE       shift and go to state 14

    def_descriptions               shift and go to state 28
    namespace_type                 shift and go to state 11

state 16

    (8) def_descriptions -> CLASS_IDENTIFIER OR . def_descriptions
    (5) def_descriptions -> . CLASS_IDENTIFIER
    (6) def_descriptions -> . namespace_type
    (7) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (8) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (9) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (10) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type
    (11) def_descriptions -> . PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (12) def_descriptions -> . PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER
    (13) def_descriptions -> . PROPERTY_IDENTIFIER ALL namespace_type
    (14) def_descriptions -> . PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER
    (15) def_descriptions -> . PROPERTY_IDENTIFIER VALUE namespace_type
    (16) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> . PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type
    (18) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> . PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type
    (20) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type
    (22) def_descriptions -> . OPEN_PAREN def_descriptions CLOSE_PAREN
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 9
    PROPERTY_IDENTIFIER shift and go to state 12
    OPEN_PAREN      shift and go to state 13
    NAMESPACE       shift and go to state 14

    def_descriptions               shift and go to state 29
    namespace_type                 shift and go to state 11

state 17

    (3) classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .

    CLASS           reduce using rule 3 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)
    $end            reduce using rule 3 (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)


state 18

    (29) individuals_section -> INDIVIDUALS . individuals
    (31) individuals -> . INDIVIDUAL_NAME
    (32) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 31

    individuals                    shift and go to state 30

state 19

    (30) individuals_section -> empty .

    CLASS           reduce using rule 30 (individuals_section -> empty .)
    $end            reduce using rule 30 (individuals_section -> empty .)


state 20

    (9) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (10) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type
    (11) def_descriptions -> PROPERTY_IDENTIFIER SOME . namespace_type OPEN_BRACKET comparison CLOSE_BRACKET
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 32
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 33

state 21

    (12) def_descriptions -> PROPERTY_IDENTIFIER ALL . CLASS_IDENTIFIER
    (13) def_descriptions -> PROPERTY_IDENTIFIER ALL . namespace_type
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 34
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 35

state 22

    (14) def_descriptions -> PROPERTY_IDENTIFIER VALUE . CLASS_IDENTIFIER
    (15) def_descriptions -> PROPERTY_IDENTIFIER VALUE . namespace_type
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 36
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 37

state 23

    (16) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY CLASS_IDENTIFIER
    (17) def_descriptions -> PROPERTY_IDENTIFIER MIN . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 38


state 24

    (18) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER MAX . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 39


state 25

    (20) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY . CARDINALITY namespace_type

    CARDINALITY     shift and go to state 40


state 26

    (22) def_descriptions -> OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 41


state 27

    (28) namespace_type -> NAMESPACE TYPE .

    INDIVIDUALS     reduce using rule 28 (namespace_type -> NAMESPACE TYPE .)
    CLASS           reduce using rule 28 (namespace_type -> NAMESPACE TYPE .)
    $end            reduce using rule 28 (namespace_type -> NAMESPACE TYPE .)
    CLOSE_PAREN     reduce using rule 28 (namespace_type -> NAMESPACE TYPE .)
    OPEN_BRACKET    reduce using rule 28 (namespace_type -> NAMESPACE TYPE .)


state 28

    (7) def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .

    INDIVIDUALS     reduce using rule 7 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 7 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 7 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLOSE_PAREN     reduce using rule 7 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)


state 29

    (8) def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .

    INDIVIDUALS     reduce using rule 8 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLASS           reduce using rule 8 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    $end            reduce using rule 8 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLOSE_PAREN     reduce using rule 8 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)


state 30

    (29) individuals_section -> INDIVIDUALS individuals .

    CLASS           reduce using rule 29 (individuals_section -> INDIVIDUALS individuals .)
    $end            reduce using rule 29 (individuals_section -> INDIVIDUALS individuals .)


state 31

    (31) individuals -> INDIVIDUAL_NAME .
    (32) individuals -> INDIVIDUAL_NAME . COMMA individuals

    CLASS           reduce using rule 31 (individuals -> INDIVIDUAL_NAME .)
    $end            reduce using rule 31 (individuals -> INDIVIDUAL_NAME .)
    COMMA           shift and go to state 42


state 32

    (9) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 9 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLASS           reduce using rule 9 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 9 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 9 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)


state 33

    (10) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .
    (11) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type . OPEN_BRACKET comparison CLOSE_BRACKET

    INDIVIDUALS     reduce using rule 10 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLASS           reduce using rule 10 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    $end            reduce using rule 10 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    CLOSE_PAREN     reduce using rule 10 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type .)
    OPEN_BRACKET    shift and go to state 43


state 34

    (12) def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 12 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLASS           reduce using rule 12 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    $end            reduce using rule 12 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 12 (def_descriptions -> PROPERTY_IDENTIFIER ALL CLASS_IDENTIFIER .)


state 35

    (13) def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .

    INDIVIDUALS     reduce using rule 13 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLASS           reduce using rule 13 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    $end            reduce using rule 13 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)
    CLOSE_PAREN     reduce using rule 13 (def_descriptions -> PROPERTY_IDENTIFIER ALL namespace_type .)


state 36

    (14) def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 14 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLASS           reduce using rule 14 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    $end            reduce using rule 14 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 14 (def_descriptions -> PROPERTY_IDENTIFIER VALUE CLASS_IDENTIFIER .)


state 37

    (15) def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .

    INDIVIDUALS     reduce using rule 15 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLASS           reduce using rule 15 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    $end            reduce using rule 15 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)
    CLOSE_PAREN     reduce using rule 15 (def_descriptions -> PROPERTY_IDENTIFIER VALUE namespace_type .)


state 38

    (16) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . CLASS_IDENTIFIER
    (17) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY . namespace_type
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 44
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 45

state 39

    (18) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY . namespace_type
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 46
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 47

state 40

    (20) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY . namespace_type
    (28) namespace_type -> . NAMESPACE TYPE

    CLASS_IDENTIFIER shift and go to state 48
    NAMESPACE       shift and go to state 14

    namespace_type                 shift and go to state 49

state 41

    (22) def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .

    INDIVIDUALS     reduce using rule 22 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLASS           reduce using rule 22 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 22 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 22 (def_descriptions -> OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 42

    (32) individuals -> INDIVIDUAL_NAME COMMA . individuals
    (31) individuals -> . INDIVIDUAL_NAME
    (32) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 31

    individuals                    shift and go to state 50

state 43

    (11) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET . comparison CLOSE_BRACKET
    (23) comparison -> . EQUAL CARDINALITY
    (24) comparison -> . GREATER_THAN CARDINALITY
    (25) comparison -> . LESS_THAN CARDINALITY
    (26) comparison -> . GREATER_THAN EQUAL CARDINALITY
    (27) comparison -> . LESS_THAN EQUAL CARDINALITY

    EQUAL           shift and go to state 52
    GREATER_THAN    shift and go to state 53
    LESS_THAN       shift and go to state 54

    comparison                     shift and go to state 51

state 44

    (16) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 16 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 16 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 16 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 16 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY CLASS_IDENTIFIER .)


state 45

    (17) def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .

    INDIVIDUALS     reduce using rule 17 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLASS           reduce using rule 17 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    $end            reduce using rule 17 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 17 (def_descriptions -> PROPERTY_IDENTIFIER MIN CARDINALITY namespace_type .)


state 46

    (18) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 18 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY CLASS_IDENTIFIER .)


state 47

    (19) def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .

    INDIVIDUALS     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLASS           reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    $end            reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER MAX CARDINALITY namespace_type .)


state 48

    (20) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .

    INDIVIDUALS     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLASS           reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    $end            reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY CLASS_IDENTIFIER .)


state 49

    (21) def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .

    INDIVIDUALS     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLASS           reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    $end            reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)
    CLOSE_PAREN     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER EXACTLY CARDINALITY namespace_type .)


state 50

    (32) individuals -> INDIVIDUAL_NAME COMMA individuals .

    CLASS           reduce using rule 32 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    $end            reduce using rule 32 (individuals -> INDIVIDUAL_NAME COMMA individuals .)


state 51

    (11) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 55


state 52

    (23) comparison -> EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 56


state 53

    (24) comparison -> GREATER_THAN . CARDINALITY
    (26) comparison -> GREATER_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 57
    EQUAL           shift and go to state 58


state 54

    (25) comparison -> LESS_THAN . CARDINALITY
    (27) comparison -> LESS_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 59
    EQUAL           shift and go to state 60


state 55

    (11) def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .

    INDIVIDUALS     reduce using rule 11 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLASS           reduce using rule 11 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    $end            reduce using rule 11 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)
    CLOSE_PAREN     reduce using rule 11 (def_descriptions -> PROPERTY_IDENTIFIER SOME namespace_type OPEN_BRACKET comparison CLOSE_BRACKET .)


state 56

    (23) comparison -> EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 23 (comparison -> EQUAL CARDINALITY .)


state 57

    (24) comparison -> GREATER_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 24 (comparison -> GREATER_THAN CARDINALITY .)


state 58

    (26) comparison -> GREATER_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 61


state 59

    (25) comparison -> LESS_THAN CARDINALITY .

    CLOSE_BRACKET   reduce using rule 25 (comparison -> LESS_THAN CARDINALITY .)


state 60

    (27) comparison -> LESS_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 62


state 61

    (26) comparison -> GREATER_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 26 (comparison -> GREATER_THAN EQUAL CARDINALITY .)


state 62

    (27) comparison -> LESS_THAN EQUAL CARDINALITY .

    CLOSE_BRACKET   reduce using rule 27 (comparison -> LESS_THAN EQUAL CARDINALITY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 10 resolved using rule (classe_definida -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: Rule (empty -> <empty>) is never reduced
