Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DISJOINtWITH
    NOT
    ONLY
    PROPERTY_IDENTIFIER_SIMPLE

Grammar

Rule 0     S' -> classes
Rule 1     classes -> defined_class
Rule 2     classes -> defined_class classes
Rule 3     classes -> primitive_class
Rule 4     classes -> primitive_class classes
Rule 5     primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
Rule 6     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER def_descriptions
Rule 7     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER enum_class
Rule 8     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER OR covered_class
Rule 9     subclass_section -> SUBCLASSOF CLASS_IDENTIFIER
Rule 10    disjoint_section -> DISJOINTCLASSES disjoint_classes_list
Rule 11    disjoint_section -> empty
Rule 12    disjoint_classes_list -> CLASS_IDENTIFIER
Rule 13    disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list
Rule 14    defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section subclass_section individuals_section
Rule 15    defined_class -> CLASS CLASS_IDENTIFIER equivalentto_section
Rule 16    enum_class -> OPEN_CURLY individuals CLOSE_CURLY
Rule 17    covered_class -> CLASS_IDENTIFIER OR covered_class
Rule 18    covered_class -> CLASS_IDENTIFIER
Rule 19    aux_fechamento -> OPEN_PAREN PROPERTY_IDENTIFIER aux_fechamento
Rule 20    aux_fechamento -> OR PROPERTY_IDENTIFIER aux_fechamento
Rule 21    aux_fechamento -> PROPERTY_IDENTIFIER CLOSE_PAREN
Rule 22    equivalentto_section -> EQUIVALENTTO enum_class
Rule 23    equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER OR covered_class
Rule 24    equivalentto_section -> EQUIVALENTTO CLASS_IDENTIFIER comma_and def_descriptions
Rule 25    def_descriptions -> aninhada
Rule 26    def_descriptions -> aninhada def_descriptions
Rule 27    def_descriptions -> class_aux
Rule 28    def_descriptions -> class_aux def_descriptions
Rule 29    def_descriptions -> quantifier_aux
Rule 30    def_descriptions -> quantifier_aux def_descriptions
Rule 31    class_aux -> CLASS_IDENTIFIER
Rule 32    class_aux -> CLASS_IDENTIFIER OR class_aux
Rule 33    class_aux -> CLASS_IDENTIFIER comma_and class_aux
Rule 34    class_aux -> OPEN_PAREN class_aux CLOSE_PAREN
Rule 35    quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
Rule 36    quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type
Rule 37    quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN
Rule 38    quantifier_aux -> OPEN_PAREN aninhada CLOSE_PAREN
Rule 39    quantifier_aux -> quantifier_aux comma_and quantifier_aux
Rule 40    quantifier_aux -> PROPERTY_IDENTIFIER quantifier quantifier_aux
Rule 41    quantifier_aux -> CLASS_IDENTIFIER quantifier quantifier_aux
Rule 42    quantifier_aux -> CLASS_IDENTIFIER OR quantifier_aux
Rule 43    quantifier_aux -> CLASS_IDENTIFIER comma_and quantifier_aux
Rule 44    quantifier_aux -> CLASS_IDENTIFIER
Rule 45    quantifier -> SOME
Rule 46    quantifier -> ALL
Rule 47    quantifier -> VALUE
Rule 48    quantifier -> MAX
Rule 49    quantifier -> MIN
Rule 50    quantifier -> EXACTLY
Rule 51    quantifier -> THAT
Rule 52    sizecheck -> EQUAL CARDINALITY
Rule 53    sizecheck -> GREATER_THAN CARDINALITY
Rule 54    sizecheck -> LESS_THAN CARDINALITY
Rule 55    sizecheck -> GREATER_THAN EQUAL CARDINALITY
Rule 56    sizecheck -> LESS_THAN EQUAL CARDINALITY
Rule 57    namespace_type -> NAMESPACE TYPE
Rule 58    namespace_type -> NAMESPACE TYPE OPEN_BRACKET sizecheck CLOSE_BRACKET
Rule 59    individuals_section -> INDIVIDUALS individuals
Rule 60    individuals_section -> empty
Rule 61    individuals -> INDIVIDUAL_NAME
Rule 62    individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 63    comma_and -> COMMA
Rule 64    comma_and -> AND
Rule 65    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 46
AND                  : 64
CARDINALITY          : 52 53 54 55 56
CLASS                : 5 14 15
CLASS_IDENTIFIER     : 5 6 7 8 9 12 13 14 15 17 18 23 24 31 32 33 35 41 42 43 44
CLOSE_BRACKET        : 58
CLOSE_CURLY          : 16
CLOSE_PAREN          : 21 34 37 38
COMMA                : 13 62 63
DISJOINTCLASSES      : 10
DISJOINtWITH         : 
EQUAL                : 52 55 56
EQUIVALENTTO         : 22 23 24
EXACTLY              : 50
GREATER_THAN         : 53 55
INDIVIDUALS          : 59
INDIVIDUAL_NAME      : 61 62
LESS_THAN            : 54 56
MAX                  : 48
MIN                  : 49
NAMESPACE            : 57 58
NOT                  : 
ONLY                 : 
OPEN_BRACKET         : 58
OPEN_CURLY           : 16
OPEN_PAREN           : 19 34 37 38
OR                   : 8 17 20 23 32 42
PROPERTY_IDENTIFIER  : 19 20 21 35 36 40
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 45
SUBCLASSOF           : 6 7 8 9
THAT                 : 51
TYPE                 : 57 58
VALUE                : 47
error                : 

Nonterminals, with rules where they appear

aninhada             : 25 26 38
aux_fechamento       : 19 20
class_aux            : 27 28 32 33 34
classes              : 2 4 0
comma_and            : 24 33 39 43
covered_class        : 8 17 23
def_descriptions     : 6 24 26 28 30
defined_class        : 1 2
disjoint_classes_list : 10 13
disjoint_section     : 5
empty                : 11 60
enum_class           : 7 22
equivalentto_section : 14 15
individuals          : 16 59 62
individuals_section  : 5 14
namespace_type       : 36
primitive_class      : 3 4
quantifier           : 35 36 40 41
quantifier_aux       : 29 30 37 39 39 40 41 42 43
sizecheck            : 58
subclass_section     : 5 14

