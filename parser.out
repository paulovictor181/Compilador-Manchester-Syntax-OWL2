Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_BRACKET
    CLOSE_CURLY
    DISJOINtWITH
    NOT
    OPEN_BRACKET
    OPEN_CURLY
    PROPERTY_IDENTIFIER_SIMPLE

Grammar

Rule 0     S' -> classes
Rule 1     classes -> defined_class
Rule 2     classes -> defined_class classes
Rule 3     classes -> primitive_class
Rule 4     classes -> primitive_class classes
Rule 5     primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section
Rule 6     subclass_section -> SUBCLASSOF def_descriptions
Rule 7     subclass_section -> empty
Rule 8     disjoint_section -> DISJOINTCLASSES disjoint_classes_list
Rule 9     disjoint_section -> empty
Rule 10    disjoint_classes_list -> CLASS_IDENTIFIER
Rule 11    disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list
Rule 12    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
Rule 13    defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
Rule 14    def_descriptions -> CLASS_IDENTIFIER
Rule 15    def_descriptions -> namespace_type
Rule 16    def_descriptions -> CLASS_IDENTIFIER AND def_descriptions
Rule 17    def_descriptions -> CLASS_IDENTIFIER OR def_descriptions
Rule 18    def_descriptions -> quantifier_aux def_descriptions
Rule 19    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
Rule 20    def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
Rule 21    def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
Rule 22    quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
Rule 23    quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type
Rule 24    quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN
Rule 25    quantifier -> SOME
Rule 26    quantifier -> ALL
Rule 27    quantifier -> VALUE
Rule 28    quantifier -> MAX
Rule 29    quantifier -> MIN
Rule 30    quantifier -> EXACTLY
Rule 31    quantifier -> THAT
Rule 32    sizecheck -> EQUAL CARDINALITY
Rule 33    sizecheck -> GREATER_THAN CARDINALITY
Rule 34    sizecheck -> LESS_THAN CARDINALITY
Rule 35    sizecheck -> GREATER_THAN EQUAL CARDINALITY
Rule 36    sizecheck -> LESS_THAN EQUAL CARDINALITY
Rule 37    namespace_type -> NAMESPACE TYPE
Rule 38    namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
Rule 39    individuals_section -> INDIVIDUALS individuals
Rule 40    individuals_section -> empty
Rule 41    individuals -> INDIVIDUAL_NAME
Rule 42    individuals -> INDIVIDUAL_NAME COMMA individuals
Rule 43    empty -> <empty>

Terminals, with rules where they appear

ALL                  : 26
AND                  : 12 13 16
CARDINALITY          : 32 33 34 35 36
CLASS                : 5 12 13
CLASS_IDENTIFIER     : 5 10 11 12 12 13 13 14 16 17 19 20 20 22
CLOSE_BRACKET        : 
CLOSE_CURLY          : 
CLOSE_PAREN          : 21 24 38
COMMA                : 11 19 20 42
DISJOINTCLASSES      : 8
DISJOINtWITH         : 
EQUAL                : 32 35 36
EQUIVALENTTO         : 12 13
EXACTLY              : 30
GREATER_THAN         : 33 35
INDIVIDUALS          : 39
INDIVIDUAL_NAME      : 41 42
LESS_THAN            : 34 36
MAX                  : 28
MIN                  : 29
NAMESPACE            : 37 38
NOT                  : 
ONLY                 : 21
OPEN_BRACKET         : 
OPEN_CURLY           : 
OPEN_PAREN           : 21 24 38
OR                   : 17
PROPERTY_IDENTIFIER  : 19 20 20 21 22 23
PROPERTY_IDENTIFIER_SIMPLE : 
SOME                 : 19 20 20 25
SUBCLASSOF           : 6
THAT                 : 31
TYPE                 : 37 38
VALUE                : 27
error                : 

Nonterminals, with rules where they appear

classes              : 2 4 0
def_descriptions     : 6 12 13 16 17 18 19 21
defined_class        : 1 2
disjoint_classes_list : 8 11
disjoint_section     : 5
empty                : 7 9 40
individuals          : 39 42
individuals_section  : 5 12
namespace_type       : 15 23
primitive_class      : 3 4
quantifier           : 22 23
quantifier_aux       : 18 24
sizecheck            : 38
subclass_section     : 5

Parsing method: LALR

state 0

    (0) S' -> . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS           shift and go to state 4

    classes                        shift and go to state 1
    defined_class                  shift and go to state 2
    primitive_class                shift and go to state 3

state 1

    (0) S' -> classes .



state 2

    (1) classes -> defined_class .
    (2) classes -> defined_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 1 (classes -> defined_class .)
    CLASS           shift and go to state 4

    defined_class                  shift and go to state 2
    classes                        shift and go to state 5
    primitive_class                shift and go to state 3

state 3

    (3) classes -> primitive_class .
    (4) classes -> primitive_class . classes
    (1) classes -> . defined_class
    (2) classes -> . defined_class classes
    (3) classes -> . primitive_class
    (4) classes -> . primitive_class classes
    (12) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> . CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> . CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    $end            reduce using rule 3 (classes -> primitive_class .)
    CLASS           shift and go to state 4

    primitive_class                shift and go to state 3
    classes                        shift and go to state 6
    defined_class                  shift and go to state 2

state 4

    (12) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS . CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> CLASS . CLASS_IDENTIFIER subclass_section disjoint_section individuals_section

    CLASS_IDENTIFIER shift and go to state 7


state 5

    (2) classes -> defined_class classes .

    $end            reduce using rule 2 (classes -> defined_class classes .)


state 6

    (4) classes -> primitive_class classes .

    $end            reduce using rule 4 (classes -> primitive_class classes .)


state 7

    (12) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER . EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions
    (5) primitive_class -> CLASS CLASS_IDENTIFIER . subclass_section disjoint_section individuals_section
    (6) subclass_section -> . SUBCLASSOF def_descriptions
    (7) subclass_section -> . empty
    (43) empty -> .

    EQUIVALENTTO    shift and go to state 8
    SUBCLASSOF      shift and go to state 10
    DISJOINTCLASSES reduce using rule 43 (empty -> .)
    INDIVIDUALS     reduce using rule 43 (empty -> .)
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    subclass_section               shift and go to state 9
    empty                          shift and go to state 11

state 8

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO . CLASS_IDENTIFIER AND def_descriptions

    CLASS_IDENTIFIER shift and go to state 12


state 9

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section . disjoint_section individuals_section
    (8) disjoint_section -> . DISJOINTCLASSES disjoint_classes_list
    (9) disjoint_section -> . empty
    (43) empty -> .

    DISJOINTCLASSES shift and go to state 14
    INDIVIDUALS     reduce using rule 43 (empty -> .)
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    disjoint_section               shift and go to state 13
    empty                          shift and go to state 15

state 10

    (6) subclass_section -> SUBCLASSOF . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 16
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 11

    (7) subclass_section -> empty .

    DISJOINTCLASSES reduce using rule 7 (subclass_section -> empty .)
    INDIVIDUALS     reduce using rule 7 (subclass_section -> empty .)
    CLASS           reduce using rule 7 (subclass_section -> empty .)
    $end            reduce using rule 7 (subclass_section -> empty .)


state 12

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER . AND def_descriptions

    AND             shift and go to state 23


state 13

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section . individuals_section
    (39) individuals_section -> . INDIVIDUALS individuals
    (40) individuals_section -> . empty
    (43) empty -> .

    INDIVIDUALS     shift and go to state 25
    CLASS           reduce using rule 43 (empty -> .)
    $end            reduce using rule 43 (empty -> .)

    individuals_section            shift and go to state 24
    empty                          shift and go to state 26

state 14

    (8) disjoint_section -> DISJOINTCLASSES . disjoint_classes_list
    (10) disjoint_classes_list -> . CLASS_IDENTIFIER
    (11) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 28

    disjoint_classes_list          shift and go to state 27

state 15

    (9) disjoint_section -> empty .

    INDIVIDUALS     reduce using rule 9 (disjoint_section -> empty .)
    CLASS           reduce using rule 9 (disjoint_section -> empty .)
    $end            reduce using rule 9 (disjoint_section -> empty .)


state 16

    (6) subclass_section -> SUBCLASSOF def_descriptions .

    DISJOINTCLASSES reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    INDIVIDUALS     reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    CLASS           reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)
    $end            reduce using rule 6 (subclass_section -> SUBCLASSOF def_descriptions .)


state 17

    (14) def_descriptions -> CLASS_IDENTIFIER .
    (16) def_descriptions -> CLASS_IDENTIFIER . AND def_descriptions
    (17) def_descriptions -> CLASS_IDENTIFIER . OR def_descriptions

    DISJOINTCLASSES reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    $end            reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 14 (def_descriptions -> CLASS_IDENTIFIER .)
    AND             shift and go to state 29
    OR              shift and go to state 30


state 18

    (15) def_descriptions -> namespace_type .

    DISJOINTCLASSES reduce using rule 15 (def_descriptions -> namespace_type .)
    INDIVIDUALS     reduce using rule 15 (def_descriptions -> namespace_type .)
    CLASS           reduce using rule 15 (def_descriptions -> namespace_type .)
    $end            reduce using rule 15 (def_descriptions -> namespace_type .)
    CLOSE_PAREN     reduce using rule 15 (def_descriptions -> namespace_type .)


state 19

    (18) def_descriptions -> quantifier_aux . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    quantifier_aux                 shift and go to state 19
    def_descriptions               shift and go to state 31
    namespace_type                 shift and go to state 18

state 20

    (19) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER . ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (22) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (25) quantifier -> . SOME
    (26) quantifier -> . ALL
    (27) quantifier -> . VALUE
    (28) quantifier -> . MAX
    (29) quantifier -> . MIN
    (30) quantifier -> . EXACTLY
    (31) quantifier -> . THAT

    SOME            shift and go to state 32
    ONLY            shift and go to state 33
    ALL             shift and go to state 35
    VALUE           shift and go to state 36
    MAX             shift and go to state 37
    MIN             shift and go to state 38
    EXACTLY         shift and go to state 39
    THAT            shift and go to state 40

    quantifier                     shift and go to state 34

state 21

    (24) quantifier_aux -> OPEN_PAREN . quantifier_aux CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    PROPERTY_IDENTIFIER shift and go to state 42
    OPEN_PAREN      shift and go to state 21

    quantifier_aux                 shift and go to state 41

state 22

    (37) namespace_type -> NAMESPACE . TYPE
    (38) namespace_type -> NAMESPACE . TYPE OPEN_PAREN sizecheck CLOSE_PAREN

    TYPE            shift and go to state 43


state 23

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 44
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 24

    (5) primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .

    CLASS           reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)
    $end            reduce using rule 5 (primitive_class -> CLASS CLASS_IDENTIFIER subclass_section disjoint_section individuals_section .)


state 25

    (39) individuals_section -> INDIVIDUALS . individuals
    (41) individuals -> . INDIVIDUAL_NAME
    (42) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 46

    individuals                    shift and go to state 45

state 26

    (40) individuals_section -> empty .

    CLASS           reduce using rule 40 (individuals_section -> empty .)
    $end            reduce using rule 40 (individuals_section -> empty .)


state 27

    (8) disjoint_section -> DISJOINTCLASSES disjoint_classes_list .

    INDIVIDUALS     reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    CLASS           reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)
    $end            reduce using rule 8 (disjoint_section -> DISJOINTCLASSES disjoint_classes_list .)


state 28

    (10) disjoint_classes_list -> CLASS_IDENTIFIER .
    (11) disjoint_classes_list -> CLASS_IDENTIFIER . COMMA disjoint_classes_list

    INDIVIDUALS     reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    CLASS           reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    $end            reduce using rule 10 (disjoint_classes_list -> CLASS_IDENTIFIER .)
    COMMA           shift and go to state 47


state 29

    (16) def_descriptions -> CLASS_IDENTIFIER AND . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 48
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 30

    (17) def_descriptions -> CLASS_IDENTIFIER OR . def_descriptions
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 49
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 31

    (18) def_descriptions -> quantifier_aux def_descriptions .

    DISJOINTCLASSES reduce using rule 18 (def_descriptions -> quantifier_aux def_descriptions .)
    INDIVIDUALS     reduce using rule 18 (def_descriptions -> quantifier_aux def_descriptions .)
    CLASS           reduce using rule 18 (def_descriptions -> quantifier_aux def_descriptions .)
    $end            reduce using rule 18 (def_descriptions -> quantifier_aux def_descriptions .)
    CLOSE_PAREN     reduce using rule 18 (def_descriptions -> quantifier_aux def_descriptions .)


state 32

    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (25) quantifier -> SOME .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    CLASS_IDENTIFIER shift and go to state 50
    NAMESPACE       reduce using rule 25 (quantifier -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 25 (quantifier -> SOME .) ]


state 33

    (21) def_descriptions -> PROPERTY_IDENTIFIER ONLY . OPEN_PAREN def_descriptions CLOSE_PAREN

    OPEN_PAREN      shift and go to state 51


state 34

    (22) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . CLASS_IDENTIFIER
    (23) quantifier_aux -> PROPERTY_IDENTIFIER quantifier . namespace_type
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 52
    NAMESPACE       shift and go to state 22

    namespace_type                 shift and go to state 53

state 35

    (26) quantifier -> ALL .

    CLASS_IDENTIFIER reduce using rule 26 (quantifier -> ALL .)
    NAMESPACE       reduce using rule 26 (quantifier -> ALL .)


state 36

    (27) quantifier -> VALUE .

    CLASS_IDENTIFIER reduce using rule 27 (quantifier -> VALUE .)
    NAMESPACE       reduce using rule 27 (quantifier -> VALUE .)


state 37

    (28) quantifier -> MAX .

    CLASS_IDENTIFIER reduce using rule 28 (quantifier -> MAX .)
    NAMESPACE       reduce using rule 28 (quantifier -> MAX .)


state 38

    (29) quantifier -> MIN .

    CLASS_IDENTIFIER reduce using rule 29 (quantifier -> MIN .)
    NAMESPACE       reduce using rule 29 (quantifier -> MIN .)


state 39

    (30) quantifier -> EXACTLY .

    CLASS_IDENTIFIER reduce using rule 30 (quantifier -> EXACTLY .)
    NAMESPACE       reduce using rule 30 (quantifier -> EXACTLY .)


state 40

    (31) quantifier -> THAT .

    CLASS_IDENTIFIER reduce using rule 31 (quantifier -> THAT .)
    NAMESPACE       reduce using rule 31 (quantifier -> THAT .)


state 41

    (24) quantifier_aux -> OPEN_PAREN quantifier_aux . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 54


state 42

    (22) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (25) quantifier -> . SOME
    (26) quantifier -> . ALL
    (27) quantifier -> . VALUE
    (28) quantifier -> . MAX
    (29) quantifier -> . MIN
    (30) quantifier -> . EXACTLY
    (31) quantifier -> . THAT

    SOME            shift and go to state 55
    ALL             shift and go to state 35
    VALUE           shift and go to state 36
    MAX             shift and go to state 37
    MIN             shift and go to state 38
    EXACTLY         shift and go to state 39
    THAT            shift and go to state 40

    quantifier                     shift and go to state 34

state 43

    (37) namespace_type -> NAMESPACE TYPE .
    (38) namespace_type -> NAMESPACE TYPE . OPEN_PAREN sizecheck CLOSE_PAREN

  ! shift/reduce conflict for OPEN_PAREN resolved as shift
    DISJOINTCLASSES reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    INDIVIDUALS     reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    CLASS           reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    $end            reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    CLOSE_PAREN     reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    CLASS_IDENTIFIER reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    PROPERTY_IDENTIFIER reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    NAMESPACE       reduce using rule 37 (namespace_type -> NAMESPACE TYPE .)
    OPEN_PAREN      shift and go to state 56

  ! OPEN_PAREN      [ reduce using rule 37 (namespace_type -> NAMESPACE TYPE .) ]


state 44

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions . individuals_section
    (13) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .
    (39) individuals_section -> . INDIVIDUALS individuals
    (40) individuals_section -> . empty
    (43) empty -> .

  ! reduce/reduce conflict for CLASS resolved using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
  ! reduce/reduce conflict for $end resolved using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 13 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     shift and go to state 25

  ! CLASS           [ reduce using rule 43 (empty -> .) ]
  ! $end            [ reduce using rule 43 (empty -> .) ]

    individuals_section            shift and go to state 57
    empty                          shift and go to state 26

state 45

    (39) individuals_section -> INDIVIDUALS individuals .

    CLASS           reduce using rule 39 (individuals_section -> INDIVIDUALS individuals .)
    $end            reduce using rule 39 (individuals_section -> INDIVIDUALS individuals .)


state 46

    (41) individuals -> INDIVIDUAL_NAME .
    (42) individuals -> INDIVIDUAL_NAME . COMMA individuals

    CLASS           reduce using rule 41 (individuals -> INDIVIDUAL_NAME .)
    $end            reduce using rule 41 (individuals -> INDIVIDUAL_NAME .)
    COMMA           shift and go to state 58


state 47

    (11) disjoint_classes_list -> CLASS_IDENTIFIER COMMA . disjoint_classes_list
    (10) disjoint_classes_list -> . CLASS_IDENTIFIER
    (11) disjoint_classes_list -> . CLASS_IDENTIFIER COMMA disjoint_classes_list

    CLASS_IDENTIFIER shift and go to state 28

    disjoint_classes_list          shift and go to state 59

state 48

    (16) def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .

    DISJOINTCLASSES reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    INDIVIDUALS     reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLASS           reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    $end            reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)
    CLOSE_PAREN     reduce using rule 16 (def_descriptions -> CLASS_IDENTIFIER AND def_descriptions .)


state 49

    (17) def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .

    DISJOINTCLASSES reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    INDIVIDUALS     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLASS           reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    $end            reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)
    CLOSE_PAREN     reduce using rule 17 (def_descriptions -> CLASS_IDENTIFIER OR def_descriptions .)


state 50

    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER

    COMMA           shift and go to state 60


state 51

    (21) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN . def_descriptions CLOSE_PAREN
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    CLASS_IDENTIFIER shift and go to state 17
    PROPERTY_IDENTIFIER shift and go to state 20
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 61
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 52

    (22) quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .

    CLASS_IDENTIFIER reduce using rule 22 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    PROPERTY_IDENTIFIER reduce using rule 22 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    NAMESPACE       reduce using rule 22 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    OPEN_PAREN      reduce using rule 22 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 22 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER .)


state 53

    (23) quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .

    CLASS_IDENTIFIER reduce using rule 23 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    PROPERTY_IDENTIFIER reduce using rule 23 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    NAMESPACE       reduce using rule 23 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    OPEN_PAREN      reduce using rule 23 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)
    CLOSE_PAREN     reduce using rule 23 (quantifier_aux -> PROPERTY_IDENTIFIER quantifier namespace_type .)


state 54

    (24) quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .

    CLASS_IDENTIFIER reduce using rule 24 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 24 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    NAMESPACE       reduce using rule 24 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    OPEN_PAREN      reduce using rule 24 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 24 (quantifier_aux -> OPEN_PAREN quantifier_aux CLOSE_PAREN .)


state 55

    (25) quantifier -> SOME .

    CLASS_IDENTIFIER reduce using rule 25 (quantifier -> SOME .)
    NAMESPACE       reduce using rule 25 (quantifier -> SOME .)


state 56

    (38) namespace_type -> NAMESPACE TYPE OPEN_PAREN . sizecheck CLOSE_PAREN
    (32) sizecheck -> . EQUAL CARDINALITY
    (33) sizecheck -> . GREATER_THAN CARDINALITY
    (34) sizecheck -> . LESS_THAN CARDINALITY
    (35) sizecheck -> . GREATER_THAN EQUAL CARDINALITY
    (36) sizecheck -> . LESS_THAN EQUAL CARDINALITY

    EQUAL           shift and go to state 63
    GREATER_THAN    shift and go to state 64
    LESS_THAN       shift and go to state 65

    sizecheck                      shift and go to state 62

state 57

    (12) defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .

    CLASS           reduce using rule 12 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)
    $end            reduce using rule 12 (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions individuals_section .)


state 58

    (42) individuals -> INDIVIDUAL_NAME COMMA . individuals
    (41) individuals -> . INDIVIDUAL_NAME
    (42) individuals -> . INDIVIDUAL_NAME COMMA individuals

    INDIVIDUAL_NAME shift and go to state 46

    individuals                    shift and go to state 66

state 59

    (11) disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .

    INDIVIDUALS     reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    CLASS           reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)
    $end            reduce using rule 11 (disjoint_classes_list -> CLASS_IDENTIFIER COMMA disjoint_classes_list .)


state 60

    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA . def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (14) def_descriptions -> . CLASS_IDENTIFIER
    (15) def_descriptions -> . namespace_type
    (16) def_descriptions -> . CLASS_IDENTIFIER AND def_descriptions
    (17) def_descriptions -> . CLASS_IDENTIFIER OR def_descriptions
    (18) def_descriptions -> . quantifier_aux def_descriptions
    (19) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> . PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> . PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (37) namespace_type -> . NAMESPACE TYPE
    (38) namespace_type -> . NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN
    (22) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> . PROPERTY_IDENTIFIER quantifier namespace_type
    (24) quantifier_aux -> . OPEN_PAREN quantifier_aux CLOSE_PAREN

    PROPERTY_IDENTIFIER shift and go to state 67
    CLASS_IDENTIFIER shift and go to state 17
    NAMESPACE       shift and go to state 22
    OPEN_PAREN      shift and go to state 21

    def_descriptions               shift and go to state 68
    namespace_type                 shift and go to state 18
    quantifier_aux                 shift and go to state 19

state 61

    (21) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 69


state 62

    (38) namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 70


state 63

    (32) sizecheck -> EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 71


state 64

    (33) sizecheck -> GREATER_THAN . CARDINALITY
    (35) sizecheck -> GREATER_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 72
    EQUAL           shift and go to state 73


state 65

    (34) sizecheck -> LESS_THAN . CARDINALITY
    (36) sizecheck -> LESS_THAN . EQUAL CARDINALITY

    CARDINALITY     shift and go to state 74
    EQUAL           shift and go to state 75


state 66

    (42) individuals -> INDIVIDUAL_NAME COMMA individuals .

    CLASS           reduce using rule 42 (individuals -> INDIVIDUAL_NAME COMMA individuals .)
    $end            reduce using rule 42 (individuals -> INDIVIDUAL_NAME COMMA individuals .)


state 67

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER . SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (21) def_descriptions -> PROPERTY_IDENTIFIER . ONLY OPEN_PAREN def_descriptions CLOSE_PAREN
    (22) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier CLASS_IDENTIFIER
    (23) quantifier_aux -> PROPERTY_IDENTIFIER . quantifier namespace_type
    (25) quantifier -> . SOME
    (26) quantifier -> . ALL
    (27) quantifier -> . VALUE
    (28) quantifier -> . MAX
    (29) quantifier -> . MIN
    (30) quantifier -> . EXACTLY
    (31) quantifier -> . THAT

    SOME            shift and go to state 76
    ONLY            shift and go to state 33
    ALL             shift and go to state 35
    VALUE           shift and go to state 36
    MAX             shift and go to state 37
    MIN             shift and go to state 38
    EXACTLY         shift and go to state 39
    THAT            shift and go to state 40

    quantifier                     shift and go to state 34

state 68

    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .

    DISJOINTCLASSES reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    INDIVIDUALS     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLASS           reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    $end            reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)
    CLOSE_PAREN     reduce using rule 19 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA def_descriptions .)


state 69

    (21) def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLASS           reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    $end            reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 21 (def_descriptions -> PROPERTY_IDENTIFIER ONLY OPEN_PAREN def_descriptions CLOSE_PAREN .)


state 70

    (38) namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .

    DISJOINTCLASSES reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    INDIVIDUALS     reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    CLASS           reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    $end            reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    CLASS_IDENTIFIER reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    PROPERTY_IDENTIFIER reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    NAMESPACE       reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)
    OPEN_PAREN      reduce using rule 38 (namespace_type -> NAMESPACE TYPE OPEN_PAREN sizecheck CLOSE_PAREN .)


state 71

    (32) sizecheck -> EQUAL CARDINALITY .

    CLOSE_PAREN     reduce using rule 32 (sizecheck -> EQUAL CARDINALITY .)


state 72

    (33) sizecheck -> GREATER_THAN CARDINALITY .

    CLOSE_PAREN     reduce using rule 33 (sizecheck -> GREATER_THAN CARDINALITY .)


state 73

    (35) sizecheck -> GREATER_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 77


state 74

    (34) sizecheck -> LESS_THAN CARDINALITY .

    CLOSE_PAREN     reduce using rule 34 (sizecheck -> LESS_THAN CARDINALITY .)


state 75

    (36) sizecheck -> LESS_THAN EQUAL . CARDINALITY

    CARDINALITY     shift and go to state 78


state 76

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER
    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME . CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER
    (25) quantifier -> SOME .

  ! shift/reduce conflict for CLASS_IDENTIFIER resolved as shift
    CLASS_IDENTIFIER shift and go to state 79
    NAMESPACE       reduce using rule 25 (quantifier -> SOME .)

  ! CLASS_IDENTIFIER [ reduce using rule 25 (quantifier -> SOME .) ]


state 77

    (35) sizecheck -> GREATER_THAN EQUAL CARDINALITY .

    CLOSE_PAREN     reduce using rule 35 (sizecheck -> GREATER_THAN EQUAL CARDINALITY .)


state 78

    (36) sizecheck -> LESS_THAN EQUAL CARDINALITY .

    CLOSE_PAREN     reduce using rule 36 (sizecheck -> LESS_THAN EQUAL CARDINALITY .)


state 79

    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .
    (19) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA def_descriptions
    (20) def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER . COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER

    DISJOINTCLASSES reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    INDIVIDUALS     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLASS           reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    $end            reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    CLOSE_PAREN     reduce using rule 20 (def_descriptions -> PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER COMMA PROPERTY_IDENTIFIER SOME CLASS_IDENTIFIER .)
    COMMA           shift and go to state 60

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 32 resolved as shift
WARNING: shift/reduce conflict for OPEN_PAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for CLASS_IDENTIFIER in state 76 resolved as shift
WARNING: reduce/reduce conflict in state 44 resolved using rule (defined_class -> CLASS CLASS_IDENTIFIER EQUIVALENTTO CLASS_IDENTIFIER AND def_descriptions)
WARNING: rejected rule (empty -> <empty>) in state 44
